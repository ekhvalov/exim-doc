
.. _ch03_00:

====================================
Как Exim получает и доставляет почту
====================================

.. _ch03_01:

---------------
Общая философия
---------------
  
Exim спроектирован для работы на системах, постоянно связанных с интернетом, и
обрабатывающих значительный поток писем. В таких условиях, большинство
сообщений можно доставить немедленно. Следовательно, Exim не поддерживает
независимые очереди сообщений для специфических доменов или хостов, хотя в
действительности, пробует послать несколько сообщений в течение одного
SMTP-соединения, после того как хост был недоступен, также он умеет работать с
информацией о количестве повторов для каждого хоста.

.. _ch03_02:

---------------------
Управление политиками
---------------------

Управление политиками - это теперь важная особенность MTA, связанных с
интернетом. Возможно, их самое важное назначение - это не допустить
использование MTA в качестве открытого релея людьми отсылающими много спама, и
желающими замаскировать его источник. Exim предоставляет гибкие средства для
управления политиками применяемыми к входящей почте:

* Exim4 (в отличие от предыдущих версий Exim) в качестве политик управления,
  используются *Списки контроля доступа* (*Access Control Lists* ACL). Каждый
  список является серией утверждений, разрешающих или запрещающих доступ. ACL
  могут использоваться на различных стадиях SMTP-диалога, при получении
  сообщения с удалённого хоста. Однако, обычное их местоположение - после
  каждой команды RCPT, и в самом конце сообщения. Системный администратор может
  определить условия для приёма или отклонения индивидуальных получателей, или
  всего сообщения целиком, соответственно, в этих двух точках (смотрите главу
  :ref:`40 <ch40_00>`). Отказ в доступе приводит к появлению SMTP-ошибки с
  соответствующим кодом.  

* Также, ACL, доступны для созданного локально сообщения, не полученного по
  SMTP. В этом случае, единственно доступными действиями являются отклонение
  или принятие письма в целом. 

* Когда Exim собран с расширением сканирования контента, средства механизма
  ACL позволяют передавать сообщения внешней антивирусной или антиспамовой
  программе. Результат проверки возвращается ACL, который может использовать
  его для решения того, что делать с сообщением.  
  
* Когда сообщение получено с удаленного, или локального хоста, но до отправки
  финального подтверждения, может быть выполнена локальная функция С,
  называемая *local_scan()* для анализа сообщения, и принятия решения о его
  приёме, или отклонении (смотрите главу :ref:`42 <ch42_00>`). Если сообщение
  принимается, функция может изменить список получателей.

* Использование механизма *local_scan()* - это другой способ вызвать внешнее
  сканирующее программное обеспечение. Добавочный пакет **SA-Exim** использует
  этот путь. Этот параметр не требует чтобы Exim был собран с поддержкой
  сканирования контента.  
  
* После того, как сообщение было принято, дальнейшие проверяющие механизмы
  доступны в виде *системного фильтра* (*system filter* - смотрите главу
  :ref:`43 <ch43_00>`). Он выполняется в начале каждого процесса доставки.

.. _ch03_03:

------------------------
Пользовательские фильтры
------------------------

В обычной конфигурации Exim`a, пользователи могут запускать частные
(собственные) фильтры, устанавливая соответствующие файлы *.forward* в своих
домашних директориях. Смотрите главу :ref:`22 <ch22_00>` (о переадресовывающем
маршрутизаторе) конфигурации нуждающейся в этом, и отдельный документ
*интерфейсы фильтрации почты Exim`a* (*Exim’s interfaces to mail filtering*)
для получения дополнительных деталей. Доступны два различных вида фильтрации: 

* Фильтры Sieve написаные на стандартном языке фильтров, как определено в
  :rfc:`3028`.

* Фильтры Exim, написанные с использованием уникального синтаксиса Exim,
  являющегося более мощным, чем Sieve, которому он предшествует.

Пользовательские фильтры выполняются как часть процесса маршрутизации,
описанного ниже.

.. _ch03_04:

-----------------------
Идентификация сообщений
-----------------------

Каждому сообщению, обрабатываемому Exim`ом, присваивается *идентификатор
сообщения*(*message id*) длинной в шестнадцать символов. Они разделяются на три
части, с дефисом в качестве разделителя, например *16VDhn-0001bo-D3*. Каждая
часть - последовательность букв и цифр, обычно - число кодированное по
основанию 62. Однако, в операционной системе Darwin (Mac OS X) и когда Exim
собран для запуска в Cygwin, взамен используется основание 36 (уход от
использования строчных букв), поскольку идентификатор сообщения используется
для создания имени файлов, а в этих операционных системах строчные и прописные
буквы в именах файлов не всегда различаются.

Способ формирования идентификатора сообщения изменился во время развития Exim.
Более ранние версии полагались на операционную систему не использующую заново
идентификатор процесса (PID) в течение одной секунды. На современных
операционных системах, такое предположение более не может быть сделано, таким
образом, алгоритм должен был быть изменён. Для сохранения обратной
совместимости, старый формат идентификатора сообщения также поддерживается,
поэтому следующие правила выглядят несколько эксцентрично:

* Первые шесть символов идентификатора сообщения - время в которое началось
  получение сообщения, с детализацией до одной секунды. Таким образом, это поле
  содержит число секунд с начала эпохи (нормальное представление даты и времени
  в UNIX).  

* После первого дефиса, следующие шесть символов это идентификатор процесса
  получившего сообщение.

* Для двух заключительных символов есть два варианта:

 1. Если *localhost_number* не установлен, это значение - дробная часть времени
    приёма, обычно в частях 1/2000 секунды, но для систем, которые должны
    использовать основание 36 вместо основания 62 (из-за нечувствительных к
    регистру файловых систем), модуль - 1/1000 секунды. 

 2. Если *localhost_number* установлена, то она умножается на 200(100) и
    добавляется к дробной части времени, которое в этом случае находится в
    частях 1/200(1/100) секунды.

После получения сообщения, Exim ждёт следующей временной отметки (необходимого
разрешения) перед переходом к следующей стадии, на случай, если другое сообщение
получено тем же процессом, или другим процессом с тем же (заново использованным)
pid, для гарантирования, что время будет отличаться. В большинстве случаев,
время успевает измениться при получения сообщения.

.. _ch03_05:

---------------
Получение почты
---------------

Exim может получать почту с других хостов лишь единственным способом, с
использованием SMTP через TCP/IP, когда адреса отправителя и получателя
передаются через команды SMTP. Однако, из локально работающих процессов (таких
как пользовательские MUA), можно отправить почту несколькими способами:

* Если процесс запускает Exim с параметр **-bm**, сообщение читается
  неинтерактивно (обычно через трубу (pipe)), с получателями взятыми из
  командной строки или, если задан параметр **-t** из тела сообщения.
  
* Если процесс запускает Exim с параметром **-bS**, сообщение также читается
  неинтерактивно, но в этом случае получатели перечислены в начале сообщения в
  ряде команд SMTP RCPT, завершаемых командой DATA. Это - так называемый
  *пакетный SMTP (*batch SMTP*) формат, но это не совсем SMTP.  Команды SMTP -
  это просто еще один способ передать адреса конверта в неинтерактивном
  представлении.

* Если процесс запускает Exim с параметром **-bs**, сообщение читается
  интерактивно, с использованием протокола SMTP. Двухсторонняя труба (pipe)
  обычно используется для обмена данными между локальным процессом и процессом
  Exim'a. Это *настоящий* SMTP, и обрабатывается он таким же образом как SMTP
  через TCP/IP. Например, ACL`ы для SMTP-команд используются в этой форме
  подачи сообщения.  
  
* Локальный процесс может сделать вызов TCP/IP к обратной петле
  (127.0.0.1) хоста, или любому другому из его IP-адресов. Получая сообщения,
  Exim не обрабатывает адрес обратной петли по особенному. Он обрабатывает такие
  подключения таким же образом как и подключения с других хостов.

В трёх случаях, когда не используется TCP/IP, адрес отправителя составляется из
логина пользователя, вызывавшего Exim и дополняется именем домена для
дополнения по умолчанию (которое может быть задано конфигурационным параметром
**qualify_domain**). Для локального, или пакетного SMTP, адрес отправителя
передаваемый командой SMTP MAIL игнорируется. Однако, системный администратор
может позволить определённым пользователям (*trusted users*) безусловно задать
другой адрес отправителя, или всем пользователям задавать определённую форму
иного адреса отправителя. Параметр **-f** или команда SMTP MAIL используется
для задания этих адресов [#]_. Смотрите раздел :ref:`5.2 <ch05_02>` для
получения деталей о *trusted users*, и параметр **untrusted_set_sender** для
подробностей о способе изменить адрес недоверенным пользователям.

Сообщения полученные любым неинтерактивным механизмом проверяются не-SMTP ACL,
если они заданы. Сообщения полученные с использованием SMTP (по TCP/IP, или от
локального процесса) могут быть проверены многими ACL, работающими в разные
моменты времени сеанcа SMTP. Может быть отклонено всё сообщение, или
индивидуальные получатели,  если они не отвечают требованиям локальных политик.
Функция *local_scan()* (смотрите главу :ref:`42 <ch42_00>`) запускается для
всех входящих сообщений.

Exim может быть настроен не начинать процесс немедленной доставки после
получения сообщения, эта политика может быть безусловной, или зависить от числа
входящих SMTP соединений или нагрузки на систему. В таких ситуациях новые
сообщения остаются в очереди до тех пор, пока обработчик очереди не выберет их
из неё. Однако, в стандартных конфигурациях при нормальных условиях, доставка
сообщений начинается сразу же после получения сообщения.


.. _ch03_06:

----------------------------
Обработка входящих сообщений
----------------------------

Когда Exim принимает сообщение, он записывает его в два файла, в
буферном каталоге. Первый содержит информацию конверта, текущий статус сообщения,
и строки заголовка, второй содержит тело сообщения. Имена обоих файлов состоят
из идентификатора сообщения, с добавлением ``-H`` для файла с заголовками и
конвертом, и ``-D`` для файла с данными.

По умолчанию, все эти файлы содержатся в одном каталоге, называемом *input*,
внутри главного беферного каталога Exim. Некоторые операционные системы не
очень хорошо работают, когда число файлов в директории становится большим; для
улучшения производительности, в таких случаях, может использоваться параметр
**split_spool_directory**. Он заставляет Exim распределять файлы входящих писем
по 62-м директориям, с именами в виде одиночных цифр и букв. Когда это сделано,
обработка очереди происходит покаталогово, вместо одновременной обработки всех
каталогов, это может увеличить производительность даже при небольшом количестве
файлов в каждой из директорий, даже если это количество файлов не влияет на
быстродействие файловой системы.

Информация конверта состоит из адреса отправителя сообщения и адресов
получателей. Эта информация является обособленной от любых адресов содержащихся
в строках заголовков. Статус сообщения включается в список получателей, которые
уже получили сообщение. Формат первого файла в буфферном каталоге описан в
главе :ref:`53 <ch53_00>`.

Перезапись адресов, если она задана в конфигурационной секции **rewrite**
(смотрите главу :ref:`31 <ch31_00>`), производится однократно и для всех
входящих адресов, и в строках заголовков и в конверте, во время приёма
сообщения. Если во время доставки созданы новые адреса (например, через
подстановку синонима), эти новые адреса перезаписываются в тот момент когда они
создаются. Во время фактической доставки сообщения может быть дальнейшая
перезапись; поскольку это транспортный параметр, она может быть различной для
разных типов доставки. Также возможно задать добавление, или удаление
определённых строк заголовков, во время доставки сообщения (смотрите главы
:ref:`15 <ch15_00>` и :ref:`24 <ch24_00>`).


.. _ch03_07:

--------------------
Цикл жизни сообщения
--------------------

Сообщение остаётся в буфферном каталоге до полной доставки получателям или
ошибочному адресу [#]_, или до уничтожения администратором или пользователем
изначально создавшим его. В случае, когда доставка не может быть произведена -
например, когда сообщение не может быть доставлено получателю, и не может быть
возвращено отправителю, то оно отмечается как *замороженное* (*frozen*) в
буферном каталоге и больше не предпринимается попыток его доставки.

Администратор может *разморозить* такие сообщения, когда проблема исправлена, а
также может вручную заморозить отдельные сообщения. Кроме того, администратор
может вызывать принудительную ошибку доставки, вызвав отправку сообщения о
недоставке (рикошет).

Параметры, называемые **ignore_bounce_errors_after** и
**timeout_frozen_after**, отбрасывают замороженные сообщения после
определённого времени. Первое применяется только к замороженным сообщениям о
недоставке, вторые - к любым замороженным сообщениям.

Когда Exim работает с сообщением, он записывает информацию о каждой попытке
доставки в свой лог-файл. Туда включаются успешные, неуспешные и отложенные
доставки для каждого получателя (смотрите главу :ref:`49 <ch49_00>`). Строки
логов также пишутся в отдельные файлы “message log” для каждого сообщения. Эти
логи - исключительно для использования администратором, и обычно удаляются
вместе вместе с файлами буфера, когда обработка сообщения завершена.
Использование индивидуальных логов сообщений может быть отключено установкой
параметра **no_message_logs**; это может дать прирост производительности на
очень загруженных системах.

Вся информация необходимая Exim`y для доставки сохраняется в первом буферном
файле, наряду со строками заголовка. Когда происходит успешная доставка, адрес
немедленно вписывается в конец журнального файла, имя которого - идентификатор
сообщения с добавленным ``-J``. В конце выполненной доставки, если остались
адреса, которые необходимо доставить позднее, первый spool-файл (``-H`` - файл)
обновляется, для указания какой момент доставки сейчас, и журнальный файл
удаляется. Обновление буферного файла завершается записью нового файла и
переименовыванием его, для минимизации возможной потери данных.

Если происходит падение системы или программы после успешной доставки, но до
обновления буферного файла, журнал остаётся лежать [#]_. В следующий раз, когда
Exim пытается доставить сообщение, он читает журнал и обновляет буферный файл
до обработки. Это минимизирует возможность двойной доставки, вызванную сбоями.


.. _ch03_08:

-----------------------------
Обработка адреса для доставки
-----------------------------

Главную доставку обрабатывают элементы Exim называемые *маршрутизаторы*
(*routers*) и *транспорты* (*transports*), и вместе они известны как *драйверы*
(*drivers*). Их код распространяется с исходным дистрибутивом, и параметр
компиляции задают, какие из них включаются в бинарный файл. Параметр выполнения
(во время выполнения) определяют, какие из них фактически используются для
доставки сообщения.

Каждый драйвер, который задан в выполняемой конфигурации - *экземпляр*
(*instance*) того специфического типа драйвера. Многократное использование
одного маршрутизатора разрешается; например, вы можете задать несколько
различных транспортов **smtp**, каждый с различными значениями параметра,
например задающие иные порты или таймауты. В дальнейшем, обычно, будет
использоваться само название драйвера (т.е. одна, определённая конфигурация), и
общее название драйвера, при обсуждении общих особенностей драйвера.

*Маршрутизатор* (*router*) - драйвер, работающий с адресами, также определяет
каким образом должна произойти его доставка, задавая определённый транспорт,
или преобразуя адрес в один или несколько новых адресов [#]_. Маршрутизатор
также может явно [#]_ вызвать ошибку адреса, вызывая доставку сообщения о
недоставке.

*Транспорт” (*transport*) - драйвер, который передаёт копию сообщения из
директории буфера Exim`a в другое место назначения. Есть два вида транспортов:
локальный, с местом назначения в файле или трубе на локальном хосте, и
удалённый - с местом назначения на иных хостах. Сообщение передаётся
определённому транспорту как результат успешной маршрутизации. Если у сообщения
несколько получателей, оно может быть передано нескольким различным
транспортам.

Адрес обрабатывается передачей его каждому настроенному маршрутизатору, по
очереди, подчиняясь определённым условиям, до тех пор пока маршрутизатор не
примет адрес, или определит, что надо вызвать ошибку адреса [#]_. Скоро этот
процесс будет описан в деталях. Вначале, как простой пример, рассмотрим, как
каждый адрес получателя в сообщении обрабатывается в небольшой конфигурации из
трёх маршрутизаторов.

Для того, чтобы сделать это более конкретным примером, описание сделано в
терминах некоторых актуальных маршрутизаторов, но помните, что это лишь пример.
Вы можете настроить маршрутизаторы Exim`a несколькими разными способами, и
может быть любое число маршрутизаторов в конфигурации.

Обычно первый маршрутизатор, определённый в конфигурации, занимается обработкой
адресов в доменах, которые не распознаны, как относящиеся к локальному хосту.
Обычно это адреса произвольных доменов интернета. Установлено предварительное
условие ищущее домены относящиеся к локальному хосту, и маршрутизатор
выполняется для адресов не соответствующих условию. Обычно, этот маршрутизатор
ищет домены в DNS, для нахождения хостов к которым направляется этот адрес.
Если поиск успешен, адрес передаётся подходящему SMTP-транспорту; если
неуспешен, маршрутизатор настроен на отказ адреса [#]_.

Второй маршрутизатор достигается лишь в случае, если домен распознан как
“принадлежаший” локальной машине. Этот маршрутизатор делает переадресацию -
известную также как перенаправление, подстановка синонима. Когда он создает
один или больше новых адресов из оригинального, каждый из них
маршрутизитируется независимо от начального. Иначе маршрутизатор может вызвать
отказ адреса, или просто отказаться обрабатывать его, передав следующему
маршрутизатору.

Последний маршрутизатор во многих конфигурациях проверяет, принадлежит ли адрес
локальным почтовым ящикам. Предварительное условие может содержать проверку -
является ли локальная часть именем логина пользователя, или он ищет её в файле
или базе данных. Если эти предварительный условия не выполнены, маршрутизатор
отклоняется, и на этом маршрутизаторы заканчиваются. Когда такое происходит
[#]_, происходит рикошет [#]_.


.. _ch03_09:

-------------------------------------
Обработка адреса в режиме верификации
-------------------------------------

Маршрутизаторы Exim`a используются для принятия решения о том, как доставлять
почту, а также для *проверки адреса* (*address verification*). Запрос проверки
может быть запрошен как одна из проверок, которые должны быть выполнены в ACL
для входящих сообщений, для обоих адресов - отправителя и получателя, и они
могут быть проверены с помощью параметра **-bv** и **-bvs** командной строки.

Когда адрес проверяется, маршрутизаторы работают в *режиме проверки* (*verify
mode*). Это не изменяет порядка выполнения маршрутизаторов, но может изменять
результат их работы. Это значит, что маршрутизатор может быть пропущен или
вынужден вести себя иначе при проверке. Типичным примером может быть
конфигурация, в которой первый маршрутизатор посылает все сообщения в
сканирующую программу, если они не были просканированы ранее. Таким образом,
первый маршрутизатор принимает все адреса без каких бы то ни было проверок,
делая его бесполезным для проверки. Обычно для таких маршрутизаторов,
устанавливается параметр **no_verify**, заставляя его быть пропущенным в
проверяющем режиме.

.. _ch03_10:

--------------------------------
Работа отдельного маршрутизатора
--------------------------------

Как объяснено в примере выше, несколько предварительных условий проверяются до
запуска маршрутизатора. Если любое условие не встречается, маршрутизатор
пропускается и адрес передаётся следующему маршрутизатору. Когда все
предварительные условия для маршрутизатора соблюдены, он выполняется. Что
происходит дальше, зависит от результата, являющегося одним из следующих:

* *accept*: маршрутизатор принимает адрес, и, или передаёт его транспорту, или
  создает один или более “дочерних” адресов. Обработка оригинального адреса
  прекращается, если параметр **unseen** не установлена на маршрутизаторе. Этот
  параметр может использоваться для многократных доставок, с различной
  маршрутизацией (например, для сохранения архивных копий сообщений). Когда
  параметр **unseen** установлен, адрес передаётся следующему маршрутизатору.
  Однако, обычно, **accept** означает конец маршрутизации. Любой дочерний
  адрес, созданный маршрутизатором, обрабатывается независимо, начиная с
  первого маршрутизатора по умолчанию. Можно изменить это, установкой параметра
  **redirect_router**, для определения с какого маршрутизатора начинается
  обработка дочерних адресов. В отличие от параметра **pass_router** (см.
  ниже), маршрутизатор, определённый **redirect_router** может быть в любом
  месте конфигурации.

* *pass*: Маршрутизатор распознаёт адрес, но не может сам его обработать. Он
  запрашивает отправку адреса другому маршрутизатору. По-умолчанию, адрес
  передаётся следующему маршрутизатору, но это может быть изменено установкой
  параметра **pass_router**. Однако (в отличие от **redirect_router**)
  названный маршрутизатор должен быть ниже текущего маршрутизатора (для
  избежания петель).

* *decline*: Маршрутизатор отказывается принимать адрес, поскольку вообще
  отказывается принимать их все. По-умолчанию, адрес передаётся следующему
  маршрутизатору, но это может быть предотвращено установкой параметра
  **no_more**. Когда **no_more** установлена, все последующие маршрутизаторы
  пропускаются. В действительности, **no_more** преобразует **decline** в
  **fail**.

* *fail*: Маршрутизатор решает, что адрес ошибочен, и ставит его в очередь на
  рикошет. Дальнейшая обработка адреса отсутствует, если параметр **unseen** не
  установлена на маршрутизаторе.

* *defer*: В настоящее время маршрутизатор не может обработать адрес. (Может
  быть недоступна БД, или таймаут DNS) Дальнейшая обработка адреса не
  производится для этой попытки доставки. Попытка обработать этот адрес будет
  произведена при следующей обработке этого сообщения.

* *error*: В маршрутизаторе какая-то ошибка (например, ошибка конфигурации).
  Действие - такое же как и для *defer*.

Если адрес достигает конца маршрутизаторов, и не принимается ни одним из них,
он срывается, как “unrouteable”. Ошибка по умолчанию, в такой ситуации -
“unrouteable address”, но можно установить своё сообщение, используя параметр
**cannot_route_message**. Она может быть установлена для любого маршрутизатора,
используется значение из последнего маршрутизатора “видевшего” адрес.

Иногда, при маршрутизации, вы хотите сделать ошибку доставки, вместо передачи
адреса для дальнейшей маршрутизации, когда одни условия совпадают, а другие
нет. Вы можете сделать это, при наличии второго маршрутизатора, который явно
делает доставку неудачной, когда необходимые условия выполняются. Маршрутизатор
**redirect** для этой цели имеет средство *fail*.


.. _ch03_11:

--------------------
Дублирующиеся адреса
--------------------

Как только маршрутизация завершена, Exim просматривает адреса, предназначенные
для локальных и удалённых транспортов, и отбрасывает любые найденные дубликаты
(повторения). В процессе этой проверки локальные части обрабатываются с учётом
регистра. Это происходит лишь при реальной доставке сообщения; при тестировании
маршрутизаторов с параметром **-bt** отображаются все адреса появившиеся в
процессе работы маршрутизации.

.. _ch03_12:

--------------------------------------
Предварительные условия маршрутизатора
--------------------------------------

Предварительные условия, проверяемые на каждом маршрутизаторе, перечислены ниже
в порядке их проверки. Индивидуальные конфигурационные параметры описаны более
подробно в главе :ref:`15 <ch15_00>`.

* Параметры **local_part_prefix** и **local_part_suffix** могут определять, что
  локальные части, обработанные маршрутизатором, имеют или должны иметь
  префиксы и/или суффиксы. Если принудительный аффикс (префикс или суффикс)
  отсутствуют, маршрутизатор пропускается. Эти условия проверяется первыми.
  Когда аффикс есть, он удаляется из локальной части до последующей обработки,
  включая оценку любых других условий.

* Маршрутизаторы могут назначаться для использования только когда не
  проверяется адрес, т.е. только в том случае, когда письмо маршрутизируется
  для доставки (или проверяется маршрутизация доставки). Если параметр
  **verify** установлен в “false”, при проверке адреса маршрутизатор
  пропускается. Установка параметра **verify** реально устанавливает два
  параметра - **verify_sender** и **verify_recipient**, которые независимо
  управляют использованием маршрутизатора для проверки отправителя и
  получателя. Вы можете установить эти параметры непосредственно, если хотите
  чтобы маршрутизатор использовал только один тип проверки.

* Если параметр **address_test** установлен в false, маршрутизатор
  пропускается, когда Exim запущен с параметром **-bt** для проверки
  маршрутизации адреса. Это может быть полезным, когда первый маршрутизатор
  посылает все новые сообщения для сканирования; это позволяет использовать
  **-bt** для проверки последующей маршрутизации доставки без необходимости
  моделировать эффект сканера.

* С помощью параметра **verify_only** можно настроить маршрутизаторы, только
  для работы в режиме проверки адреса.

* Отдельные маршрутизаторы могут быть явно пропущены, при проверке адресов
  переданных с помощью SMTP команды EXPN (смотрите параметр **expn**).

* Если установлен параметр **domains**, домен адреса должен быть в списке
  заданных доменов.

* Если установлен параметр **local_parts**, локальная часть адреса должна быть
  в списке заданных локальных частей. Если используются **local_part_prefix**
  или **local_part_suffix**, префикс или суффикс удаляются из локальной части
  перед проверкой. Если вы хотите произвести проверку предварительного условия
  на локальной части со включенными аффиксами, вы можете сделать это включением
  параметра **condition** (см. ниже), которая использует переменные
  $local_part, $local_part_prefix и $local_part_suffix по мере необходимости.

* Если установлен параметр **check_local_user**, локальная часть должна быть
  именем учётной записи на локальном хосте. Если эта проверка успешна, uid и
  gid локального пользователя помещаются в $local_user_uid и $local_user_gid, и
  пользовательская домашняя директория помещается в $home; эти значения могут
  использоваться в оставшихся предварительных условиях

* Если установлен параметр **router_home_directory**, это раскрывается в этой
  точке, поскольку оно отменяет значение $home. Если бы раскрытие откладывали
  на более позднее или ранее время, то значение $home установленное
  **check_local_user** использовалось бы в последующих проверках. Наличие двух
  различных значений $home в одном и том же маршрутизаторе может привести к
  беспорядку.

* Если установлен параметр **senders**, адрес отправителя конверта должен быть
  задан в наборе адресов.

* Если установлен параметр **require_files**, проверяется существование или
  отсутствие указанных файлов.

* Если установлен параметр **condition**, о её значение раскрывается и
  проверяется. Этот параметр использует раскрытие строк, для разрешения
  возможности установить собственные предварительные условия. Раскрываемые
  строки описаны в главе :ref:`11 <ch11_00>`.

Отметьте, что **require_files** находится в конце списка, таким образом, вы не
можете использовать её для проверки существования файлов в которых ищется
домен, локальная часть, или отправитель. Однако, поскольку все эти параметры
раскрыты, вы можете использовать раскрытие условия **exists** для создания
проверок внутри условий. Параметр **require_files** предназначен для проверки
файлов, которые маршрутизатор может собираться использовать внутри себя, или
которые необходимы определённым транспортам (например, *.procmailrc*).

.. _ch03_13:

------------------
Доставка в деталях
------------------

Когда необходимо доставить сообщение, последовательность событий такова:

* Если определён общесистемный фильтр, то сообщение передаётся ему. Фильтр
  может добавить в сообщение получателей, заменить получателей, отказать
  сообщению, создаст новое сообщение, или сделать вынужденную невозможность
  доставки сообщения. Формат файла системного фильтра такой же как у
  пользовательских фильтров Exim`a, описанный в отдельном документе
  называющемся “Exim’s interfaces to mail filtering”. (Отметьте: Sieve не может
  использоваться в файлах системного фильтра). 
  
  Некоторые дополнительные особенности доступны в системном фильтре - смотрите
  главу :ref:`43 <ch43_00>` для получения дополнительной информации. Заметьте,
  что сообщение передаётся системному фильтру только один раз за попытку
  доставки, однако он установлен у многих получателей. Однако, если происходит
  несколько попыток доставки, при невозможности доставить немедленно один, или
  несколько адресов, системный фильтр выполняется каждый раз. Условие
  **first_delivery** может использоваться для обнаружения первого запуска
  системного фильтра.

* Каждый адрес получателя предлагается по очереди каждому настроенному
  маршрутизатору, следуя его предварительным условиям, пока один из
  маршрутизаторов не сможет его обработать. Если ни один маршрутизатор не может
  обработать адрес, т.е. они все отклоняются, адрес неверный. Поскольку
  маршрутизаторы могут быть целями разных доменов, несколько разных локальных
  доменов можно обработать независимо друг от друга.

* Маршрутизатор принимающий адрес, может назначить его локальному или
  удалённому транспорту. Однако, в это время транспорт не выполняется. Вместо
  этого адрес помещается в список специфического транспорта, который будет
  выполнен позже. Альтернативно, маршрутизатор может создать один, или
  несколько новых адресов (обычно, из синонимов, перенаправлений, или файлов
  фильтров). Новый адреса возвращаются назад к началу процесса, но во избежание
  петель, маршрутизатор игнорирует любой адрес имеющий одноимённого предка,
  обрабатывающегося отдельно.

* Когда вся маршрутизация завершена, успешно обработанные адреса передаются
  назначенным им транспортам. Когда локальные транспорты делают действительно
  локальные доставки, они обрабатывают только один адрес за раз, но если
  локальный транспорт используется как псевдо-удалённый (например, для сборки
  пакетов SMTP-сообщений, для передачи каким-то другим средствам), могут быть
  обработаны несколько адресов. Удалённые транспорты всегда могут  обрабатывать
  более одного адреса за раз, но они могут быть настроены не делать так, или
  ограничены в нескольких одновременных обращениях к одинаковому домену.

* Каждая локальная доставка в файл, или трубу, запускается отдельным процессом
  с непривелигированным uid, и выполняются они по одной. Удалённые доставки
  также выполняются отдельными процессами, обычно под частным uid Exim`a
  (“пользователь exim”), но в этом случае, несколько удалённых доставок могут
  выполняться параллельно. Максимальное число одновременных удалённых доставок,
  для любого сообщения, устанавливается параметр **remote_max_parallel**.
  Порядок, в котором производятся доставки, не определён, за тем исключением,
  что все локальные доставки происходят до удалённых.

* Если во время обработки очереди встречается локальная доставка, Exim
  проверяет базу повторов для поиска - была ли временная ошибка для этого
  адреса ранее, перед выполнением работы локального транспорта. Если ранее была
  ошибка, Exim не делает новую попытку доставки, пока для этого адреса не
  достигнуто время повторения. Подобные ситуации могут случаться только для тех
  попыток доставки, которые порождены во время обработки текущей очереди.
  Локальные доставки всегда производятся сразу после завершения приёма
  сообщения, даже если для них установлено время повтора. Это делается для
  улучшения поведения в случае если одно сообщение вызывает проблемы (например,
  вызывает переполнение квоты, или ошибку в фильтре).

* Удалённые транспорты выполняют собственную обработку повторов, так как адрес
  может доставляться к одному из множества хостов, каждый из которых может
  иметь различное время повтора. Если были предыдущие временные сбои, и никакой
  хост не достиг своего времени повтора, попытка доставки не предпринимается,
  независимо от того работала очередь или нет. Смотрите главу :ref:`32
  <ch32_00>`, для деталей об обработке повторения.

* Если были какие-то постоянные ошибки, рикошет возвращается к соответствующему
  адресу (отправитель, в общем случае), с деталями ошибки для каждого
  ошибочного адреса. Exim может быть настроен для отправки копий сообщений о
  рикошете на другие адреса.

* Если один или несколько адресов потерпели временный сбой, сообщение остаётся
  в очереди, для дальнейших попыток. Доставка этих адресов, как говорят,
  *задержана* (*deferred*).

* Когда все адреса получателей доставлены, или сорвались, обработка сообщения
  завершена. Файлы буфера и логи сообщения удаляются, хотя лог, необязательно,
  может быть сохранён, в случае необходимости.


.. _ch03_14:

----------------
Механизм повтора
----------------

Этот механизм Exim'a предназначен для повтора сообщений, которые обработчик
очереди не сумел доставить с первой попытки. Вы должны запустить демона Exim`a
с параметром **-q** с параметром "интервал времени", для запуска обработчика
очереди с регулярными интервалами времени, или использовать другие средства
(например, cron), чтобы запустить его. Если вы не будете предпринимать мер к
запуску обработчика очереди, сообщения, недоставленные при первой попытке,
навсегда останутся в очереди. Обработчик очереди обрабатывает очередь по одному
сообщению, пробуя каждую доставку [#]_ с прошедшим временем повторения. Вы
можете запустить несколько обработчиков очереди одновременно.

Exim использует набор конфигурационных правил для определения, когда должен
быть попытка отправки для ошибочного адреса (смотрите главу :ref:`32
<ch32_00>`). Эти же правила определяют, когда Exim должен прекратить попытки
доставки адреса, и создаст рикошет. Если для частного хоста, адреса или
комбинации ошибок не установлены правила повтора, то временные ошибки
обрабатываются как постоянные.


.. _ch03_15:

-------------------------
Временные ошибки доставки
-------------------------

Существует много причин, по которым сообщение не доставляется немедленно по
частному адресу. Сбой подключения к удалённой машине (поскольку хост, или
подключения к нему, отcутствовали) - одна из самых распространённых. Временные
ошибки могут быть обнаружены в процессе маршрутизации, а также в течение
транспортной стадии доставки.  Локальные доставки могут быть задержаны, если
недоступны NFS файлы, или почтовый ящик находится в файловой системе, в которой
у пользователя превышена квота. Exim может быть настроен для использования
собственных квот на локальные почтовые ящики; там, где используются системные
квоты, они также применяются.

Если хост недоступен некоторое время, множество сообщений может ожидать его, к
тому времени, когда он станет доступен, и их отправка в течение одного
SMTP-соединения, явно выгодна. Всякий раз, когда доставка на удалённый
компьютер задерживается, Exim делает отметку в своей БД подсказок [#]_, и
всякий раз когда происходит успешная SMTP-доставка, он смотрит, есть ли другие
сообщения для этого же хоста. Если они найдены, они отправляются по тому же
самому SMTP-соединению, ограниченные указанным в конфигурации числом
максимальных сообщений через одно соединение.


.. _ch03_16:

--------------------------
Постоянные ошибки доставки
--------------------------

Когда сообщение невозможно доставить к нескольким или всем его получателям,
создается сообщение рикошета. Временные ошибки доставки превращаются в
постоянные ошибки, когда истекает их время ожидания. Все адреса, которые
ошибочны в данной попытке доставки, перечисляются в одном сообщении. Если у
оригинального сообщения много получателей, возможно что некоторые адреса
недоставлены в первую попытку, и другие были неудачны в последующие попытки,
возможна создание более одного рикошета. Формулировка сообщения рикошета может
быть настроена администратором. Для дополнительных деталей, смотрите главу
:ref:`46 <ch46_00>`.

Сообщения рикошета содержат строку заголовка *X-Failed-Recipients:*, содержащую
список неудачных адресов, для программ которые автоматически анализируют такие
сообщения.

Рикошет, обычно, отправляется отправителю оригинального сообщения, полученного
из адреса конверта. Для входящих SMTP-сообщений, это адрес, данный в команде
MAIL. Однако, когда адрес раскрывается через перенаправление и подстановку
синонима, может быть задан альтернативный адрес для доставки рикошетов от
созданных адресов. При использовании списков рассылки раздел (смотрите
:ref:`47.2 <ch47_02>`), рикошеты обычно отправляются менеджеру списка рассылки.


.. _ch03_17:

----------------------
Сбой доставки рикошета
----------------------

Если с рикошетом (созданным локально или пришедшим с удалённого хоста)
происходит сбой доставки, сообщение остаётся в очереди замороженным [#]_ ,
ожидая внимания администратора. Существуют параметры, которые могут
использоваться для того, чтобы заставить Exim отбросить такие сообщения, или
хранить их короткий период времени (смотрите параметры **timeout_frozen_after**
и **ignore_bounce_errors_after**).

.. [#] имеется в виду - адресов отправителя - прим. lissyara.
.. [#] адресу куда шлют сообщения об ошибках - прим. lissyara
.. [#] на диске, видимо - прим. lissyara
.. [#] например, через файл альясов
.. [#] в смысле, целенаправленно - прим. lissyara
.. [#] принудительно - прим. lissyara
.. [#] генерится сообщение о недоставке - прим. lissyara
.. [#] письмо с этим адресом было отклонено всеми роутерами - прим. lissyara
.. [#] шлётся письмо отправителю с сообщением, что не удалось доставить письмо - прим. lissyara
.. [#] адреса получателей - прим. переводчика
.. [#] можно перевести как БД намёков - прим. lissyara
.. [#] “frozen message” - прим. переводчика
