
.. _ch38_00:

Аутентификатор **spa**
======================

Аутентификатор **spa** предоставляет поддержку клиента для механизма Microsoft's Secure Password Authentication, также известного как NTLM (NT LanMan). Код для клиентской стороны этого аутентификатора был внесён Marc Prud'hommeaux, и большая его часть взята из проекта Samba (http://www.samba.org). Впоследствии, Tom Kistner внёс код для сервера. Механизм работает следующим образом:

* После того, как была принята команда AUTH, клиент посылает аутентификационный запрос SPA, основанный  на имени пользователя и, не обязательно, домене.
* Сервер делает обратный вызов.
* Клиент строит ответный вызов использующий пользовательский пароль, и шлёт его на сервер, который принимает или отклоняет его.
  
Для защиты пароля при передаче используется шифрование.

Использование **spa** как сервера
---------------------------------

Аутентификатор **spa** обладает лишь одной серверным параметром:

===================  ========  =============  ==============
**server_password**  Use: spa  Type: string†  Default: unset
===================  ========  =============  ==============

Этот параметр раскрывается, и, результатом должен быть пароль в открытом виде для аутентификации пользователя, чьё имя, в данной точке, находиться в $auth1. Для совместимости с предыдущими релизами Exim`a, имя пользователя, также, помещается в $1. Однако, в настоящее время, использование этой переменной для этой цели - не приветствуется, поскольку может привести к недоразумениям в раскрытиях строк, также использующих числовые переменные для иных целей. Например::

    spa:
      driver = spa
      public_name = NTLM
      server_password = \
          ${lookup{$auth1}lsearch{/etc/exim/spa_clearpass}{$value}fail}

Если раскрытие - принудительно неудачно, аутнетификация неудачна. Любые другие ошибки раскрытия вызывают возврат кода временной ошибки.

Использование **spa** как клиента
---------------------------------

Аутентификатор **spa** обладает следующими клиентскими параметрами:

.. index::
   pair: spa; client_domain

=================  ========  =============  ==============
**client_domain**  Use: spa  Type: string†  Default: unset
=================  ========  =============  ==============

Этот параметр определяет необязательный домен для аутентификации.

.. index::
   pair: spa; client_password

===================  ========  =============  ==============
**client_password**  Use: spa  Type: string†  Default: unset
===================  ========  =============  ==============

Этот параметр определяет пользовательский пароль, и должны быть задана.

.. index::
   pair: spa; client_username

===================  ========  =============  ==============
**client_username**  Use: spa  Type: string†  Default: unset
===================  ========  =============  ==============

Этот параметр определяет имя пользователя, и должна быть задана. Вот - пример конфигурации этого аутентификатора для использования с почтовыми серверами *msn.com*::

    msn:
      driver = spa
      public_name = MSN
      client_username = msn/msn_username
      client_password = msn_plaintext_password
      client_domain = DOMAIN_OR_UNSET
