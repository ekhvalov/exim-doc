
.. _ch52_00:

Обсуждение безопасности
=======================

Эта глава обсуждает множество проблем связанных с безопасностью, некоторые из которых также охвачены в других частях этого руководства.

По причинам, которые автор не понимает, некоторые люди продвигают Exim как “особенно безопасный” почтовый сервер. Возможно - из-за существования этой главы документации. Однако намерение главы просто описать способ Exim работ в отношении некоторых проблем в области безопасности, а не делать какие-либо конкретные претензии по поводу эффективности его безопасности по сравнению с другими MTA.

То, что следует далее - описание того, каким Exim должен быть. Наибольшие усилия были направлены на попытку гарантировать, что код соответствует теории, но отсутствие ошибок гарантировать нельзя. Любая ошибка о которой сообщат, будет исправлена как только возможно.


.. _ch52_01:

Сборка более *защищённого* Exim'a
---------------------------------

Есть несколько параметров компилятора, которые могут быть установлены в *Local/Makefile*, для создания более “защищённого” от атак Exim'a, в частности от жуликоватых администраторов Exim'a, которые не владеют паролем root'a, или кого-то, кто проник через учетную запись Exim'a (но не root'a). Эти параметры таковы:

* ALT_CONFIG_PREFIX - может быть установлена в строку, которая должна совпадать с началом любых имён файлов используемых с параметром **-C**. Когда она установлена, этим именам файлов, также, не разрешается содержать последовательность “/../”. (Однако, если значение параметра **-C** идентично со значением CONFIGURE_FILE в *Local/Makefile*, Exim игнорирует **-C** и работает как обычно.) Для ALT_CONFIG_PREFIX нет значения по умолчанию.

  Если разрешённые конфигурационные файлы ограничены директорией к которой имеет доступ только root, это предохраняет тех, кто взломал учетная запись Exim'a от работы с произвольным конфигурационным файлом, и использования его для взлома других учетных записей.

* ALT_CONFIG_ROOT_ONLY - если она задана, привилегии root'a сохраняются для параметров **-C** и **-D** лишь если вызывающий Exim - root. Без этого, пользователь Exim'a также может использовать **-C** и **-D** и сохранять привилегии. Установка этого параметра блокирует возможность тестирования конфигурации используя **-C** напрямую через приём и доставку сообщения, если вызывающий - root. Приём работает, но к этому времени Exim работает как пользователь Exim'a, таким образом, когда он перезапускается для восстанавления привилегий доставки, использование **-C** вызывает потерю привилегий. Однако, root может тестировать приём и доставку используя две раздельные команды. По умолчанию, ALT_CONFIG_ROOT_ONLY не установлена.
   
* DISABLE_D_OPTION - если задана, отключено использование **-D** в командной строке.

* FIXED_NEVER_USERS - может быть установлена в список пользователей, разделённый двоеточиями, которые никогда не могут использоваться для доставки. Это похоже на рабочий параметр **never_users**, но не может быть изменена; рабочий параметр добавляет дополнительных пользователей в этот список. Установка по умолчанию- “root”; это предотвращает не-root'овых пользователей, кому разрешено изменять файл рабочей конфигурации, от использования Exim как способ получить root'овые привилегии.

.. _ch52_02:

root'овые привилегии
--------------------

На исполняемый файл Exim'a, обычно, установлен бит setuid на root'a, что означает, что в начале выполнения он получает root'овые привилегии (работает от root). В некоторых специальных случаях (например, когда не используется даемон, и нет локальных доставок), возможно запускать Exim с setuid на иного пользователя, чем root. Это обсуждается в следующей секции. Однако, в большинстве инсталляций, root'овые привилегии требуются по двум причинам:

* Для установления соединения сокета на стандартный порт SMTP (25) при инициализации слушающего даемона. Если Exim запускается из *inetd*, это привилегированное действие не требуется.

* Чтобы быть в состоянии изменить uid и gid для чтения пользовательских файлов *.forward*, и выполнения локальных доставок от получающего пользователя или как задано в конфигурации.

Не требуется root'овых привилегий для ещё чего-то, что делает Exim, типа получения сообщений и доставки их наружу через SMTP, и очевидно, более безопасно, если Exim не работает от root'a кроме случаев, когда это необходимо. Поэтому, пользователь и группа Exim'a должны быть заданы в *Local/Makefile*. Они известны как “the Exim user” и “the Exim group”. Их значения могут быть измены в рабочей конфигурации, хотя это не рекомендуется. Часто используется пользователь с именем “exim”, но некоторые сервера используют вместо него “mail” или другой имя пользователя.

Exim использует *setuid()* каждый раз, когда он сбрасывает привилегии root'a. Это - постоянное сложение полномочий; впоследствии, процесс не может восстановить привилегии. До версии 4.00, *setuid()* использовалась в некоторых обстоятельствах, но больше такого не имеет места.

После того, как новый процесс Exim'a интерпретировал параметры своей командной строки, он изменяет uid и gid в следующих случаях:

* Если используется параметр **-C** для задания альтернативного конфигурационного файла, или используется параметр **-D** для определения макро-значения для конфигурации, и вызывающий процесс не запущен как root или пользователь Exim'a, uid и gid изменяются на заданные вызывающим процессом. Однако, если в *Local/Makefile* задана ALT_CONFIG_ROOT_ONLY, лишь вызывающий root может использовать **-C** и **-D** без потери привилегий, и если задана DISABLE_D_OPTION, параметр **-D** не может использоваться вообще.

* Если используется параметр тестирования раскрытия (**-be**), или один из параметров тестирования фильтра (**-bf** или **-bF**), uid и gid изменяются на таковые из вызывающего процесса.

* Если процесс - не процесс даемона, и не процесс обработчика очереди, или процесс доставки, или процесс тестирования маршрутизации адреса (запущенный с **-bt**), uid и gid изменяются на пользователя и группу Exim'a. Это означает, что при получении сообщений Exim всегда работает под своим собственным uid и gid. Это также применяется когда тестируется проверка адреса (параметр **-bv**), и тестируется политика входящих сообщений (параметр **-bh**).

* Для даемона, обработчика очереди, доставки, или процесса тестирования адресов, на данном этапе uid остаётся root, но gid изменяется на группу Exim'a.

Процессы, которые изначально сохраняют root'овые привилегии, ведут себя следующим образом:

* Процесс даемона изменяет gid на группу Exim'a и uid на пользователя Exim'a после установки одного или нескольких слушающих сокетов. Вызывается функция *initgroups()*, таким образом, чтобы если пользователь Exim'a находится в каких-то дополнительных группах, они использовались в процессе доставки.

* Процесс обработчика очереди сохраняет привилегии root'a в процессе выполнения. Его работа - запустить контролируемую последовательность процессов доставки.

* Процесс доставки сохраняет привилегии root'a в большинстве своих выполнений, но любые актуальные доставки (т.е. - непосредственно транспорты) запускаются в подпроцессах, которые всегда изменяются на не-root'овые uid и gid. Для локальных доставок, это, обычно, uid и gid владельца почтового ящика; для удалённых доставок, используются uid и gid пользователя Exim'a. Как только все подпроцессы доставки запущены, процесс доставки изменяется на uid и gid Exim'a, пока производятся работы после доставки, типа обновления БД повторов, и создания рикошетов и предупреждающих сообщений.

* Когда маршрутизируются адреса получателей сообщения, процесс доставки работает от root'a. Однако, если обрабатывается пользовательский файл фильтра, он завершается в подроцессе который работает под индивидуальным пользовательским gid и uid. Системный фильтр запускается от root'a, если не задана **system_filter_user**.

* Проверяющий адреса процесс (параметр **-bt**), запускается от root'a, таким образом маршрутизация делается в том же окружении, что и доставка сообщения.

.. _ch52_03:

Работа Exim без привилегий
--------------------------

Некоторые инсталляции любят запускать Exim под непривилегированным пользователем, для дополнительной безопасности. Поддержка для этого режима предоставляется путём глобального параметра **deliver_drop_privilege**. Когда он установлен, uid и gid изменяются на пользователя и группу Exim'a в начале процесса доставки (и, также, обработчик очереди и процесс тестирования адресов). Это означает, что маршрутизация адресов не работает от root'a, и сами доставки не могут измениться на иной uid.

Оставление на исполняемом файле setuid на root'a, но установка **deliver_drop_privilege** означает, что даемон всё ещё может запуститься обычным способом, и он может корректно ответить на SIGHUP, поскольку повторный вызов восстанавливает привилегии root'a.

Альтернативный подход состоит в том, чтобы сделать Exim setuid на пользователя Exim'a, и, также, сделать его setgid на группу Exim'a. Если вы сделаете это, даемон должен запускаться с root'овыми правами. (Вызов Exim'a из процесса root'a заставляет его вести себя так, как он себя ведёт когда setuid на root.) Однако, даемон не может перезапуститься после сигнала SIGHUP, поскольку он не может восстановить привилегии.

В этом случае, всё ещё полезно установить **deliver_drop_privilege**, поскольку это помещает Exim'y повторно перевызвать самого себя, для проведения доставки после получения сообщения. Такой повторный вызов - растрата ресурсов, поскольку он не имеет эффекта.

Если перезапуск даемона - не проблема (например, если установлен **mua_wrapper**, или вместо даемона используется *inetd*), обладание бинарником setuid на пользователя Exim кажется совершенным подходом, но есть одно осложнение:

В этом стиле действия, Exim работает с реальным uid и gid, установленным к тем же что и увызывающего процесса, и эффективный uid/gid установлен в значения Exim'a. Идеально, любая ассоциация с uid/gid вызывающего процесса должан быть отброшена, т.е. реальный uid/gid должен быть сброшен в эффективные значения, чтобы отказаться от любых привилегий, которые мог иметь вызывавший. Некоторые операционные системы обладают функцией, которая разрешает это действие для не-root'ового эффективного uid, но многие её не имеют. Из-аз этой недостаточной стандартизации, Exim не обращается к этой проблеме в настоящее время.

Поэтому, рекомендованный подход для “совсем непривилегированного” запуска состоит в том, чтобы оставить исполняемый файл Exim'a setuid на root, и установить **deliver_drop_privilege**. Это, также, имеет преимущество - разрешение работы даемона прямым способом.

Если вы настраиваете Exim не начинать процесс доставки от root'a, есть множество ограничений на то, что вы можете сделать:

* Вы можете доставлять лишь как пользователь/группа Exim'a. Вы должны явно использовать параметры **user** и **group** для изменения маршрутизаторов и локальных транспортов которые обычно доставляют под получателем. Этим удостоверяется, что конфигурация работающая в этом режиме работает точно таким же способом как и в обычном режиме. Любое явное или неявное задание другого пользователя вызывает ошибку.
  
* Использование файлов *.forward* строго ограничено, так что, обычно, не стоит их включать в конфигурацию.

* Пользователи использующие *.forward* должны сделать чтобы их домашний каталог был доступен пользователю Exim'a. Трубы и добавления в файл, и их эквиваленты в фильтрах Exim'a, не могут использоваться. Можно было бы включить их под пользователем Exim'a, что небезопасно и не очень полезно.

* Если не все локальные почтовые ящики принадлежат пользователю Exim'a (возможно в некоторых окружениях использующих только POP3 или IMAP):
                     
  1. Они должны принадлежать группе Exim'a и у этой группы должно быть право записи в них. Это подразумевает, что вы должны установить **mode** в конфигурации **appendfile**, так же как режим для самих почтовых ящиков.

  2. Вы должны установить **no_check_owner**, поскольку большинство или все файлы не будут принадлежать пользователю Exim'a.

  3. Вы должны установить **file_must_exist**, поскольку Exim не может корректно установить владельца новых создаваемых почтовых ящиков, когда у него нет привилегий. Также это подразумевает, что новые почтовые ящики необходим создавать вручную.

Эти ограничения строго ограничивают то, что может быть сделано в локальных доставках Однако, они не оказывают влияния на удалённые доставки. Если вы запускаете шлюз, не делающий локальных доставок, установка **deliver_drop_privilege** не добавляет безопасности.

Если вы используете средство **mua_wrapper** (смотрите главу :ref:`48 <ch48_00>`), параметр  **deliver_drop_privilege** обязательно должна быть истинной.

.. _ch52_04:

Доставка в локальные файлы
--------------------------

Полная детализация проверок применяемых путём **appendfile** до записи в файл даны в главе :ref:`26 <ch26_00>`.

.. _ch52_05:

Источник маршрутизации IPv4
---------------------------

Много операционных систем подавляют пакеты IP маршрутизации источника в ядре, но некоторые не делают этого, таким образом, Exim производит свою собственную проверку. Он записывает в лог входящие вызовы TCP маршрутизации источника IPv4, и, затем, обрывает их. Это отличается от IPv6. В настоящее время, никакой специальной проверки не делается.

.. _ch52_06:

Команды VRFY, EXPN, и ETRN в SMTP
---------------------------------

Поддержка этих SMTP команд по умолчанию отключена. Если требуется, они могут быть включены путём задания подходящих ACL.

.. _ch52_07:

Привилегированные пользователи
------------------------------

Exim распознаёт два набора пользователей со специальными привилегиями. Доверенные пользователи имеют возможность локально посылать новые сообщения Exim'y, подставляя их собственные адреса отправителя и информацию о хосте отсылки. Для других пользователей посылающих локальные сообщения, Exim устанавливает адрес отправителя из uid, и не позволяет задавать удалённый хост.

Однако, недоверенным пользователям разрешено использовать параметр командной строки **-f**, в специальной форме **-f <>**, для индикации, что неудача доставки не должна вызвать отчёт о ошибке. Это затрагивает конверт сообщения, но не затрагивает заголовок “Sender:”. Недоверенным пользователям также может быть разрешено использовать специфическую форму адресов с параметром **-f**, путём установки параметра **untrusted_set_sender**.

Доверенные пользователи используются для запуска процессов которые получают почтовые сообщения с одних почтовых доменов и передают их Exim'y для их локальной доставки, или через интернет. Exim доверяет вызывающему работающему от root'a, от пользователя Exim'a, или под любым пользователем перечисленным в конфигурационного параметра **trusted_users**, или под любой группой перечисленной в параметре **trusted_groups**.

Административным пользователям разрешено производить действия над сообщениями в очереди Exim'a. Они могут замораживать или оттаивать сообщения, вызывать их возвращение к их отправителю, полностью удалять их, или модифицировать их различными способами. Дополнительно, административные пользователи могут запускать монитор Exim'a и видеть всю информацию которую он может предоставить, включая содержимое файлов спула.

По умолчанию, использование параметров **-M** и **-q**, вызывающих Exim для попытки доставить сообщения в его очереди, ограничено административными пользователями. Это ограничение может быть ослаблено путём установки параметра **no_prod_requires_admin**. Точно также, использование **-bp** (и его вариантов) для получения списка содержимого очереди, также ограничено административными пользователями. Это ограничение может быть ослаблено путём установки параметра **no_queue_list_requires_admin**.

Exim распознаёт административного пользователя если вызывающий процесс запущен как root или как пользователь Exim'a, или любая группа ассоциированная с процессом  - группа Exim'a. Нет необходимости фактически работать от группы Exim'a. Однако, если административные пользователи не являющиеся root'ом или пользователем Exim'a должны получить доступ к содержимому файлов spool`a через монитр Exim'a (который работает непривилегированным), Exim должен быть собран с разрешением группе доступа на чтение к его файлам спула.

.. _ch52_08:

Файлы спула
-----------

Директория спула Exim'a, и всё что она содержит, принадлежит пользователю Exim'a и его группе. Режим файлов спула задаётся в конфигурационном файле *Local/Makefile*, и по умолчанию - 0640. Это означает, что любой, кто является пользователем группы Exim'a может получить доступ к этим файлам.

.. _ch52_09:

Использование argv[0]
---------------------

Exim проверяет последний компонент **argv[0]**, и если он совпадает с одной из установленных специфических строк, Exim предполагает определённые параметры. Например, вызов Exim с последним компонентом **argv[0]** установленным в “rsmtp” - точный эквивалент его вызова с параметром **-bS**. Никаких значений безопасности в этом нет.

.. _ch52_10:

Использование форматирования %f
-------------------------------

Единственное использование сделанное Exim'ом с использованием “%f” - форматирование значений средней загрузки. Фактически они сохранены в цифровых переменных как 1000 времён средней загрузки. Следовательно, их диапазон ограничен, и поэтому - это длина конвертированного вывода.

.. _ch52_11:

Встроенные пути Exim'a
----------------------

Exim использует своё собственное имя пути, которое встроено в код, лишь когда ему необходимо перезапуститься для восстановления root'овых привилегий. Поэтому, он не работает от root'a, когда это делает. Если бы какая-то ошибка позволила перезадать путь, это привело бы к запуску произвольной программы от root'a, а не Exim'a.

.. _ch52_12:

Использование sprintf()
-------------------------

Большое количество “sprintf” в коде - фактические вызовы *string_sprintf()*, функции которая возвращает результат сохранения *malloc*. Промежуточное форматирование сделано в большой фиксированный буфер, путём функции которая запускается через непосредственное форматирование строки, и проверки длинны каждого преобразования до его выполнения, что предотвращает переполнение буфера.

Оставшиеся использования *sprintf()* происходят при контролируемых обстоятельствах, где выходной буфер заведомо достаточной длинны, чтобы содержать конвертированную строку.

.. _ch52_13:

Использование debug_printf() и log_write()
------------------------------------------

Обоим этим функциям передаются произвольные строки, но они производят их форматирование путём вызова функции *string_vformat()*, которая непосредственно обрабатывает форматируемую строку и проверяет длину каждого преобразования.

.. _ch52_14:

Использование strcat() и strcpy()
---------------------------------

Они используются лишь когда известно, что выходной буфер достаточно большой для хранения результата.
