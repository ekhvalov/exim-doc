
.. _ch22_00:

Маршрутизатор **redirect**
==========================

Маршрутизатор **redirect** обрабатывает несколько видов переназначения адресов. Его самое частое использование - для разрешения локальной части адреса по центральному файлу синонимов (обычно это */etc/aliases*), и для обработки пользовательского файла *.forward*, но также есть много других потенциальных возможностей использования. Входящий адрес может быть переадресован несколькими различными способами:
* Он может быть заменён одним, или более, новым адресом, которые будут маршрутизируется самостоятельно.
* Он может быть маршрутизирован для доставки в файл или директорию.
* Он может быть доставлен в специфическую трубу (pipe).
* Можно сделать автоматический ответ.
* Он может принудительно стать неудачным (fail), с необязательным сообщением об ошибке.
* Он может быть временно задержан, с необязательным сообщением.
* Он может быть отброшен.
   
Общий параметр **transport** не должен быть установлен для маршрутизатора **redirect**. Однако, есть некоторые частные параметры с заданным транспортом, для доставки в файлы и трубы, и для создания авто-ответов. Смотрите описания **file_transport**, **pipe_transport** и **reply_transport** ниже.

.. _ch22_01:

Данные для перенаправления
--------------------------

Маршрутизатор функционирует путем интерпретации текстовой строки, которая получается либо в результате преобразования содержимого параметра **data**, либо в результате чтения содержимого файла, чье имя определено параметром **file**. Эти два параметра являются взаимоисключающими. Первый из них часто используется для обработки системных псевдонимов, в конфигурации наподобие данной::

    system_aliases:
      driver = redirect
      data = ${lookup{$local_part}lsearch{/etc/aliases}}

Если поиск завершился неудачно, то раскрываемая строка в этом примере - пустая. В случае неудачного раскрытия параметра **data** - маршрутизатор пропускается. Принудительное завершение преобразования также ведет к пропуску маршрутизатора; другие ошибки раскрытия приводят к тому, что доставка временно откладывается.

Конфигурация с параметром **file** часто используется для обработки пользовательских файлов *.forward*, например таким образом::

    userforward:
      driver = redirect
      check_local_user
      file = $home/.forward
      no_verify

Если файл не существует или не содержит никаких инструкций по выполнению (например, файл пуст или содержит только комментарии), то маршрутизатор пропускается. Внимание: это не тот случай, когда файл содержит синтаксически допустимые элементы, которые могут иногда выдавать пустые адреса, например элементы, содержащие только адресные комментарии в соответствии с :rfc:`2822`.

.. _ch22_02:

Файлы пересылки (forward files) и проверка адреса
-------------------------------------------------

Обычной практикой является установка параметра **no_verify** на маршрутизатор **redirect**, обрабатывающих пользовательские файлы *.forward*, как в вышеописанном примере. Для этого существуют 2 причины:
* Когда Exim принимает входящее SMTP-сообщение от удаленного узла, то он запускается от имени пользователя Exim (Exim uid), а не от имени суперпользователя (root). Exim не может изменить uid для чтения файла, чтобы прочитать его как владелец, а также возможно файл не будет доступен для чтения пользователю Exim. Таким образом, на практике маршрутизатор может не функционировать.
* Однако, даже когда маршрутизатор может работать, существование файла *.forward* неважно в то время когда адрес проверяется. Должно быть проверено только является ли локальная часть адреса допустимым именем пользователя или нет. Если убрать обработку перенаправления в данном случае, то это сохранит некоторые ресурсы.

.. _ch22_03:

Обработка данных перенаправления
--------------------------------

Содержимое строки данных, полученное либо через **data**, либо через **file**, может быть интерпретировано двумя разными способами: 

* Если параметр **allow_filter** установлена в истинное значение и данные начинаются со строки “#Exim filter” или “#Sieve filter”, то содержимое интерпретируется как список “фильтрующих” инструкций в форме фильтров Exim или Sieve соответственно. Подробности синтаксиса и семантики файлов фильтров описаны в отдельном документе “Интерфейсы Exim для фильтрации почты”; предназначенном конечным пользователям.

* В противном случае, данные должны представлять собой список элементов перенаправления (redirection items), разделенных “,”, как описано в следующей секции.
  Когда сообщение перенаправляется в файл (“почтовая папка”), имя файла, описанного в списке перенаправления, не являющимся фильтром, должно быть абсолютным (т.е. до него указан полный путь). Фильтр может создавать относительный путь - то, как это обрабатывается зависит от конфигурации транспорта. См. раздел :ref:`26.1 <ch26_01>` для описания этой темы, для транспорта **appendfile**.

.. _ch22_04:

Элементы не фильтрующего списка перенаправления
-----------------------------------------------

Если данные перенаправления не являются фильтрами Exim и Sieve, например, если они были получены из файла псевдонимов или файла *.forward*, то они содержат список адресов, имен файлов, конвейерных команд или специальных элементов (см. раздел :ref:`22.6 <ch26_06>` ниже). Эти специальные элементы могут быть индивидуально включены или отключены посредством параметров, начинающихся с **allow_** или **forbid_**, в зависимости от значений по умолчанию. Элементы в списке разделены “,” или новыми строками. Если в элементе требуется символ “,”, то весь элемент должен быть заключен в двойные кавычки.

Строки, начинающиеся с символа “#” являются комментариями и игнорируются, также может встретиться символ “#” с последующей “,”, в этом случае все, что находится между “#” и следующим символом новой строки, игнорируется. 

Если элемент целиком заключен в двойные кавычки, то они опускаются. В противном случае, они остаются потому как некоторые формы почтовых адресов требуют их использования (но никогда в кавычки не берется адрес целиком). В следующем описании под “элементом” понимается то, что остается после опускания кавычек.

.. warning:: Если вы используете преобразование Exim для построения адреса перенаправления, и преобразование содержит ссылку на $local_part, то вы должны использовать оператор раскрытия **quote_local_part**, на случай если локальная часть почтового адреса содержит спецсимволы. Например, чтобы перенаправить всю почту для домена “obsolete.example”, оставив неизменным существующую локальную часть адреса, то вы можете использовать такую конструкцию:

  :: 
        
      data = ${quote:$local_part}@newdomain.example

.. _ch22_05:

Перенаправление в локальный почтовый ящик
-----------------------------------------

Элемент в списке перенаправления может быть в точности самим адресом. Это не вызовет зацикливания маршрутизации, потому что маршрутизатор автоматически пропускается, если родительский адрес обрабатываемого адреса совпадает с ним и обрабатывался он текущим маршрутизатором. Далее адрес передается следующим маршуртизатором, таким образом он обрабатывается как будто бы не было никакого перенаправления. В процессе проверки зацикливания используется полная локальная часть почтового адреса, включая префиксы и суффиксы.

Указание той же локальной части почтового адреса без указания домена в персональных файлах фильтров является обычной практикой в том случае, если пользователь хочет, чтобы сообщения доставлялись в локальный почтовый ящик а также перенаправлялись еще куда-нибудь. Например, пользователь с учетной записью “cleo” может иметь файл *.forward*, содержащий такую запись::

    cleo, cleopatra@egypt.example

Для совместимости с другими MTA, такие локальные части могут быть предварены символом “\\”, но это не является требованием для предотвращения зацикливания. Однако, это дает разницу если таким образом обрабатывается более одного домена.

Если элемент начинается с символа “\\” и остальная часть его является адресом, соответствующим :rfc:`2822`, не включающим в себя домен, то этот элемент дополняется доменом входящего адреса. В отсутствие предшествующего символа “\\” неполные адреса дополняются используя значение параметра **qualify_recipient**, но вы можете принудительно изменить входящий домен, используя параметр **qualify_preserve_domain**.

Если существуют псевдонимы для локальных пользователей, то нужно быть осторожным. Рассмотрим MTA, обрабатывающий простой локальный домен, где системный файл псевдонимов содержит::

    Sam.Reman: spqr

Теперь предположим, что Сэм (чей идентификатор - “spqr”) хочет сохранять копии сообщений в локальном почтовом ящике, а также перенаправлять копии куда-либо еще. Он создает такой файл перенаправления::

    Sam.Reman, spqr@reme.elsewhere.example

С подобными настройками входящее сообщение для “Sam.Reman” отклоняется. Маршрутизатор **redirect** для системных псевдонимов не обрабатывает “Sam.Reman” второй раз, потому как он уже маршрутизировал его, и следующие маршрутизаторы по-видимому тоже не смогут обработать псевдоним. Файл перенаправления должен на самом деле содержать::

    spqr, spqr@reme.elsewhere.example

но т.к. это распространенная ошибка, то существует параметр **check_ancestor** (см. ниже) для ее обхода. Обычно она определяется в маршрутизаторе, обрабатывающем пользовательские файлы *.forward*.

.. _ch22_06:

Специальные конструкции в списках перенаправления
-------------------------------------------------

Вдобавок к адресам в списках перенаправления (не являющихся фильтрами) могут быть следующие типы конструкций:

* Элемент рассматривается как команда перенаправления если он начинается с символа “|” и не распознается как адрес соответствующий :rfc:`2822`. Транспорт для запуска этой команды должен быть определен параметром **pipe_transport**. Обычно, пользователь и группа, от имени которых выполняется доставка, определяются маршрутизатором или транспортом. По умолчанию, используются пользователь и группа, отведенные для Exim.

  Одинарные или двойные кавычки могут использоваться для заключения аргументов команды перенаправления, причем для одинарных кавычек интерполяция содержимого внутри не производится. Если команда содержит символ “,”, то ее необходимо поместить в двойные кавычки, например::
  
      "|/some/command ready,steady,go"

  т.к. элементы в списках перенаправления оканчиваются “,”. Однако недопустимо помещать в кавычки только команду. Например,
  
  ::

      |"/some/command ready,steady,go"

  интерпретируется как перенаправление вывода с довольно странным именем команды без аргументов.
   
* Элемент интерпретируется как путь, если он начинается с “/” и не распознается как адрес соответствующий :rfc:`2822`. Например,
  
  ::
  
      /home/world/minbari

  трактуется как имя файла, но
  
  ::
  
      /s=molari/o=babylon/@x400gate.way

  распознается как адрес. Для файла должен быть определен транспорт при помощи параметра **file_transport**. Однако, если путь оканчивается символом “/” то он интерпретируется как имя директории, а не имя файла, и в этом случае используется параметр **directory_transport**.
 
  Обычно, пользователь и группа, от имени которых выполняется доставка, определяются маршрутизатором или транспортом. По умолчанию, используется пользователь и группа, из под которых работает Exim. Однако, если перенаправление производится в */dev/null*, то доставка в него передается на высокий уровень, и запись в логе выглядит как “**bypassed**” вместо имени транспорта. В этом случае, пользователь и группа не используются.

* Если элемент выглядит таким образом::
  
      :include:<path name>

  то он представляет собой список дальнейших элеменотв, которые берутся из файла, находящегося по данному пути. 

  .. note:: этот файл не может быть файлом фильтров; он является просто добавлением к списку. Элементы во включаемом списке разделяются “,” или новыми строками. Если это первый элемент в списке псевдонимов в файле, то имя псевдонима должно отделяться “:”. Следующий пример неверен::

        list1    :include:/opt/lists/list1

    Должно быть так::

        list1:   :include:/opt/lists/list1


* Иногда вы хотите выбрасывать почту с определенной локальной частью почтового адреса. Способ преобразования парамтера **data** в пустую строку не работает, поскольку он вызывает заклинивание маршрутизатора. Вместо этого используется синоним *:blackhole:*. То, что он делает, видно из его названия. Не происходит никакой доставки, и не создаются сообщения об ошибке. Это приводит к такому же эффекту, что и указание */dev/null*, однако это может быть избирательно выключено.

  .. warning:: Если *:blackhole:* указано где-либо в списке перенаправления, то доставка для исходной локальной части почтового адреса не выполняется, даже если присутствуют другие элементы перенаправления. Если вы создаете многоэлементный список (например, путем чтения из базы данных) и вам нужна возможность обеспечить элемент такого, который не выполняет доставку, то вы должны использовать */dev/null*.

* Попытка доставки почты для определенного адреса может быть отложена или принудительно завершена неудачно при помощи элементов::
  
      :defer:

  или
  
  ::
  
      :fail:

  соответственно. Если список перенаправления содержит такой элемент, то он применяется ко всему перенаправлению; другие элементы в списке игнорируются. Любой текст следующий за *:fail:* или *:defer:* помещается в сообщение об ошибке, ассоциированное с этой неудачной доставкой. Например, файл псевдонимов может содержать::

      X.Employee:  :fail: Gone away, no forwarding address

  В случае адреса, проверяемого из ACL или командой VRFY, текст включается в сообщение об SMTP-ошибке по умолчанию. Текст не включается в ответ на команду “EXPN”. В не-SMTP случаях текст включается в формируемое Exim'ом сообщение об ошибке.

  По умолчанию, Exim посылает код SMTP 451 для *:defer:* и 550 для *:fail:*. Однако, если сообщение начинается с трёх цифр сопровождаемых пробелом, необязательно сопровождаемых расширенным кодом вида “n.n.n”, также сопровождаемым пробелом, и самая первая цифра такая же как код ошибки по умолчанию, используется код из сообщения. Если самая первая цифра некорректна, в лог записывается паника, и используется код по умолчанию. Вы можете убрать использование предоставленного кода в маршрутизаторе **redirect**, установкой параметра **forbid_smtp_code** в истину. В этом случае, любой SMTP код тихо игнорируется.

  В ACL, явно заданное сообщение замещает значение по умолчанию, но, сообщение по умолчанию доступно в переменной $acl_verify_message и, поэтому, может быть включено в собственное сообщение о ошибке - если вы этого хотите.

  Обычно текст сообщения об ошибке располагается в конце списка перенаправления - символ “,” не завершает его - но символ новой строки действует как завершение списка. Новые строки обычно не присутствуют в списках псевдонимов. В поисках типа **lsearch** они удаляются в процессе преобразования, но они могут существовать в других типах поиска и в файлах *:include:*.

  Во время маршрутизации сообщения (в отличие от проверки) перенаправление, содержащее элемент *:fail:* вызывает немедленное отклонение входящего адреса в то время как *:defer:* указывает сообщению оставаться в очереди так, что последующая попытка доставки может произвестись позже. Если адрес откладывается слишком долго, он может в конечном счете отклониться полностью, так как срабатывают правила повтора. 

  Иногда полезно использовать одноключевой (single-key) тип поиска (см. главу :ref:`9 <ch09_00>`) для поиска псевдонимов. Однако, может быть потребность для исключений их этого. Они могут быть обработаны путем псевдонимизации их к *:unknown:*. Отличие от *:fail:* состоит в том, что это заставляет маршрутизатор **redirect** отклонять сообщение, в то время как *:fail:* принудительно завершает маршрутизацию ошибкой. Поиск, результатом которого является пустой список перенаправления, имеет тот же эффект.

.. _ch22_07:

Дублирование адресов
--------------------

Exim убирает дублированные адреса из списка адресов, к которым совершается доставка, так что для каждого адреса доставляется только одна копия. Это правило не применяется к доставкам, перенаправляемым в потоки (pipes) различными родительскими адресами, однако непрямая схема псевдонимизации::

    pipe:       |/some/command $local_part
    localpart1: pipe
    localpart2: pipe

не работает с сообщением, адресуемым обеим локальным частям, потому как когда второй из них ссылается на **pipe**, он отбрасывается как уже обработанный. Однако, схема

::

    localpart1: |/some/command $local_part
    localpart2: |/some/command $local_part

выполнит доставку в различные потоки, т.к. родители потоков различны.

.. _ch22_08:

Повторяющееся преобразование перенаправления
--------------------------------------------

В случае если сообщение не может быть доставлено всем адресатам за несколько попыток, то преобразование перенаправления проводится каждый раз заново для адресов, к дочерним адресам которых доставка не произошла. Если перенаправление используется как список рассылки, то это может привести к тому что новые подписчики получат копии старых сообщений. Параметр **one_time** может помочь этого избежать.


.. _ch22_09:

Ошибки в списках перенаправления
--------------------------------

Если установлен парамтер **skip_syntax_errors**, то неправильно написанный адрес, вызывающий ошибку разбора строки, пропускается, и в в главный лог-файл делается соответствующая запись. Это может быть полезно для автоматических списков рассылки. В любом случае, если в процессе создания списка новых адресов обнаруживается ошибка, то родительский исходный адрес откладывается. См. также параметр **syntax_errors_to**.

.. _ch22_10:

Частные параметры маршрутизатора **redirect**
---------------------------------------------

.. index::
   pair: redirect; allow_defer

===============  =============  =============  ==============
**allow_defer**  Use: redirect  Type: boolean  Default: false
===============  =============  =============  ==============

Установка этого параметра позволяет использовать *:defer:* в данных перенаправления (не в фильтрах), либо команду **defer** в файле фильтров Exim.

.. index::
   pair: redirect; allow_fail 

==============  =============  =============  ==============
**allow_fail**  Use: redirect  Type: boolean  Default: false
==============  =============  =============  ==============

Если данный парметр истинна, то элемент *:fail:* можно использовать в списке перенаправления, и команда **fail** может использоваться в файле фильтров.

.. index::
   pair: redirect; allow_filter

================  =============  =============  ==============
**allow_filter**  Use: redirect  Type: boolean  Default: false
================  =============  =============  ==============

Установка этого параметра позволяет Exim интерпретировать данные перенаправления, начинающихся с “#Exim filter” или “#Sieve filter” как множество инструкций по фильтрации. Есть несколько свойств файлов фильтров Exim, которые некоторые администраторы могут захотеть запретить; см. параметры **forbid_filter_xxx** ниже. Также возможно запретить конкретный тип фильтров, разрешая остальные; см. параметры **forbid_exim_filter** и **forbid_sieve_filter** ниже.

Фильтр запускается от имени пользователя и группы, определенных общими параметрами **user** и **group**. Они берут свои умолчательные значения из файла паролей если установлен параметр **check_local_user**, так что в случае наличия пользовательских файлов фильтров фильтр запускается от имени соответствующего пользователя. Если параметр **allow_filter** истинна, то Exim требует чтобы была выставлена параметр **check_local_user** или **user**.

.. index::
   pair: redirect; allow_freeze

================  =============  =============  ==============
**allow_freeze**  Use: redirect  Type: boolean  Default: false
================  =============  =============  ==============

Установка этого параметра позволяет использовать команду **freeze** в фильтре Exim. Эта команда чаще встречается в системных фильтрах, и выключена по умолчанию для фильтров перенаправления т.к. это не то, что вы бы хотели позволить делать обычным пользователям.

.. index::
   pair: redirect; check_ancestor

==================  =============  =============  ==============
**check_ancestor**  Use: redirect  Type: boolean  Default: false
==================  =============  =============  ==============

Этот параметр связан с обработкой созданных адресов, которые могут совпадать с некоторыми родительскими адресами в списке перенаправления для текущего адреса. Хотя данный параметр по умолчанию выключен в исходном коде, она включается в файл конфигурации по умолчанию для обработки пользовательских файлов *.forward*. Данный параметр рекомендуется для подобного использования маршрутизатора **redirect**.

Если установлен параметр **check_ancestor**, и если созданный адрес (включая домен) такой же как и родительский адрес текущего адреса, то он заменяется копией текущего адреса. Это помогает в случае когда локальная часть почтового адреса А псевдонимизируется на B, и B имеет файл *.forward*, указывающий обратно на А. Например, внутри домена, локальная часть “Joe.Bloggs” псевдонимизируется на “jb” и  *~jb/.forward* содержит::

    \Joe.Bloggs, <other item(s)>

Без установки параметра **check_ancestor** любая из локальных частей почтового адреса (“jb” или “Joe.Bloggs”) обрабатывается каждым маршрутизатором один раз. Если “jb” - имя реального почтового ящика, то почта для “jb” доставляется (перенаправленная на “Joe.Bloggs” в файле *.forward* и обратно на “jb” как псевдоним), но почта на “Joe.Bloggs” не проходит. Установка **check_ancestor** на маршрутизаторе **redirect**, который обрабатывает файл *.forward*, позволяет избежать переопределения “jb” обратно в “Joe.Bloggs”, если это был оригинальный адрес. См. ниже параметр **repeat_use**.

.. index::
   pair: redirect; check_group

===============  =============  =============  ==================
**check_group**  Use: redirect  Type: boolean  Default: see below
===============  =============  =============  ==================

Если используется параметр **file**, то группа-владелец файла проверяется только если установлен этот параметр. Разрешенные группы - это те, которые перечислены в параметре **owngroups**, вместе с пользовательской группой по умолчанию в случае если установлен параметр **check_local_user**. Если файл принадлежит неверной группе, то маршрутизация откладывается. Значение по умолчанию для этого параметра - истина в случае если установлен параметр **check_local_user** и параметр **modemask** дает права на запись для группы, либо установлен параметр **owngroups**. В любом другом случае она ложна и никаких проверок группы не выполняется.

.. index::
   pair: redirect; check_owner

===============  =============  =============  ==================
**check_owner**  Use: redirect  Type: boolean  Default: see below
===============  =============  =============  ==================

Если используется параметр **file**, то владелец файла проверяется только если установлена этот параметр. Если установлена **check_local_user**, то локальный пользователь получает разрешение; в другом случае владелец должен быть одним из перечисленных в параметре **owners**. Значение по умолчанию для этого параметра - истина если установлены параметры **check_local_user** или **owners**. В противном случае значение по умолчанию - ложь, и никаких проверок владельца не производится.

.. index::
   pair: redirect; data

========  =============  =============  ==============
**data**  Use: redirect  Type: string†  Default: unset
========  =============  =============  ==============

Этот параметр является взаимоисключающей с параметром **file**. Одна из них должна быть определена, но не обе одновременно. Содержимое параметра **data** может преобразовываться, и затем использоваться как список элементов перенаправления, или как множество инструкций фильтров. Если преобразование выполняется неудачно или результатом является пустая строка или строка без эффекта (состоящая из комментариев), то маршрутизатор отклоняется.

Если используются инструкции фильтров, то строка должна начинаться с “#Exim filter”, и все комментарии в строке, включая этот, должны оканчиваться символом новой строки. Например::

    data = #Exim filter\n\
      if $h_to: contains Exim then save $home/mail/exim endif

Если вы читаете данные из базы, где символы новой строки не могут быть включены, то вы можете использовать элемент преобразования “${sg}” для преобразования шаблона строки последовательности в символ новой строки.

.. index::
   pair: redirect; directory_transport

=======================  =============  =============  ==============
**directory_transport**  Use: redirect  Type: string†  Default: unset
=======================  =============  =============  ==============

Маршрутизатор **redirect** устанавливает прямую доставку в каталог если путь, оканчивающийся символом “/” определяется как новый “адрес”. Транспорт для доставки определяется этим параметром, который после преобразования должен быть именем сконфигурированного транспорта. Обычно им является транспорт **appendfile**.

.. index::
   pair: redirect; file

========  =============  =============  ==============
**file**  Use: redirect  Type: string†  Default: unset
========  =============  =============  ==============

Данный параметр определяет имя файла, содержащего данные для перенаправления. Она является взаимоисключающей с параметром **data**. Строка перед использованием преобразуется; если преобразование завершается неудачно - маршрутизатор отклоняется. Другие ошибки преобразования ведут к откладыванию доставки. Результатом успешного преобразования должен быть абсолютный путь. Файл читается целиком и используется как данные для перенаправления. Если данные представляют собой пустую строку или строку, состоящую из комментариев, то маршрутизатор отклоняется.

Если попытка открыть файл завершается неудачно вследствие того, что файл не существует, Exim выполняет проверку содержимого каталога, если только парметр **ignore_enotdir** не установлен в истину (см. ниже). Если каталог не существует, то доставка откладывается. Это может произойти в случае если пользовательские файлы *.forward* монтируются по NFS, и если существует проблема монтирования. Если каталог существует а файл - нет, маршрутизатор отклоняется.

.. index::
   pair: redirect; file_transport

==================  =============  =============  ==============
**file_transport**  Use: redirect  Type: string†  Default: unset
==================  =============  =============  ==============

Маршрутизатор **redirect** устанавливает прямую доставку в файл, если имя пути не оканчивающееся “/” определено как новый “адрес”. Используемый транспорт в данном случае определяется этим параметром, которая после преобразования должна содержать имя сконфигурированного транспорта. Обычно таким транспортом является транспорт **appendfile**. В процессе его работы имя файла содержится в переменной $address_file.

.. index::
   pair: redirect; filter_prepend_home

=======================  =============  =============  =============
**filter_prepend_home**  Use: redirect  Type: boolean  Default: true
=======================  =============  =============  =============

Когда этот параметр истинна и команда “save” в фильтре Exim'a определяет относительный путь, и задано значение “$home”, она автоматически добавляется к относительному пути. Если этот параметр установлен в ложь, ничего не происходит. Относительный путь передаётся транспорту неизменным.

.. index::
   pair: redirect; forbid_blackhole

====================  =============  =============  ==============
**forbid_blackhole**  Use: redirect  Type: boolean  Default: false
====================  =============  =============  ==============

Если данный параметр истинна, то элемент *:blackhole:* не может быть указан в списке перенаправления.

.. index::
   pair: redirect; forbid_exim_filter

======================  =============  =============  ==============
**forbid_exim_filter**  Use: redirect  Type: boolean  Default: false
======================  =============  =============  ==============

Если данный параметр истинна, то только фильтры Sieve разрешены, когда параметр **allow_filter** истинна.

.. index::
   pair: redirect; forbid_file

===============  =============  =============  ==============
**forbid_file**  Use: redirect  Type: boolean  Default: false
===============  =============  =============  ==============

Если данный параметр истинна, то маршрутизатор не может создавать новый адрес, осуществляющий доставку в локальный файл или каталог либо посредством фильтра, либо посредством шаблонного файла пересылки (forward). Этот параметр принудительно устанавливается в “истину” если установлен параметр **one_time**. Она применяется как к фильтрам Sieve так и к фильтрам Exim, но если она истинна, то она блокирует возможность “keep” Sieve.

.. index::
   pair: redirect; forbid_filter_dlfunc

========================  =============  =============  ==============
**forbid_filter_dlfunc**  Use: redirect  Type: boolean  Default: false
========================  =============  =============  ==============

Если данный параметр истинна, раскрытию строки в фильре exim`a не позволяется использовать средство раскрытия **dlfunc** для выполнения динамически загружаемых функций.

.. index::
   pair: redirect; forbid_filter_existstest

============================  =============  =============  ==============
**forbid_filter_existstest**  Use: redirect  Type: boolean  Default: false
============================  =============  =============  ==============

Если данный параметр истинна, то преобразования строк в фильтрах Exim не разрешаются для использования в условии **exists** или **stat** выражении.

.. index::
   pair: redirect; forbid_filter_logwrite

==========================  =============  =============  ==============
**forbid_filter_logwrite**  Use: redirect  Type: boolean  Default: false
==========================  =============  =============  ==============

Если данный параметр истинна, то использовать запись в лог в фильтрах Exim не разрешено. Запись в лог в любом случае доступно, если фильтр запускается от имени непривилегированного пользователя (что является нормальным для пользовательских файлов *.forward*).

.. index::
   pair: redirect; forbid_filter_lookup

========================  =============  =============  ==============
**forbid_filter_lookup**  Use: redirect  Type: boolean  Default: false
========================  =============  =============  ==============

Если данный параметр истинна, то преобразования строк для использования элементов **lookup** в фильтрах Exim не разрешается.

.. index::
   pair: redirect; forbid_filter_perl

======================  =============  =============  ==============
**forbid_filter_perl**  Use: redirect  Type: boolean  Default: false
======================  =============  =============  ==============

Этот параметр доступен только в случае если Exim скомпилирован с поддержкой встроенного Perl. Если это так, то преобразования строк для использования встроенного Perl не разрешены.

.. index::
   pair: redirect; forbid_filter_readfile

==========================  =============  =============  ==============
**forbid_filter_readfile**  Use: redirect  Type: boolean  Default: false
==========================  =============  =============  ==============

Если этот параметр истинна, то преобразования строк в файлах фильтров Exim для использования элементов **readfile** не разрешены.

.. index::
   pair: redirect; forbid_filter_readsocket

============================  =============  =============  ==============
**forbid_filter_readsocket**  Use: redirect  Type: boolean  Default: false
============================  =============  =============  ==============

Если этот параметр истинна, то преобразования строк в файлах фильтров Exim для использования элементов **readsocket** не разрешены.

.. index::
   pair: redirect; forbid_filter_reply

=======================  =============  =============  ==============
**forbid_filter_reply**  Use: redirect  Type: boolean  Default: false
=======================  =============  =============  ==============

Если этот параметр истинна, то данный маршрутизатор не может создать автоматический ответ. Автоответы могут создаваться только из файлов фильтров Exim, но не из традиционных файлов перенаправления или фильтров Sieve. Данный параметр автоматически становится истинной если определен параметр **one_time**.

.. index::
   pair: redirect; forbid_filter_run

=====================  =============  =============  ==============
**forbid_filter_run**  Use: redirect  Type: boolean  Default: false
=====================  =============  =============  ==============

Если этот параметр истинна, то преобразования строк в файлах фильтров Exim для использования элементов **run** не разрешены.

.. index::
   pair: redirect; forbid_include

==================  =============  =============  ==============
**forbid_include**  Use: redirect  Type: boolean  Default: false
==================  =============  =============  ==============

Если данный параметр истинна, то элементы вида::

    :include:<path name>

запрещены в списках перенаправления, не являющихся фильтрами.

.. index::
   pair: redirect; forbid_pipe

===============  =============  =============  ==============
**forbid_pipe**  Use: redirect  Type: boolean  Default: false
===============  =============  =============  ==============

Если данный параметр истинна, то маршрутизатор не может создавать новый адрес, определяющий доставку в трубу (pipe), равно как из фильтра Exim, так и из обычного файла перенаправления. Если установлен параметр **one_time**, то данный параметр автоматически становится истинной.

.. index::
   pair: redirect; forbid_sieve_filter

=======================  =============  =============  ==============
**forbid_sieve_filter**  Use: redirect  Type: boolean  Default: false
=======================  =============  =============  ==============

Если этот параметр установлена в истину, то когда истина **allow_filter** разрешены только фильтры Exim'a.

.. index::
   pair: redirect; forbid_smtp_code

====================  =============  =============  ==============
**forbid_smtp_code**  Use: redirect  Type: boolean  Default: false
====================  =============  =============  ==============

Если этот параметр установлен в истину, любой код ошибки SMTP предоставленный в начале сообщения определённого для *:defer:* или *:fail:* тихо игнорируется, и всегда используется код по умолчанию (451 и 550 соответственно).

.. index::
   pair: redirect; hide_child_in_errmsg

========================  =============  =============  ==============
**hide_child_in_errmsg**  Use: redirect  Type: boolean  Default: false
========================  =============  =============  ==============

Если данный параметр истинна, то она вынуждает Exim скрывать дочерний адрес в случае, если созданное сообщение об отказе в доставке или о задержке. Вместо этого подставляется адрес созданный <родительский адрес>. Конечно, это применимо только к созданным локально сообщениям об отказе в доставке. Если сообщение перенаправляется на другой хост, то сообщение об отказе может быть послано на создаваемый адрес.

.. index::
   pair: redirect; ignore_eacces

=================  =============  =============  ==============
**ignore_eacces**  Use: redirect  Type: boolean  Default: false
=================  =============  =============  ==============

Если этот параметр установлен и попытка открыть файл перенаправления вызывает ошибку EACCES (доступ запрещен), то маршрутизатор **redirect** ведет себя как будто файл не существует.

.. index::
   pair: redirect; ignore_enotdir

==================  =============  =============  ==============
**ignore_enotdir**  Use: redirect  Type: boolean  Default: false
==================  =============  =============  ==============

Если данный параметр определена и попытка открыть файл перенаправления вызывает ошибку ENOTDIR (что-либо в пути не является директорией), то маршрутизатор ведет себя как будто файл не существует.

Установка **ignore_enotdir** имеет другой эффект: Когда маршрутизатор **redirect**, имеющий параметр **file**, обнаруживает что данный файл не существует (ошибка ENOENT), он пытается выполнить функцию *stat()* для родительской директории, например при проверке на отмонтированные NFS директории. Если функция возвращает ненулевое значение, то доставка откладывается. Однако, неверно выполнять такую проверку когда установлен параметр **ignore_enotdir**, потому что этот параметр заставляет Exim игнорировать в пути “то, что не является директорией” (ошибка ENOTDIR). Это вопрос неоднозначный, потому как некоторые операционные системы выдают ошибку ENOENT, а некоторые - ENOTDIR.


.. index::
   pair: redirect; include_directory

=====================  =============  =============  ==============
**include_directory**  Use: redirect  Type: string   Default: unset
=====================  =============  =============  ==============

Если установлена этот параметр, пути любых элементов *:include:* в списке перенаправления должны начинаться с этой директории.

.. index::
   pair: redirect; modemask

============  =============  ===================  ============
**modemask**  Use: redirect  Type: octal integer  Default: 022
============  =============  ===================  ============

Параметр определяет биты режима, которые не должны быть установлены для файла, определенного параметром **file**. Если установлен любой из этих битов, то доставка откладывается.

.. index::
   pair: redirect; one_time

============  =============  =============  ==============
**one_time**  Use: redirect  Type: boolean  Default: false
============  =============  =============  ==============

Иногда факт что Exim перечитывает файл псевдонимов и заново обрабатывает файлы перенаправления каждый раз когда он пытается доставить сообщение, вызывает проблему когда один или несколько созданных адресов не могут быть доставлены с первой попытки. Это не является проблемой повторной доставки - Exim способен это обработать - кроме ситуаций когда список перенаправления меняется во время, когда сообщение находится в очереди Exim'a. Это особенно справедливо в случае списков рассылки, когда новые подписчики могут получить копии сообщений в случае если они были посланы до того как они подписались на рассылку. 

Если параметр **one_time** установлен и любые адреса созданные маршрутизатором не удается обработать с первой попытки, то эти адреса добавляются к сообщению как адреса “верхнего уровня” (top level) и родительский адрес, который их создал помечается как **delivered**. То есть перенаправление на следующей попытке доставки не происходит.

.. warning:: Это означает что любое добавление или удаление заголовков, определяемое маршрутизатором будет утеряно если доставка не будет произведена успешно с первой попытки. В этом случае когда установлен параметр **one_time** параметры **headers_add** и **headers_remove** не разрешены.

.. warning:: Для обеспечения того чтобы маршрутизатор создавал только адреса (в отличие от труб (pipes), доставок в файлы (file deliveries) или авто-ответов (auto-replies)), параметры **forbid_file**, **forbid_pipe** и **forbid_filter_reply** принудительно устанавливаются в значение “истина” когда установлен параметр **one_time**.

.. warning:: Общий маршрутизатор **unseen** не может быть задан с **one_time**.

Оригинальный адрес верхнего уровня запоминается с каждым из созданных адресов, и выводится в любых логах. Однако, промежуточные адреса на записываются. Это создаёт различие для логов только если селектор логов **all_parents** установлен. Ожидается, что обычно **one_time** будет использоваться для списка адресатов, где есть лишь один уровень раскрытия.

.. index::
   pair: redirect; owners

==========  =============  =================  ==============
**owners**  Use: redirect  Type: string list  Default: unset
==========  =============  =================  ==============

Это определяет список разрешённых владельцев для файла заданного как **file**. Этот список - дополнение к локальному пользователю, когда установлен параметр **check_local_user**. Смотрите **check_owner** ниже.

.. index::
   pair: redirect; owngroups

=============  =============  =================  ==============
**owngroups**  Use: redirect  Type: string list  Default: unset
=============  =============  =================  ==============

Это определяет список разрешённых групп для файла заданного как **file**. Этот список - дополнение к локальной группе, когда установлен параметр **check_local_user**. Смотрите параметр **check_group** выше.

.. index::
   pair: redirect; pipe_transport

==================  =============  =============  ==============
**pipe_transport**  Use: redirect  Type: string†  Default: unset
==================  =============  =============  ==============

Маршрутизатор **redirect** задаёт прямую доставку в трубу, когда строка начинающаяся с “|” задана как новый “адрес”. Используемый транспорт определён этим параметром, который, после раскрытия, должен быть назван именем настроенного транспорта. Когда транспорт запущен, команда pipe в $address_pipe.

.. index::
   pair: redirect; qualify_domain

==================  =============  =============  ==============
**qualify_domain**  Use: redirect  Type: string†  Default: unset
==================  =============  =============  ==============

Если этот параметр установлен, и создан неполный адрес (без домена), и в нормальных условиях этот адрес был бы квалифицирован (дополнен доменным именем) по глобальному параметру **qualify_recipient**, но вместо этого он квалифицируется доменом, содержащимся в этой строке, после раскрытия. Если раскрытие неудачно, маршрутизатор снижается(?). Если вы хотите вернуться к значению по умолчанию, то можно раскрыть $qualify_recipient.

Этот параметр применяется ко всем неполным адресам созданных фильтрами Exim`a, но для традиционных файлов *.forward* это применяется лишь для адресов не предварённых обратным слешем. Фильтры Sieve не могут создавать неполные адреса.

.. index::
   pair: redirect; qualify_preserve_domain

===========================  =============  =============  ==============
**qualify_preserve_domain**  Use: redirect  Type: boolean  Default: false
===========================  =============  =============  ==============

Если установлен этот параметр, то локальный параметр **qualify_domain** не должен быть задан (будет ошибка конфигурации, если задать оба). Если создается неполный адрес (без домена), он дополняется доменом родительского адреса (предыдущий предок), вместо глобального домена из **qualify_recipient**. В случае традиционного файла *.forward* это применяется вне зависимости от того, был ли перед адресом обратный слэш.

.. index::
   pair: redirect; repeat_use

==============  =============  =============  =============
**repeat_use**  Use: redirect  Type: boolean  Default: true
==============  =============  =============  =============

Если этот параметр установлен в “false”, то маршрутизатор пропускается для дочерних адресов, предки которых были маршрутизированны этим маршрутизатором. Это проверяется до проверки других предварительных условий. Правила Exim`a по умолчанию против зацикливания пропускаются лишь в случае если предок с таким же адресом как и текущий. Смотрите также параметры **check_ancestor** и **redirect_router**.

.. index::
   pair: redirect; reply_transport

===================  =============  =============  ==============
**reply_transport**  Use: redirect  Type: string†  Default: unset
===================  =============  =============  ==============

Маршрутизатор **redirect** устанавливает автоответ когда в фильтре используются команды **mail** или **vacation**. Используемый транспорт определяется этим параметром, который, после раскрытия, должен быть именем настроенного транспорта. Обычно это транспорт **autoreply**. Другие транспорты вряд ли смогут принести какую-то пользу.

.. index::
   pair: redirect; rewrite

===========  =============  =============  =============
**rewrite**  Use: redirect  Type: boolean  Default: true
===========  =============  =============  =============

Если этот параметр установлен в “false”, адреса созданные маршрутизатором не являются объектами для перезаписи адреса. Иначе, они будут обработаны как новые адреса и перезаписаны в соответствии с глобальными правилами перезаписи.

.. index::
   pair: redirect; sieve_subaddress

====================  =============  =============  ==============
**sieve_subaddress**  Use: redirect  Type: string†  Default: unset
====================  =============  =============  ==============

Значение этого параметра передаётся фильтру Sieve для задания части адреса ``:subaddress``.

.. index::
   pair: redirect; sieve_useraddress

=====================  =============  =============  ==============
**sieve_useraddress**  Use: redirect  Type: string†  Default: unset
=====================  =============  =============  ==============

Значение этого параметра передаётся фильтру Sieve для задания части адреса ``:user``. Если она не задана, для ``:user`` используется оригинальная локальная часть адреса (включая суффикс и префикс).

.. index::
   pair: redirect; sieve_vacation_directory

============================  =============  =============  ==============
**sieve_vacation_directory**  Use: redirect  Type: string†  Default: unset
============================  =============  =============  ==============

Для включения расширения **vacation** для фильтров Sieve, вы должны задать **sieve_vacation_directory** в каталог где находятся БД **vacation** (больше ничего не помещайте в эту директорию), и гарантировать, что параметр **reply_transport** относится к транспорту **autoreply**. Каждому пользователю необходим собственный каталог; Exim создаст их в случае необходимости.

.. index::
   pair: redirect; skip_syntax_errors

======================  =============  =============  ==============
**skip_syntax_errors**  Use: redirect  Type: boolean  Default: false
======================  =============  =============  ==============

Если установлен параметр **skip_syntax_errors**, синтаксически неправильные адреса, в переназначении вне фильтра, пропускаются, и каждый неудачный адрес записывается в логи. Если установлен параметр **syntax_errors_to**, то сообщение посылается по заданному в ней адресу с подробностями о неудаче. Если установлен параметр **syntax_errors_text**, её содержимое раскрывается и помещается в начале сообщения об ошибке, созданного **syntax_errors_to**. Обычно, она принудительно устанавливает **syntax_errors_to** к тому же адресу, что и общий параметр **errors_to**. Параметр **skip_syntax_errors** часто используется для обработки лисов рассылки.

Если все адреса в списке редиректа пропущены из-за ошибок синтаксиса, маршрутизатор отказывается обрабатывать оригинальный адрес, и он передаётся последующим маршрутизаторам.

Если параметр **skip_syntax_errors** установлена при интерпретации фильтра Exim`a, любые синтаксические ошибки в фильтре вызывают пропуск без предпринятия какого-либо действия. Инцидент записывается, и маршрутизатор отказывается обрабатывать адрес, и адрес передаётся следующим маршрутизатором.

Любые синтаксические ошибки в фильтрах Sieve, повод для действия **keep**. Это действие определено :rfc:`3028`. Значения **skip_syntax_errors**, **syntax_errors_to**, и **syntax_errors_text** не используются.

Параметр **skip_syntax_errors** может использоваться для задания тех ошибок в пользовательских списках перенаправления или файлах фильтра, используемых с адресом который не переадресуется, могут быть использованы для уведомления пользователей об этих ошибках, с помощью такого маршрутизатора::

    userforward:
      driver = redirect
      allow_filter
      check_local_user
      file = $home/.forward
      file_transport = address_file
      pipe_transport = address_pipe
      reply_transport = address_reply
      no_verify
      skip_syntax_errors
      syntax_errors_to = real-$local_part@$domain
      syntax_errors_text = \
        This is an automatically generated message. An error has\n\
        been found in your .forward file. Details of the error are\n\
        reported below. While this error persists, you will receive\n\
        a copy of this message for every message that is addressed\n\
        to you. If your .forward file is a filter file, or if it is\n\
        a non-filter file containing no valid forwarding addresses,\n\
        a copy of each incoming message will be put in your normal\n\
        mailbox. If a non-filter file contains at least one valid\n\
        forwarding address, forwarding to the valid addresses will\n\
        happen, and those will be the only deliveries that occur. \n\
        \n\
        Честно говоря, ломает перводить чё тут написано, сами напишете \n\
        что захотите :))) Общий смысл - про ошибку в фильтре пользователя, \n\
        которому эта мессага и пошлётся.

Также, вам необходим маршрутизатор, чтобы гарантировать, что локальные адреса у которых распознан преффикс ``real-``, не форвардятся и не фильтруются. Для примера, его можно поместить сразу перед маршрутизатором **userforward**::

    real_localuser:
      driver = accept
      check_local_user
      local_part_prefix = real-
      transport = local_delivery

В целях безопасности, было бы хорошей идеей ограничить использование этого маршрутизатора локально созданными сообщениями, используя условие типа такого::

    condition = ${if match {$sender_host_address}\
                           {\N^(|127\.0\.0\.1)$\N}}


======================  =============  =============  ==============
**syntax_errors_text**  Use: redirect  Type: string†  Default: unset
======================  =============  =============  ==============

Смотрите выше, параметр **skip_syntax_errors**.

====================  =============  ============  ==============
**syntax_errors_to**  Use: redirect  Type: string  Default: unset
====================  =============  ============  ==============

Смотрите выше, параметр **skip_syntax_errors**.

