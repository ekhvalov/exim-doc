
.. _ch36_00:

Аутентификатор **cyrus_sasl**
=============================

Код для этого аутентификатора был предоставлен Matthew Byng-Maddick of A L Digital Ltd (http://www.aldigital.co.uk).

Аутентификатор **cyrus_sasl** предоставляет серверную поддержку для реализации :rfc:`2222` (“Simple Authentication and Security Layer”) библиотекой Cyrus SASL. Эта библиотека поддерживает множество аутентификационных механизмов, включая PLAIN и LOGIN, а также несколько других, которые Exim не поддерживает непосредственно. В частности, есть поддержка для аутентификации Kerberos.

Аутентификатор **cyrus_sasl** предоставляет шлюзовой механизм напрямую к интерфейсу Cyrus, таким образом, ваша библиотека Cyrus может, например, CRAM-MD5, что может аутентификатор **cyrus_sasl**. По умолчанию, им используется публичное имя драйвера, для определения, какой механизм поддерживать.

Когда требуется доступ к какому-то секретному файлу, например, в GSSAPI или CRAM-MD5, нужно отметить, что аутентификатор выполняется от пользователя Exim`a, и, что библиотека Cyrus SASL не может повысить привилегии по умолчанию. Также, вам может понадобиться установить переменные окружения, в зависимости от используемого драйвера.

Имя приложения для Exim'a - “exim”, таким образом различные параметры SASL могут быть установлены в *exim.conf* в вашей директории SASL. Если для Kerberos вы используете GSSAPI, заметьте, что что из-за ограничений интерфейса GSSAPI изменение сервера *keytab* может потребовать немедленного сообщения на уровень Kerberos. Механизм для этого зависит от реализации Kerberos. Например, для Heimdal, переменная окружения KRB5_KTNAME может быть установлена в альтернативный файл *keytab*. Exim передаёт эту переменную через своё собственное окружение когда запускается от root или пользователя Exim'a. Пользователя Exim должен иметь право читать файл *keytab*.

.. _ch36_01:

Использование **cyrus_sasl** в качестве сервера
-----------------------------------------------

Аутентификатор **cyrus_sasl** обладает четырьмя частными параметрами. Он помещает имя пользователя (из успешной аутентификации) в $auth1. Для совместимости с предыдущими версиями Exim`a, имя пользователя, также, помещается в переменную $1. Однако, использование этой переменной для данной цели, в настоящее время осуждается, поскольку может привести к беспорядку при раскрытиях строк, использующих цифровые переменные для других целей.

.. index::
   pair: cyrus_sasl; server_hostname

===================  ===============  =============  ==================
**server_hostname**  Use: cyrus_sasl  Type: string†  Default: see below
===================  ===============  =============  ==================

Этот параметр выбирает имя хоста, используемое при связи с библиотекой. Значение по умолчанию -  $primary_hostname. Она выше нижележащего плагина SASL, который работает с этими данными.

.. index::
   pair: cyrus_sasl; server_mech

===============  ===============  ============  ==================
**server_mech**  Use: cyrus_sasl  Type: string  Default: see below
===============  ===============  ============  ==================

Этот параметр выбирает аутентификационный механизм который должен использовать этот драйвер. Значение по умолчанию - значение общего параметра **public_name**. Она позволяет вам использовать иной основной механизм для объявленного имени. Например::

    sasl:
      driver = cyrus_sasl
      public_name = X-ANYTHING
      server_mech = CRAM-MD5
      server_set_id = $auth1

.. index::
   pair: cyrus_sasl; server_realm

================  ===============  ============  ==============
**server_realm**  Use: cyrus_sasl  Type: string  Default: unset
================  ===============  ============  ==============

Этот параметр определяет область SASL, в которой осуществляется сервер.

.. index::
   pair: cyrus_sasl; server_service

==================  ===============  ============  =============
**server_service**  Use: cyrus_sasl  Type: string  Default: smtp
==================  ===============  ============  =============

Это - сервис SASL, в области которого осуществляется сервер.

Для прямых случаев, вы не должны устанавливать какую-либо из частных параметров аутентификатора. Всё что вам необходимо сделать - задать соответствующий механизм как публичное имя. Таким образом, если у вас есть библиотека SASL, поддерживающая CRAM-MD5 и PLAIN, вы могли бы обладать двумя аутентификаторами, как показано далее::

    sasl_cram_md5:
      driver = cyrus_sasl
      public_name = CRAM-MD5
      server_set_id = $auth1

    sasl_plain:
      driver = cyrus_sasl
      public_name = PLAIN
      server_set_id = $auth2

Cyrus SASL действительно осуществляет аутентификационный метод LOGIN, несмотря на то, что это - нестандартный метод. По умолчанию, это отключено в исходных кодах, но присутствует во многих двоичных дистрибутивах.


