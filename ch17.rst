
.. _ch17_00:

Маршрутизатор **dnslookup**
===========================

Маршрутизатор **dnslookup** при помощи запросов к DNS ищет узлы, обрабатывающие почту для данного домена. Если не установлен gfhfvtnh **verify_only**, то для этого маршрутизатора должен быть всегда определен транспорт.

Если в конфигурации есть поддержка SRV (см. параметр **check_srv** ниже), Exim сначала ищет SRV-записи. Если они не найдены или поддержка SRV отсутствует, то ищутся MX-записи. Если MX-записей нет, ищутся А-записи. Однако, может быть установлен параметр **mx_domains** для отключения прямого использования адресных записей.

MX-записи равного приоритета сортируются Exim в случайном порядке. Затем Exim ищет адресные записи имен узлов, полученных из MX- или SRV-записей. Если узел имеет более одного IP-адреса, они сортируются в случайном порядке, за исключением того, что IPv6-адреса всегда сортируются перед IPv4-адресами. Если все найденные IP-адреса отбрасываются общим параметром **ignore_target_hosts**, то маршрутизатор отклоняется.

Все MX-записи, указывающие на локальный узел или на любое другое имя узла, определенное параметром **hosts_treat_as_local**, и не имеющие наивысший приоритет (меньшее из значений MX-записей), отбрасываются вместе с другими MX-записями равного или меньшего приоритета.

Если узел, на который указывает MX-запись высшего приоритета или A-запись, является локальным, либо совпадает с указанным параметром **hosts_treat_as_local**, то дальнейшее поведение управляется общим параметром **self**.

.. _ch17_01:

Проблемы с поиском в DNS
------------------------

Бывают проблемы с DNS-серверами при поиске записей SRV. Некоторые плохо настроенные (в оригинале - плохо поступающие) серверы возвращают ошибку DNS или не отвечают вообще (таймаут) при запросе несуществующих записей SRV. Подобные проблемы были зафиксированы и для MX-записей. Глобальный параметр **dns_again_means_nonexist** может помочь с этой проблемой, но грубо, поскольку это глобальный параметр.

Поэтому, есть два параметра, **srv_fail_domains** и **mx_fail_domains** контролирующие происходящее при поиске в DNS в маршрутизаторе **dnslookup** приводит к ошибке DNS или ответу “try again” (попробуйте снова). Если попытка поиска SRV или MX записи приводит к одному из этих результатов, и домен соответствует уместному(?) списку, то Exim ведёт себя так, будто доменная система ответила - нет такой записи. В случае поиска SRV-записи это значит, что маршрутизатор продолжает искать MX-записи; в случае поиска MX продолжается поиск A или AAAA запись, если домен не совпадает с **mx_domains**, в случае ошибки маршрутизации.

.. _ch17_02:

Частные параметры для **dnslookup**
-----------------------------------

Ниже приведен список специфичных параметров, которые могут быть использованы для изменения способа обработки поиска в DNS.

.. index::
   pair: dnslookup; check_secondary_mx 

======================  ==============  =============  ==============
**check_secondary_mx**  Use: dnslookup  Type: boolean  Default: false
======================  ==============  =============  ==============

Если установлен этот параметр, маршрутизатор отклоняется до тех пор пока локальный узел находится в списке узлов, полученном при запросе MX-записей. Она может быть использована для выявления доменов для которых локальный узел является вторичным почтовым сервером. Способ, которым Exim определяет является ли узел локальным узелом, описан в разделе :ref:`13.8 <ch13_08>`.

.. index::
   pair: dnslookup; check_srv

=============  ==============  =============  ==============
**check_srv**  Use: dnslookup  Type: string†  Default: unset
=============  ==============  =============  ==============

Маршрутизатор **dnslookup** поддерживает использование SRV-записей (см. :rfc:`2782`) в дополнение к MX- и A-записям. Поддержка их по умолчанию отключена. Для включения поддержки SRV, нужно определить параметр **check_srv** именем нужной службы. К примеру,

::

    check_srv = smtp

ищет SRV-записи, относящиеся к нормальной службе **smtp**. Параметр является вычисляемой, таким образом имя службы может меняться от сообщения к сообщению или от адреса к адресу. Это может быть полезно если SRV-записи используются для службы **submission**. Если вычисление значения завершается неудачно, параметр **check_srv** игнорируется и маршрутизатор начинает поиск MX-записей обычным способом.

Если вычисление значения завершилось успешно, то маршрутизатор сначала ищет SRV-записи для данной службы (подразумевается TCP-протокол). Простая SRV-запись с именем узла “.” указывает на отсутствие такой службы для данного домена. В этом случае маршрутизатор отклоняется. Если находятся другие типы SRV-записей, то они используются для построения списка узлов для доставки в соответствии с правилами :rfc:`2782`. Поиск MX-записей в этом случае не производится. 

Однако, если ни одной SRV-записи не найдено, то производится поиск MX-записей (и A-записей) традиционным способом. Другими словами SRV-записи имеют приоритет над MX-записями, так же как и MX-записи имеют приоритет над A-записями. Стоит заметить, что такое поведение не одобряется :rfc:`2782`, хотя предыдущий черновик RFC его определял. Явно утверждается что MX-записей достаточно для нужд электронной почты и что SRV-записи не должны использоваться для этих целей. Однако, SRV-записи имеют дополнительное свойство “вес”, которое некоторые люди могут найти полезным, пытаясь распределить SMTP-нагрузку между узлами разной мощности.

Смотрите раздел :ref:`17.1 <ch17_01>` для обсуждений поведения Exim`a при ошибках поиска в DNS.

.. index::
   pair: dnslookup; mx_domains

==============  ==============  ==================  ==============
**mx_domains**  Use: dnslookup  Type: domain list†  Default: unset
==============  ==============  ==================  ==============

Домен, попадающий в список **mx_domains** должен иметь либо MX-запись, либо SRV-запись для того чтобы быть распознанным надлежащим образом. (Имя этого параметра может быть усовершенствованно). К примеру, если все почтовые серверы в домене “fict.example” имеют MX-записи, за исключением узлов в “discworld.fict.example”, то вы можете использовать такую запись::

    mx_domains = ! *.discworld.fict.example : *.fict.example

Данная запись определяет что сообщения, адресованные домену, попадающему в этот список, но не имеющему MX-записи, должны быть немедленно отклонены вместо маршрутизации их с использованием A-записи.

.. index::
   pair: dnslookup; mx_fail_domains

===================  ==============  ==================  ==============
**mx_fail_domains**  Use: dnslookup  Type: domain list†  Default: unset
===================  ==============  ==================  ==============

Если DNS-поиск MX-записи для одного из доменов в этом списке вернул ошибку DNS, Exim ведёт себя как будто MX записи вообще не найдены. Смотрите раздел :ref:`17.1 <ch17_01>` для получения подробной информации.

.. index::
   pair: dnslookup; qualify_single

==================  ==============  =============  =============
**qualify_single**  Use: dnslookup  Type: boolean  Default: true
==================  ==============  =============  =============

Когда данный параметр истинна, параметр RES_DEFNAMES механизма разрешения имен устанавливается для посылки DNS-запросов. Обычно, но не стандартно, это указывает механизму разрешения имен соотносить простые имена с доменом по умолчанию. К примеру, на машине “dictionary.ref.example” домен “thesaurus” будет изменен на “thesaurus.ref.example” внутри механизма разрешения имен. Для подробного описания того, что на самом деле выполняет ваш механизм разрешения имен, обратитесь к разделам справочного руководства **resolver** и *resolv.conf*.

.. index::
   pair: dnslookup; rewrite_headers

===================  ==============  =============  =============
**rewrite_headers**  Use: dnslookup  Type: boolean  Default: true
===================  ==============  =============  =============

Если имя домена в обрабатываемом адресе не является полным, оно может быть раскрыто до своей полной формы при помощи DNS-запроса. К примеру, если адрес определен как “dormouse@teaparty”, то домен может быть расширен до teaparty.wonderland.fict.example”. Раскрытие домена также может быть результатом установки параметра **widen_domains**. Если **rewrite_headers** истинно то все экземпляры сокращенного доменного имени во всех “Bcc:”, “Cc:”, “From:”, “Reply-to:”, “Sender:”, и “To:” строках заголовка сообщения заменяются полным доменным именем. 

Этот параметр должен быть отключен только тогда, когда точно известно, что никакое сообщение не будет когда-либо отправлено за пределы того окружения, где сокращение имеет смысл. 
    
Если при поиске MX-записи в DNS происходит совпадение по шаблону, серверы имен обычно возвращают запись, содержащую найденное имя, тем самым делая невозможным определение присутствия шаблона. Однако, с недавних пор, некоторые серверы DNS возвращают запись шаблона. Если имя, возвращенное в результате DNS-запроса, начинается с “*”, оно не используется для переписывания заголовков.

.. index::
   pair: dnslookup; same_domain_copy_routing

============================  ==============  =============  ==============
**same_domain_copy_routing**  Use: dnslookup  Type: boolean  Default: false
============================  ==============  =============  ==============

Адреса с одинаковым именем домена обычно маршрутизируются маршрутизатором **dnslookup** на один и тот же самый список узлов. Однако, данный факт не может быть доказан, так как параметры маршрутизатора и предусловия могут ссылаться на локальную часть адреса. По умолчанию, Exim маршрутизирует каждый адрес независимо друг от друга. DNS-серверы используют кэширование, таким образом повторные DNS-запросы не являются избыточными. В любом случае, личная почта в основном имеет немного получателей.

Если вы обслуживаете списки расылки с большим количеством подписчиков в одном и том же домене, и используете маршрутизатора **dnslookup**, который независим от локальной части, вы можете включить параметр **same_domain_copy_routing** чтобы избегать повторяющихся DNS-запросов для идентичных доменов в одном письме. В этом случае, если **dnslookup** маршрутизирует адрес удаленному транспорту, все остальные адреса в сообщении с тем же самым именем домена получателя автоматически аналогично маршрутизируются без независимой обработки, обеспечивая следующие условия:

* Маршрутизатор не обрабатывает адреса, определенные параметрами **headers_add** или **headers_remove**.
* Маршрутизатор не изменяет адреса в любом случае, к примеру, способом **widening** домена.

.. index::
   pair: dnslookup; search_parents

==================  ==============  =============  ==============
**search_parents**  Use: dnslookup  Type: boolean  Default: false
==================  ==============  =============  ==============

Когда этот параметр истинна, параметр RES_DNSRCH резолвера устанавливается для выполнения DNS-запросов, что отличается от параметра **qualify_single**, в которой это применимо к доменам, содержащем точки. Обычно, но не стандартно, это указывает механизму разрешения имен искать имя в текущем и родительском доменах. К примеру, если на машине в домене “fict.example” DNS-запрос “teaparty.wonderland” не разрешился, то резолвер попытается разрешить имя “teaparty.wonderland.fict.example”. Для подробного описания того, что на самом деле выполняет ваш механизм разрешения имен, обратитесь к разделам справочного руководства по **resolver** и *resolv.conf*.

Установка этого параметра в значение “true” может вызвать проблемы в доменах, имеющих шаблонную MX-запись, потому что любой домен, не имеющий своей собственной MX-записи, совпадает с локальным шаблоном.

.. index::
   pair: dnslookup; srv_fail_domains

====================  ==============  ==================  ==============
**srv_fail_domains**  Use: dnslookup  Type: domain list†  Default: unset
====================  ==============  ==================  ==============

Если DNS-поиск SRV-записи для одного из доменов в этом списке вернул ошибку DNS, Exim ведёт себя как будто SRV записи вообще не найдены. Смотрите разде :ref:`17.1 <ch17_01>` для получения подробной информации.

.. index::
   pair: dnslookup; widen_domains

=================  ==============  =================  ==============
**widen_domains**  Use: dnslookup  Type: string list  Default: unset
=================  ==============  =================  ==============

Если DNS-запрос завершился неудачно и этот параметр установлен, то каждая из этих строк по очереди добавляется в конец имени домена, и запрос выполняется снова. К примеру, если

::

    widen_domains = fict.example:ref.example

указана и запрос имени “klingon.dictionary” завершился неудачно, запрашивается “klingon.dictionary.fict.example”, а если и он не разрешился, то пробуется “klingon.dictionary.ref.example”. Заметьте, что параметры **qualify_single** и **search_parents**, описанные выше, могут дополнить доменное имя, чтобы быть принятыми сервисом DNS.

.. _ch17_03:

Эффект параметров **qualify_single** и **search_parents**
---------------------------------------------------------

Когда домен получателя изменяется механизмом разрешения имен в результате применения параметров **qualify_single** или **search_parents**, Exim переписывает соответствующий адрес в строках заголовка письма, если параметр **rewrite_headers** не установлена в “false”. Затем Exim маршрутизирует адрес заново, используя полное доменное имя.

Эти два параметра действуют только на DNS-запрос, который выполняется маршрутизатором для домена маршрутизируемого адреса. Они не действуют на запросы, выполняемые для записей такого рода::

    domains = @mx_any

что может случиться во время обработки предопределенных условий маршрутизатора перед входом в него. Для таких запросов расширение никогда не выполняется.
