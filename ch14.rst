
.. _ch14_00:

Главная конфигурация
====================

Первая часть файла рабочей конфигурации содержит три типа элементов:

* Макроопределения: Эти строки начинаются с символа в верхнем регистре. Смотрите раздел :ref:`6.4 <ch06_04>` для получения дополнительных деталей о макрообработке.
* Определения именованных списков: Эти строки начинаются с одного из слов **domainlist**, **hostlist**, **addresslist**, или **localpartlist**. Их использование описано в разделе :ref:`10.5 <ch10_05>`.
* Главные конфигурационные настройки: Каждая установка занимает одну строку файла (с возможностью продолжения). Если какой-либо установке предшествует слово **hide**, gfhfvtnh командной строки **-bP** отображает её значение лишь административным пользователям. Смотрите раздел :ref:`6.10 <ch06_10>` для описания синтаксиса этих параметров настройки.

Эта глава определяет все главные конфигурационные параметры, наряду с их типами и значениями по умолчанию. Для простоты нахождения специфического параметра, они перечислены в алфавитном порядке ниже, в разделе :ref:`14.23 <ch14_23>`. Однако, поскольку сейчас тут очень много параметров, они, вначале, кратко перечислены в функциональных группах, как помощь, для нахождения имени параметра, который вы ищете. Некоторые параметры перечислены более чем в одной группе.

.. _ch14_01:

Разное
------
=========================  ======================
**bi_command**             запускается при параметра командной строки **-bi**
**disable_ipv6**           не обрабатывать IPv6
**keep_malformed**         для повреждённых файлов - должно не случаться
**localhost_number**       для уникальных идентификаторов сообщений, в кластерах
**message_body_newlines**  сохранять число переводов строки в ``$message_body``
**message_body_visible**   как много показывать в ``$message_body``
**mua_wrapper**            работать в режиме **MUA wrapper**
**print_topbitchars**      печатать  символы верхних битов
**timezone**               принудительная установка часового пояса
=========================  ======================

.. _ch14_02:

Параметры Exim
--------------

=========================  ====================== 
**exim_group**             переопределяет вкомпиленное значение
**exim_path**              переопределяет вкомпиленное значение
**exim_user**              переопределяет вкомпиленное значение
**primary_hostname**       значение по умолчанию из *uname()*
**split_spool_directory**  использовать много директорий
**spool_directory**        переопределяет вкомпиленное значение
=========================  ======================


.. _ch14_03:

Настройки привелегий
--------------------

=============================  =====================
**admin_groups**               список административных групп
**deliver_drop_privilege**     отказ от root`овых прав при доставке
**local_from_check**           вставлять “Sender:”, если необходимо
**local_from_prefix**          для проверки “From:”, для локального отправителя
**local_from_suffix**          для проверки “From:”, для локального отправителя
**local_sender_retain**        оставлять “Sender:”, для недоверенных пользователей
**never_users**                не запускать доставки под этими пользователями
**prod_requires_admin**        принудительная доставка требует административного пользователя
**queue_list_requires_admin**  листинг очереди требует административного пользователя
**trusted_groups**             группы, которым доверяют
**trusted_users**              пользователи, которым доверяют
=============================  =====================

.. _ch14_04:

Запись в лог
------------

==========================  =========
**hosts_connection_nolog**  не записывать в лог соединения
**log_file_path**           переопределяет вкомпиленные значения
**log_selector**            установить/сбросить необязательную запись в лог
**log_timezone**            добавлять в строки логов временную зону
**message_logs**            создавать логи для каждого сообщения
**preserve_message_logs**   оставлять логи каждого сообщения после обработки
**process_log_path**        для ``SIGUSR1`` и *exiwhat*
**syslog_duplication**      контролировать повторяющиеся строки логов в syslog
**syslog_facility**         установка поля “facility” в syslog
**syslog_processname**      установка поля “ident” в syslog
**syslog_timestamp**        временная метка в строках syslog
**write_rejectlog**         контролирует использование лога сообщений
==========================  =========

.. _ch14_05:

Замороженные сообщения
----------------------

========================  ==========
**auto_thaw**             устанавливает время повтора, для замороженного сообщения
**freeze_tell**           посылка сообщения, когда происходит заморозка
**move_frozen_messages**  в другую директорию
**timeout_frozen_after**  как долго хранить замороженные сообщения
========================  ==========

.. _ch14_06:

Поиск данных
------------

========================  =========
**ibase_servers**         сервера InterBase
**ldap_default_servers**  используется, если нет сервера в запросе
**ldap_version**          устанавливает версию протокола
**lookup_open_max**       сколько файлов держать открытыми
**mysql_servers**         список MySQL-серверов по умолчанию
**oracle_servers**        сервера Oracle
**pgsql_servers**         список PostgreSQL-серверов по умолчанию
**sqlite_lock_timeout**   смысл соответствует названию параметра
========================  =========

.. _ch14_07:

Идентификаторы сообщений
------------------------

============================  =========
**message_id_header_domain**  используется для построения заголовка “Message-ID:”
**message_id_header_text**    смысл соответствует названию параметра
============================  =========

.. _ch14_08:

Запуск встроенного Perl`a
-------------------------

=================  ===========
**perl_at_start**  всегда запускать интерпретатор
**perl_startup**   код для выполнения, при запуске Perl
=================  ===========


.. _ch14_09:

Даемон
------

==========================  ==============
**daemon_smtp_ports**       порты по умолчанию
**daemon_startup_retries**  число повторов при неудачном запуске
**daemon_startup_sleep**    время ожидания между повторными запусками
**extra_local_interfaces**  какие интерфейсы необязательно слушать
**local_interfaces**        какие интерфейсы слушать, с необязательным номером порта
**pid_file_path**           замещает вкомпиленное значение
**queue_run_max**           максимальное число одновременных обработчиков очереди
==========================  ==============


.. _ch14_10:

Контроль ресурсов
-----------------

====================================  ============================================
**check_log_inodes**                  до приёма сообщения
**check_log_space**                   до приёма сообщения
**check_spool_inodes**                до приёма сообщения
**check_spool_space**                 до приёма сообщения
**deliver_queue_load_max**            не обрабатывать очередь при высокой загрузке
**queue_only_load**                   при высокой загрузке, входящие сообщения, только класть в очередь
**queue_only_load_latch**             не переоценивать нагрузку, для каждого сообщения
**queue_run_max**                     максимальное число одновременных обработчиков очереди
**remote_max_parallel**               параллельных SMTP доставок, на сообщение
**smtp_accept_max**                   одновременных входящих соединений
**smtp_accept_max_nonmail**           не-почтовых команд
**smtp_accept_max_nonmail_hosts**     хосты к которым применяются ограничения
**smtp_accept_max_per_connection**    сообщений за соединение
**smtp_accept_max_per_host**          соединений с одного хоста
**smtp_accept_queue**                 при большом числе соединений, класть сообщения в очередь, не доставлять
**smtp_accept_queue_per_connection**  класть в очередь, при большом числе сообщений за одно соединение
**smtp_accept_reserve**               принимать только от зарезервированных хостов, если много соединений
**smtp_check_spool_space**            проверять свободное место, исходя из SIZE в команде MAIL
**smtp_connect_backlog**              передаётся стеку TCP/IP
**smtp_load_reserve**                 SMTP с зарезервированных хостов, при высокой загрузке
**smtp_reserve_hosts**                список зарезервированных хостов
====================================  ============================================

.. _ch14_11:

Управление политиками
---------------------

==========================  =======================
**acl_not_smtp**            ACL для не-SMTP сообщений
**acl_not_smtp_mime**       ACL для не-SMTP частей MIME
**acl_not_smtp_start**      ACL для запуска не-SMTP сообщений
**acl_smtp_auth**           ACL для AUTH
**acl_smtp_connect**        ACL для соединений
**acl_smtp_data**           ACL для DATA
**acl_smtp_etrn**           ACL для ERTN
**acl_smtp_expn**           ACL для EXPN
**acl_smtp_helo**           ACL для HELO или EHLO
**acl_smtp_mail**           ACL для MAIL
**acl_smtp_mailauth**       ACL для команды AUTH в команде MAIL
**acl_smtp_mime**           ACL для чaстей MIME
**acl_smtp_predata**        ACL для начала данных
**acl_smtp_quit**           ACL для QUIT
**acl_smtp_rcpt**           ACL для RCPT
**acl_smtp_starttls**       ACL для STARTTLS
**acl_smtp_vrfy**           ACL для VRFY
**av_scanner**              определяет сканер вирусов
**check_rfc2047_length**    проверяет, длинну “закодированных слов” (по :rfc:`2047`)
**dns_csa_search_limit**    контролирует вложенность поисков CSA
**dns_csa_use_reverse**     включение/выключение реверсивных поисков IP CSA
**header_maxsize**          полный размер заголовка сообщения
**header_line_maxsize**     ограничения строки одного заголовка
**helo_accept_junk_hosts**  позволить синтаксические ошибки для этих хостов
**helo_allow_chars**        разрешить неправильные символы в HELO
**helo_lookup_domains**     искать имя хоста для этих имён в HELO
**helo_try_verify_hosts**   мягкая проверка HELO для этих хостов
**helo_verify_hosts**       жёсткая проверка HELO для этих хостов
**host_lookup**             искать имя хоста [#]_ для этих хостов
**host_lookup_order**       порядок поиска имён в DNS и локально
**host_reject_connection**  отклонить соединения с этих хостов
**hosts_treat_as_local**    полезно для некоторых кластерных конфигураций
**local_scan_timeout**      таймаут для *local_scan()*
**message_size_limit**      для всех сообщений
**percent_hack_domains**    распознавать %-хак, для этих доменов
**spamd_address**           указать интерфейс к SpamAssassin
**strict_acl_vars**         объект для отключения переменных ACL
==========================  =======================

.. _ch14_12:

Кэш обратных вызовов
--------------------

==================================  ========================
**callout_domain_negative_expire**  таймаут для элементов негативного кэша доменов
**callout_domain_positive_expire**  таймаут для элементов позитивного кэша доменов
**callout_negative_expire**         таймаут для элементов негативного кэша адресов
**callout_positive_expire**         таймаут для элементов позитивного кэша адресов
**callout_random_local_part**       строка используемая для “случайного” тестирования
==================================  ========================

.. _ch14_13:

TLS
---

============================  ==========
**gnutls_require_kx**         контроль обмена ключей GnuTLS
**gnutls_require_mac**        контроль алгоритмов GnuTLS MAC
**gnutls_require_protocols**  протоколы GnuTLS
**gnutls_compat_mode**        использовать GnuTLS в совместимом режиме
**tls_advertise_hosts**       информировать о TLS эти хосты
**tls_certificate**           расположение сертификата сервера
**tls_crl**                   список аннулированых сертификатов
**tls_dhparam**               параметры DH для сервера
**tls_on_connect_ports**      задание порта SSMTP (SMTPS)
**tls_privatekey**            расположение приватного ключа сервера
**tls_remember_esmtp**        не сбрасывать после начала TLS
**tls_require_ciphers**       определить разрешённые шифры
**tls_try_verify_hosts**      пробовать проверить сертификаты клиента
**tls_verify_certificates**   ожидаемые сертификаты клиентов
**tls_verify_hosts**          обязательная проверка сертификатов клиента
============================  ==========


.. _ch14_14:

Локальная обработка пользователей
---------------------------------

=======================  ========
**finduser_retries**     полезна в окружении NIS
**gecos_name**           используется при создании “Sender:”
**gecos_pattern**        смысл соответствует названию параметра
**max_username_length**  для систем, укорачивающих имена
**unknown_login**        используется, когда не найден логин
**unknown_username**     смысл соответствует названию параметра
**uucp_from_pattern**    для распознания строк “From ”
**uucp_from_sender**     смысл соответствует названию параметра
=======================  ========

.. _ch14_15:

Все входящие сообщения (SMTP и не-SMTP)
---------------------------------------

=========================  =============
**header_maxsize**         полный размер заголовка сообщения
**header_line_maxsize**    ограничение отдельной строки заголовка
**message_size_limit**     применяется ко всем сообщениям
**percent_hack_domains**   распознавать %-хак для этих доменов
**received_header_text**   раскрывать для создания “Received:”
**received_headers_max**   для детектирования зацикливания почты
**recipients_max**         ограничение на сообщение
**recipients_max_reject**  отклонять сообщения у которых слишком много
=========================  =============

.. _ch14_16:

Входящие не-SMTP сообщения
--------------------------

===============  =====
receive_timeout  для не-SMTP сообщений
===============  =====

.. _ch14_17:

Входящие SMTP сообщения
-----------------------

Также смотрите выше, раздел “Управление политиками”.

====================================  =============
**host_lookup**                       поиск имени хоста для этих хостов
**host_lookup_order**                 порядок поиска имени в DNS и локально
**recipient_unqualified_hosts**       может слать с неквалифицированным получателем
**rfc1413_hosts**                     создаёт вызов ident к этим хостам
**rfc1413_query_timeout**             ноль - отключает вызовы ident
**sender_unqualified_hosts**          может слать с неквалифицированным отправителем
**smtp_accept_keepalive**             немного магии TCP/IP
**smtp_accept_max**                   одновременных входящих соединений
**smtp_accept_max_nonmail**           не-почтовых команд
**smtp_accept_max_nonmail_hosts**     хосты к которым применяются ограничения
**smtp_accept_max_per_connection**    сообщений через соединение
**smtp_accept_max_per_host**          соединений с одного хоста
**smtp_accept_queue**                 оставлять в очереди, если много соединений
**smtp_accept_queue_per_connection**  оставлять в очереди, если много сообщений в соединении
**smtp_accept_reserve**               только зарезервированные хосты, если много соединений
**smtp_active_hostname**              имя хоста для использования в сообщении
**smtp_banner**                       текст для приветственного баннера
**smtp_check_spool_space**            из SIZE в команде MAIL
**smtp_connect_backlog**              передаётся стеку TCP/IP
**smtp_enforce_sync**                 синхронизация SMTP команд/ответов
**smtp_etrn_command**                 что запускать для ETRN
**smtp_etrn_serialize**               лишь один одновременно
**smtp_load_reserve**                 только зарезервированные хосты, если такая загрузка
**smtp_max_unknown_commands**         до разрыва соединения
**smtp_ratelimit_hosts**              применять ограничения частоты для этих хостов
**smtp_ratelimit_mail**               ограничения частоты для команд MAIL
**smtp_ratelimit_rcpt**               ограничения частоты для команд RCPT
**smtp_receive_timeout**              для команды, или строки данных
**smtp_reserve_hosts**                список зарезервированных хостов
**smtp_return_error_details**         выдавать детали о отклонении
====================================  =============

.. _ch14_18:

Расширения SMTP
---------------

==============================  ============
**accept_8bitmime**             информировать о 8BITMIME
**auth_advertise_hosts**        информировать эти хосты о AUTH
**ignore_fromline_hosts**       разрешить “From ”, для этих хостов
**ignore_fromline_local**       разрешить “From ”, для локальных SMTP
**pipelining_advertise_hosts**  информировать эти хосты о конвейерной обработке
**tls_advertise_hosts**         информировать эти хосты о TLS
==============================  ============


.. _ch14_19:

Обработка сообщений
-------------------

======================================  =======
**allow_domain_literals**               распознавать синтаксис доменных литералов
**allow_mx_to_ip**                      разрешить MX указывать на IP-адрес
**allow_utf8_domains**                  в адресе
**check_rfc2047_length**                проверяет, длинну “закодированных слов” (по :rfc:`2047`)
**delivery_date_remove**                из входящих сообщений
**envelope_to_remote**                  из входящих сообщений
**extract_addresses_remove_arguments**  затрагивает обработку **-t**
**headers_charset**                     значение по умолчанию для переводов
**qualify_domain**                      значение по умолчанию для  отправителей
**qualify_recipient**                   значение по умолчанию для получателей
**return_path_remove**                  из входящих сообщений
**strip_excess_angle_brackets**         в адресах
**strip_trailing_dot**                  в конце адресов
**untrusted_set_sender**                недоверенные могут устанавливать отправителя конверта
======================================  =======


.. _ch14_20:

Системный фильтр
----------------

=====================================  =============
**system_filter**                      расположение системного фильтра
**system_filter_directory_transport**  транспорт для доставки в директорию
**system_filter_file_transport**       транспорт для доставки в файл
**system_filter_group**                группа, от которой работает фильтр
**system_filter_pipe_transport**       транспорт для доставки в трубу
**system_filter_reply_transport**      транспорт для доставки автоответа
**system_filter_user**                 пользователь, от которого работает системный фильтр
=====================================  =============


.. _ch14_21:

Маршрутизация и доставка
------------------------

============================  ==============
**disable_ipv6**              не обрабатывать IPv6
**dns_again_means_nonexist**  для битых доменов
**dns_check_names_pattern**   предварительная синтаксическая проверка DNS
**dns_ipv4_lookup**           для этих доменов, поиск только v4
**dns_retrans**               параметр для резольвера
**dns_retry**                 параметр для резольвера
**hold_domains**              задержать доставку для этих доменов
**local_interfaces**          для проверок маршрутизации 
**queue_domains**             нет немедленной доставки для этих доменов
**queue_only**                нет немедленной доставки для всех
**queue_only_file**           нет немедленной доставки, если файл существует
**queue_only_load**           нет немедленной доставки, если высокая загрузка
**queue_only_load_latch**     не пересчитывать нагрузку для каждого сообщения
**queue_only_override**       позволить отменять с командной строки
**queue_run_in_order**        порядок доставки
**queue_run_max**             одновременных обработчиков очереди
**queue_smtp_domains**        нет немедленной SMTP доставки для этих доменов
**remote_max_parallel**       параллельных SMTP доставок на сообщение
**remote_sort_domains**       порядок удалённых доставок
**retry_data_expire**         таймаут для данных повторов
**retry_interval_max**        безопасная сеть для правил повторов
============================  ==============

.. _ch14_22:

Рикошеты и предупрждающие сообщения
-----------------------------------

================================  ===============
**bounce_message_file**           содержимое рикошета
**bounce_message_text**           содержимое рикошета
**bounce_return_body**            включать тело, если сообщение возвращается
**bounce_return_message**         включать оригинальное сообщение в рикошет
**bounce_return_size_limit**      ограничение на возвращаемые сообщения
**bounce_sender_authentication**  посылать аутентифицированному отправителю с рикошетом
**dsn_from**                      установка содержимого заголовка “From:” в рикошете
**errors_copy**                   копировать рикошеты
**errors_reply_to**               “Reply-to:” в рикошетах
**delay_warning**                 планирование времени
**delay_warning_condition**       условие для предупреждающих сообщений
**ignore_bounce_errors_after**    уничтожать недоставленные рикошеты
**smtp_return_error_details**     выдывать детали при отклонении
**warn_message_file**             содержимое предупреждающего сообщения
================================  ===============


.. _ch14_23:

Алфавитный список главных параметров
------------------------------------
Те параметры, которые подвергаются раскрытию строки, до использования, помечены символом **†**.

.. index::
  pair: main; accept_8bitmime 

===================  =========  =============  ==============
**accept_8bitmime**  Use: main  Type: boolean  Default: false
===================  =========  =============  ==============

Этот параметр заставляет Exim посылать 8BITMIME в его ответе на команду SMTP EHLO, и принимать параметр BODY= в командах MAIL. Однако, хотя Exim чисто 8-битовый, он не конвертер протоколов, и не принимает каких-либо специальных действий для сообщений полученных в соответствии с этим маршрутом. Следовательно, по умолчанию этот параметр отключен.

.. index::
  pair: main; acl_not_smtp

================  =========  =============  ==============
**acl_not_smtp**  Use: main  Type: string†  Default: unset
================  =========  =============  ==============

Этот параметр определяет ACL, выполняемый при прочтении не-SMTP сообщения и это - точка начала его приёма. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_not_smtp_mime

=====================  =========  =============  ==============
**acl_not_smtp_mime**  Use: main  Type: string†  Default: unset
=====================  =========  =============  ==============

Этот параметр определяет ACL, выполняемый для индивидуальных частей MIME не-SMTP-сообщений. Она работает таким же образом, как и **acl_smtp_mime** для SMTP-сообщений.

.. index::
  pair: main; acl_not_smtp_start 

======================  =========  =============  ==============
**acl_not_smtp_start**  Use: main  Type: string†  Default: unset
======================  =========  =============  ==============

Этот параметр задаёт ACL который запускается до того как Exim начнёт читать не-SMTP сообщение. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_auth

=================  =========  =============  ==============
**acl_smtp_auth**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды SMTP AUTH. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_connect 

====================  =========  =============  ==============
**acl_smtp_connect**  Use: main  Type: string†  Default: unset
====================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды SMTP. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_data

=================  =========  =============  ==============
**acl_smtp_data**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую после обработки команды SMTP DATA, и получения самого сообщения, но до посылки заключительного подтверждения. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_etrn

=================  =========  =============  ==============
**acl_smtp_etrn**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды SMTP ETRN. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_expn

=================  =========  =============  ==============
**acl_smtp_expn**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды SMTP EXPN. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_helo

=================  =========  =============  ==============
**acl_smtp_helo**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды SMTP HELO или EHLO. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_mail

=================  =========  =============  ==============
**acl_smtp_mail**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды SMTP MAIL. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_mailauth

=====================  =========  =============  ==============
**acl_smtp_mailauth**  Use: main  Type: string†  Default: unset
=====================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды AUTH с командой MAIL. Для дополнительных деталей ACL смотрите главу :ref:`40 <ch40_00>` и главу :ref:`33 <ch33_00>` для деталей аутентификации.

.. index::
  pair: main; acl_smtp_mime

=================  =========  =============  ==============
**acl_smtp_mime**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Этот параметр доступен когда Exim собран с расширением проверки контента. Она задаёт ACL запускаемую для каждой MIME части в сообщении. Смотрите раздел :ref:`41.4 <ch41_04>` для получения дополнительных деталей.

.. index::
  pair: main; acl_smtp_predata 

====================  =========  =============  ==============
**acl_smtp_predata**  Use: main  Type: string†  Default: unset
====================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды SMTP DATA, до получения самого сообщения. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_quit

=================  =========  =============  ==============
**acl_smtp_quit**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды SMTP QUIT. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_rcpt 

=================  =========  =============  ==============
**acl_smtp_rcpt**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды SMTP RCPT. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_starttls

=====================  =========  =============  ==============
**acl_smtp_starttls**  Use: main  Type: string†  Default: unset
=====================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды SMTP STARTTLS. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; acl_smtp_vrfy

=================  =========  =============  ==============
**acl_smtp_vrfy**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Этот параметр определяет ACL, выполняемую при получении команды SMTP VRFY. Для дополнительных деталей смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; admin_groups

================  =========  ==================  ==============
**admin_groups**  Use: main  Type: string list†  Default: unset
================  =========  ==================  ==============

Этот параметр раскрывается один раз, в процессе старта Exim. Если текущая группа или любая из дополнительных групп вызвавшего Exim [#]_ находятся в этом списке, разделённом двоеточиями, вызывающий имеет административные привилегии. Если все ваши системные программисты находятся в определённой группе, например, вы можете дать им всем привилегии администратора Exim`a, поместив их группу в **admin_groups**. Однако, это не разрешает читать им читать файлы спула Exim`a (группа которых - группа Exim'a). Для разрешения этого, вы должны добавить отдельных людей в группу Exim`a.

.. index::
  pair: main; allow_domain_literals

=========================  =========  =============  ==============
**allow_domain_literals**  Use: main  Type: boolean  Default: false
=========================  =========  =============  ==============

Если этот параметр установлен, формат буквальных адресов [#]_ , в соответствии с rfc:`2822`, разрешён в e-mail адресах. По умолчанию, этот параметр не задан, поскольку доменные литералы не требуются в наши дни, и немногие люди знают о них. Однако это эксплуатируется спамерами.

К сожалению, кажется, некоторые майнтайнеры [#]_  чёрных списков DNS, используют этот формат для сообщения  постмастеру, о попадении хоста в чёрные списки. Если вы хотите принимать почту, адресованную вашему хосту по IP-адресу, вам необходимо установить параметр **allow_domain_literals** в истину, и, также, добавить “@[]” в список локальных доменов (заданный в именованом списке доменов **local_domains**, в конфигурации по умолчанию). Эта “волшебная строка” соответствует форме доменных литералов для всех IP-адресов локального хоста.

.. index::
  pair: main; allow_mx_to_ip

==================  =========  =============  ==============
**allow_mx_to_ip**  Use: main  Type: boolean  Default: false
==================  =========  =============  ==============

Кажется, что что всё больше и больше администраторов DNS-зон нарушают правила и помещают доменные имена, которые похожи на IP-адреса справа от MX-записей. Exim следует правилам, и отклоняет их, выдавая сообщение о ошибке, объясняющее неверную конфигурацию. Однако, некоторые другие MTA поддерживают эту практику, и для избежания жалоб “Почему Exim не может этого?”, существует **allow_mx_to_ip**, для допущения этой отвратительной деятельности. Это не рекомендуется, кроме случаев, когда у вас нет иного выбора.

.. index::
  pair: main; allow_utf8_domains

======================  =========  =============  ==============
**allow_utf8_domains**  Use: main  Type: boolean  Default: false
======================  =========  =============  ==============

Большое обсуждение продолжается о интернационализированых доменных именах. Один лагерь - настаивает на использовании только символов UTF-8, и кажется, что по крайней мере два других MTA мешают этому. Этот параметр позволяет пользователям Exim`a экспериментировать, если они этого желают.

Если она установлена в истину, функция парсинга доменов Exim`a разрешает появляение допустимых мультисимволов UTF-8 в компонентах доменного имени, в дополнение к буквам, цифрам и дефисам. Однако, лишь установки этого параметра - недостаточно; если вы хотите искать такие имена в DNS, вы также должны корректировать значение **dns_check_names_pattern**, для соответствия расширенной форме.Подходящая настройка::

    dns_check_names_pattern = (?i)^(?>(?(1)\.|())[a-z0-9\xc0-\xff]\
      (?>[-a-z0-9\x80-\xff]*[a-z0-9\x80-\xbf])?)+$

Альтернативно, вы можете только отключить эту возможность, установив

::
    
     dns_check_names_pattern =

Таким образом, установка параметра в пустую строку, не производит проверку.

.. index::
  pair: main; auth_advertise_hosts

========================  =========  ================  ===========
**auth_advertise_hosts**  Use: main  Type: host list†  Default: \*
========================  =========  ================  ===========

Если сконфигурированы какие-либо серверный аутентификационные механизмы, Exim информирует о них в ответе на команду HELO, лишь если хост запроса соответствует этому списку. Иначе, Exim не информирует AUTH. Exim не принимает команды AUTH от клиентов, которым не сообщалось о доступности AUTH. Информированием о индивидуальных аутентификационных механизмах можно управлять использованием общей аутентификационного параметра  **server_advertise_condition** в индивидуальных аутентификаторах. Для дополнительных деталей смотрите главу :ref:`33 <ch33_00>`.

Определённые почтовые клиенты (например Netscape) требуют, чтобы пользователь предоставил имя пользователя и пароль для идентификации, если информируется AUTH, даже при том, что может не являться необходимым (хост может принимать сообщения от хостов из своей LAN без аутентификации, например). Параметр **auth_advertise_hosts** может быть использован чтобы сделать этих клиентов более дружелюбными, путём исключения их из хостов к которым выводиться информация о AUTH.

Если вы хотите информировать о доступности AUTH лишь когда подключение зашифровано с использованием TLS, вы можете использовать тот факт, что значение этого параметра раскрывается, установкой типа такой::

    auth_advertise_hosts = ${if eq{$tls_cipher}{}{}{*}}

Если **$tls_cipher** пуста, сессия не шифрованная, и результат раскрытия пуст, таким образом, не соответствуя никаким хостам. Иначе, разультат раскрытия “*”, соответствующая всем хостам.

.. index::
  pair: main; auto_thaw

=============  =========  ==========  ===========
**auto_thaw**  Use: main  Type: time  Default: 0s
=============  =========  ==========  ===========

Если в этом параметре будет время большее нуля, то обработчик очереди будет пробовать произвести новую попытку доставки для любых замороженных сообщений, кроме рикошетов, если прошло много времени с того момента как они заморожены. Это может привести к повторной заморозке сообщения, если ничего не изменилось с момента последней попытки доставки. Это - способ сказать “пытаюсь, несмотря на большие проблемы”.
   
.. note:: Это старый параметр, которая предшествовала **timeout_frozen_after** и **ignore_bounce_errors_after**. Он сохранен для совместимости, но он не многим полезен, и лучше избегать его использования.


.. index::
  pair: main; av_scanner

==============  =========  ============  ==================
**av_scanner**  Use: main  Type: string  Default: see below
==============  =========  ============  ==================

Этот параметр доступен, если Exim собран с расширением проверки контента. Он задаёт, какой антивирусный сканер будет использоваться. Значение по умолчанию::

    sophie:/var/run/sophie

Если значение **av_scanner** начинается с символа “$”, то оно раскрывается перед использованием. Для дополнительных деталей смотрите раздел :ref:`41.1 <ch41_01>`.

.. index::
  pair: main; bi_command

==============  =========  ============  ==============
**bi_command**  Use: main  Type: string  Default: unset
==============  =========  ============  ==============

Этот параметр предоставляет имя команды, которая будет выполнена когда Exim вызывается с параметром командной строки **-bi** (смотрите главу :ref:`5 <ch05_01>`). Значение строки - лишь имя команды, а не полная командная строка. Если требуются аргументы, они должны быть из параметра командной строки **-oA**.

.. index::
  pair: main; bounce_message_file

=======================  =========  ============  ==============
**bounce_message_file**  Use: main  Type: string  Default: unset
=======================  =========  ============  ==============

Этот параметр определяет файл шаблона, содержащий параграфы текста, используемые для конструирования сообщения рикошета. Детали о содержимом файла даны в главе :ref:`46 <ch46_00>`. Смотрите также **warn_message_file**.

.. index::
  pair: main; bounce_message_text

=======================  =========  ============  ==============
**bounce_message_text**  Use: main  Type: string  Default: unset
=======================  =========  ============  ==============

Когда задан этот параметр, его содержимое включается в рикошет по умолчанию, сразу после “This message was created automatically by mail delivery software.” Он не используется, если установлен параметр **bounce_message_file**.

.. index::
  pair: main; bounce_return_body

======================  =========  =============  =============
**bounce_return_body**  Use: main  Type: boolean  Default: true
======================  =========  =============  =============

Этот параметр контролирует, включено ли тело входящего сообщения в рикошет, когда **bounce_return_message** - истина. Настройка по умолчанию включает всё сообщение, и заголовок и тело, в возвращаемое сообщение (подчиняясь значению **bounce_return_size_limit**). Если этот параметр ложь, включаются лишь заголовки сообщения. В случае не-SMTP-сообщения, содержащего ошибку, обнаруженную в точке приёма, возвращаются лишь те строки заголовка, которые предшествуют пункту, где была обнаружена ошибка.

.. index::
  pair: main; bounce_return_message

=========================  =========  =============  =============
**bounce_return_message**  Use: main  Type: boolean  Default: true
=========================  =========  =============  =============

Если этот параметр установлен в ложь, ничего из оригинального сообщения не включается в сообщение создаваемое Exim`ом. Смотрите, также, **bounce_return_size_limit** и **bounce_return_body**.

.. index::
  pair: main; bounce_return_size_limit

============================  =========  =============  =============
**bounce_return_size_limit**  Use: main  Type: integer  Default: 100K
============================  =========  =============  =============

Этот параметр устанавливает лимит, в байтах, на размер сообщения возвращаемого отправителю как часть сообщения рикошета, когда параметр **bounce_return_message** истинна. Предел должен быть меньше, чем значение глобального параметра **message_size_limit** и любых настроек **message_size_limit** в транспортах, для разрешения создаваемого Exim`ом текста о срыве доставки сообщения. Если эта параметр установлен в ноль, то нет ограничений на размер.

Когда тело любого сообщения, которое должно быть включено в рикошет, больше этого предела, оно усекается, и вверху добавляется комментарий о этом. Фактическое сокращение может быть больше данного значения, вследствие использования буферизации, для передачи сообщения кусками (обычно, размером 8k). Идея состоит в сохранении пропускной способности на недоставленных сообщениях, размером 15 мегабайт [#]_ .

.. index::
  pair: main; bounce_sender_authentication

================================  =========  ============  ==============
**bounce_sender_authentication**  Use: main  Type: string  Default: unset
================================  =========  ============  ==============

Этот параметр предоставляет адрес аутентифицированного отправителя, который шлёт любые сообщения рикошета, созданные Exim`ом, посылаемые через аутентифицированное SMTP-соединение. Типичная установка такая::

    bounce_sender_authentication = mailer-daemon@my.domain.example

которая вынудила бы посылать рикошеты с использованием такой SMTP-команды::

    MAIL FROM:<> AUTH=mailer-daemon@my.domain.example

Значение **bounce_sender_authentication** всегда должно быть полным e-mail адресом.

.. index::
  pair: main; callout_domain_negative_expire

==================================  =========  ==========  ===========
**callout_domain_negative_expire**  Use: main  Type: time  Default: 3h
==================================  =========  ==========  ===========

Этот параметр определяет время жизни негативных кэшированных данных доменов, для обратных вызовов. Смотрите раздел :ref:`40.41 <ch40_41>` для дополнительных деталей о проверке обратных вызовов, и раздел :ref:`40.43 <ch40_43>`, для деталей о кэшировании.

.. index::
  pair: main; callout_domain_positive_expire

==================================  =========  ==========  ===========
**callout_domain_positive_expire**  Use: main  Type: time  Default: 7d
==================================  =========  ==========  ===========

Этот параметр определяет время жизни позитивных кэшированных данных доменов, для обратных вызовов. Смотрите раздел :ref:`40.41 <ch40_41>` для дополнительных деталей о проверке обратных вызовов, и раздел :ref:`40.43 <ch40_43>`, для деталей о кэшировании.

.. index::
  pair: main; callout_negative_expire

===========================  =========  ==========  ===========
**callout_negative_expire**  Use: main  Type: time  Default: 2h
===========================  =========  ==========  ===========

Этот параметр определяет время жизни негативных кэшированных данных адресов, для обратных вызовов. Смотрите раздел :ref:`40.41 <ch40_41>` для дополнительных деталей о проверке обратных вызовов, и раздел :ref:`40.43 <ch40_43>`, для деталей о кэшировании.

.. index::
  pair: main; callout_positive_expire

===========================  =========  ==========  ============
**callout_positive_expire**  Use: main  Type: time  Default: 24h
===========================  =========  ==========  ============

Этот параметр определяет время жизни позитивных кэшированных данных адресов, для обратных вызовов. Смотрите раздел :ref:`40.41 <ch40_41>` для дополнительных деталей о проверке обратных вызовов, и раздел :ref:`40.43 <ch40_43>`, для деталей о кэшировании.

.. index::
  pair: main; callout_random_local_part

=============================  =========  =============  ==================
**callout_random_local_part**  Use: main  Type: string†  Default: see below
=============================  =========  =============  ==================

Этот параметр определяет “случайную” локальную часть, которая будет использоваться как часть проверки обратным вызовом. Значение по умолчанию::

    $primary_host_name-$tod_epoch-testing

Смотрите раздел :ref:`40.42 <ch40_42>` для получения дополнительных сведений о использовании этого значения.

.. index::
  pair: main; check_log_inodes

====================  =========  =============  ==========
**check_log_inodes**  Use: main  Type: integer  Default: 0
====================  =========  =============  ==========

Смотрите ниже, параметр **check_spool_space**.

.. index::
  pair: main; check_log_space

===================  =========  =============  ==========
**check_log_space**  Use: main  Type: integer  Default: 0
===================  =========  =============  ==========

Смотрите ниже, параметр **check_spool_space**.

.. index::
  pair: main; check_rfc2047_length

========================  =========  =============  =============
**check_rfc2047_length**  Use: main  Type: boolean  Default: true
========================  =========  =============  =============

:rfc:`2047` определяет способ кодирования не-ASCII-символов в заголовках, используя систему “закодированных слов”. RFC определяет максимальную длинну для закодированного слова; строки, которые будут закодированы, превышающие эту длинну, должны использовать несколько закодированных слов. По умолчанию, Exim не распознаёт закодированные слова, превышающие максимальную длинну. Однако, некоторые программы, в нарушение RFC, создают слишком длинные закодированные слова. Если **check_rfc2047_length** установлена в ложь, Exim распознаёт закодированные слова любой длинны.

.. index::
  pair: main; check_spool_inodes

======================  =========  =============  ==========
**check_spool_inodes**  Use: main  Type: integer  Default: 0
======================  =========  =============  ==========

Смотрите ниже, параметр **check_spool_space**.

.. index::
  pair: main; check_spool_space

=====================  =========  =============  ==========
**check_spool_space**  Use: main  Type: integer  Default: 0
=====================  =========  =============  ==========

Четыре параметр **check_....** разрешают проверку дисковых ресурсов до приёма сообщения.

Когда любой из этих параметров установлен, они применяются ко всем входящим сообщениям. Если вы хотите применить различные проверки к различным видам сообщений, вы можете сделать это путём проверки переменных $log_inodes, $log_space, $spool_inodes и $spool_space в ACL с соответствующими дополнительными условиями.

**check_spool_space** и **check_spool_inodes** проверяют раздел спула, что любое значение больше нуля, например::

    check_spool_space = 10M
    check_spool_inodes = 100

Раздел спула - тот, который содержит каталог, заданный как SPOOL_DIRECTORY в *Local/Makefile*. Он используется для того, чтобы хранить сообщения в процессе доставки.

**check_log_space** и **check_log_inodes** проверяют раздел, в который пишутся логи, что они больше нуля. Они должны быть установлены, лишь если **log_file_path** и **spool_directory** ссылаются на разные разделы.

Если свободного места или инод меньше, чем требуется, Exim отказывается принимать входящую почту. В случае SMTP это делается выдачей 452-й временной ошибки в ответе на команду MAIL. Если используется ESMTP, и был параметр SIZE в команде MAIL, его значение добавляется к значению **check_spool_space**, и выполняется проверка, даже если **check_spool_space** - ноль, если **no_smtp_check_spool_space** не установлена.

Значения для **check_spool_space** и **check_log_space** содержатся в числе килобайт. Если число некратно 1024 - оно округляется.

Для не-SMTP ввода, и для ввода пакетного SMTP, тестирование производится при запуске; сообщение о ошибке пишется на стандартный вывод ошибок, и Exim выходит с кодом отличным от нуля, поскольку, очевидно, не может послать сообщение о любом виде ошибок.

.. index::
  pair: main; daemon_smtp_ports

=====================  =========  ============  =============
**daemon_smtp_ports**  Use: main  Type: string  Default: smtp
=====================  =========  ============  =============

Этот параметр задаёт один, или несколько портов по умолчанию SMTP, которые слушаются даемоном Exim'a. Смотрите главу :ref:`13 <ch13_00>` для деталей о её использовании. Для обратной совместимости, **daemon_smtp_port** (в единственном числе) - синоним.

.. index::
  pair: main; daemon_startup_retries

==========================  =========  =============  ==========
**daemon_startup_retries**  Use: main  Type: integer  Default: 9
==========================  =========  =============  ==========

Этот параметр, наряду с **daemon_startup_sleep**, контролирует повторения, сделанные даемоном при старте, когда он не может немедленно связаться с слушаемым сокетом (обычно, поскольку он уже занят): **daemon_startup_retries** задаёт число повторов после первой ошибки, и **daemon_startup_sleep** задаёт отрезок времени ожидания между повторами.

.. index::
  pair: main; daemon_startup_sleep

========================  =========  ==========  ============
**daemon_startup_sleep**  Use: main  Type: time  Default: 30s
========================  =========  ==========  ============

Смотрите **daemon_startup_retries**.

.. index::
  pair: main; delay_warning

=================  =========  ===============  ============
**delay_warning**  Use: main  Type: time list  Default: 24h
=================  =========  ===============  ============

Когда сообщение задерживается, Exim посылает предупреждающее письмо отправителю, с интервалами определёнными этим параметром. Данные - разделённый двоеточиями список времён, после которых шлются предупреждающие сообщения. Если значение этого параметра - пустая строка, или ноль, то предупреждения не шлются. Может быть задано до 10 времён. Если сообщение находилось в очереди больше, чем последнее время, для вычисления последующего времени предупреждения используется последний интервал. Например, при::

    delay_warning = 4h:8h:24h

первое сообщение посылается по прошествии 4-х часов, следующее через 8 и третье после 24-х. После этого, сообщения посылаются каждые 16 часов, поскольку этот интервал между двумя прошлыми временами в списке. Если вы зададите лишь одно время, оно определяет интервал повторения. Например, при::

    delay_warning = 6h

сообщения повторяются каждые 6 часов. Для остановки предупреждений после этого времени, установите в конце списка очень большое время. Например::

    delay_warning = 2h:12h:99d

.. index::
  pair: main; delay_warning_condition

===========================  =========  =============  ==================
**delay_warning_condition**  Use: main  Type: string†  Default: see below
===========================  =========  =============  ==================

Строка раскрывается в то время, когда могло бы быть послано сообщение. Если все отсроченные адреса имеют одинаковый домен, он устанавливается в $domain в процессе раскрытия. Иначе, переменная $domain пуста. Если результат раскрытия принудительный отказ, пустая строка, или строка соответствующая “0”, “no” или “false” (сравнение производится регистронезависмо) тогда предупреждающее сообщение не посылается. Значение по умолчанию::

   delay_warning_condition = ${if or {\
    { !eq{$h_list-id:$h_list-post:$h_list-subscribe:}{} }\
    { match{$h_precedence:}{(?i)bulk|list|junk} }\
    { match{$h_auto-submitted:}{(?i)auto-generated|auto-replied} }\
    } {no}{yes}}

Оно подавляет отсылку предупреждений для сообщений которые содержат заголовки “List-ID:”, “List-Post:” или “List-Subscribe:” или содержат “bulk”, “list” или “junk” в заголовке “Precedence:”, или содержат “auto-generated” or “auto-replied” в заголовке “Auto-Submitted:”.

.. index::
  pair: main; deliver_drop_privilege

==========================  =========  =============  ==============
**deliver_drop_privilege**  Use: main  Type: boolean  Default: false
==========================  =========  =============  ==============

Если этот параметр истинна, Exim отказывается от root`овых привилегий при запуске процесса доставки, и повсюду работает как пользователь Exim`a. Это строго ограничивает возможные виды локальной доставки, но жизнеспособно лишь в определённых типах конфигурации. Имеется обсуждение о использовании root`овых привилегий в главе :ref:`52 <ch52_00>`

.. index::
  pair: main; deliver_queue_load_max

==========================  =========  =================  ==============
**deliver_queue_load_max**  Use: main  Type: fixed-point  Default: unset
==========================  =========  =================  ==============

Если этот параметр установлен, обработка очереди останавливается, если средняя загрузка системы больше значения этого параметра. Параметр не имеет эффекта на древних ОС, в которых Exim не может определить среднюю загрузку. Смотрит, также, параметры **queue_only_load** и **smtp_load_reserve**.

.. index::
  pair: main; delivery_date_remove

========================  =========  =============  =============
**delivery_date_remove**  Use: main  Type: boolean  Default: true
========================  =========  =============  =============

Транспорты Exim`a имеют параметр, для добавления заголовка “Delivery-date:” в сообщение, когда оно доставляется, точно также обрабатывается “Return-path:”. “Delivery-date:” делает запись фактического времени доставки. Такие заголовки не должны присутствовать во входящих сообщениях, и этот параметр вызывает их удаление во время получения сообщения, для избежания любых возможных проблем, которые могли бы произойти при пересылке сообщения другому адресату.

.. index::
  pair: main; disable_fsync

=================  =========  =============  ==============
**disable_fsync**  Use: main  Type: boolean  Default: false
=================  =========  =============  ==============

Этот параметр доступнен лишь если Exim собран с параметром компиляции ENABLE_DISABLE_FSYNC. Когда он не задана, ссылка на **disable_fsync** в рабочей конфигурации вызывает ошибку "unknown option". Вы не должны собирать Exim с ENABLE_DISABLE_FSYNC или установить **disable_fsync**, за исключением случая что вы действительно понимаете что делаете. Нет заранее скомпилированных дистрибутивов Exim, в которых этот параметр установлен.

Когда **disable_fsync** установлена в истину, Exim не вызывает *fsync()* для для принудительной записи данных на диск до продолжения. Неожиданные происшествия, типа ошибки или сбоя питания могут привести к потере или порче данных. Тут драконы. **Осторожно**.

.. index::
  pair: main; disable_ipv6

================  =========  =============  ==============
**disable_ipv6**  Use: main  Type: boolean  Default: false
================  =========  =============  ==============

Если этот параметр истинна, даже если исполняемый файл Exim`a имеет поддержку IPv6, не будет никакой активности IPv6. Записи AAAA никогда не ищутся, и любые адреса IPv6, которые перечислены в **local_interfaces**, данные для маршрутизатора **manualroute** и т.п. игнорируются. Если IP-литералы включены, маршрутизатор **ipliteral** отказывается обрабатывать символьные адреса IPv6.

.. index::
  pair: main; dns_again_means_nonexist

============================  =========  ==================  ==============
**dns_again_means_nonexist**  Use: main  Type: domain list†  Default: unset
============================  =========  ==================  ==============

Поиски в DNS дают ответ “try again” для ошибок DNS “non-authoritative host not found” и SERVERFAIL. Это может заставить Exim продолжать попытки доставки, или повторно выдать временную ошибку для входящей почты. Иногда эффект вызывается плохо настроенным сервером имён, и может сохраняться в течение долгого времени. Если домен, вызывающий эту проблему, соответствует чему-либо в **dns_again_means_nonexist**, он обрабатывается, как будто его не существует. Этот параметр должен использоваться с осторожностью. Вы можете применять его к обратным поискам, настройкой типа такой::

    dns_again_means_nonexist = *.in-addr.arpa

Этот параметр применяется ко всем DNS-поискам, производимым Exim`ом. Он также применяется когда функция *gethostbyname()* или *getipnodebyname()* выдаёт временную ошибку, т.к. они, вероятнее всего, будут вызваны проблемами поиска в DNS. У маршрутизатора **dnslookup** есть собственные параметры, для контроля происходящего, если происходит временная ошибка при поиске записей MX или SRV. Эти более специальные параметры применяются после глобальных параметров.

.. index::
  pair: main; dns_check_names_pattern

===========================  =========  ============  ==================
**dns_check_names_pattern**  Use: main  Type: string  Default: see below
===========================  =========  ============  ==================

Когда этот параметр установлен в непустую строку, она заставляет Exim проверять доменные имена на символы, не разрешённые в именах хостов, до передачи их DNS-резольверу, поскольку некоторые резольверы выдают временные ошибки для имён содержащих необычные символы. Если доменное имя содержит какие-либо нежелательные символы, принудительно возвращается результат “not found”, и резольвер не вызывается. Проверка делается путём сравнения доменного имени с регулярным выражением, являющимся значением этого параметра. Шаблон по умолчанию такой::

    dns_check_names_pattern = \
      (?i)^(?>(?(1)\.|())[^\W_](?>[a-z0-9/-]*[^\W_])?)+$

разрешающий лишь буквы, цифры, слэши и дефисы в компонентах, но они должны начинаться и заканчиваться буквой или цифрой. Фактически, слэши не разрешены, в именах хостов, но они находятся в определённых NS-записях (к которым можно обратится в Exim`e, используя поиск “dnsdb”). Если вы установите **allow_utf8_domains**, то вы должны изменить этот шаблон, или установить параметр в пустую строку.

.. index::
  pair: main; dns_csa_search_limit

========================  =========  =============  ==========
**dns_csa_search_limit**  Use: main  Type: integer  Default: 5
========================  =========  =============  ==========

Этот параметр контролирует глубину поиска для записей CSA SRV в DNS, как подробно описано в разделе :ref:`40.46 <ch40_46>`.

.. index::
  pair: main; dns_csa_use_reverse

=======================  =========  =============  =============
**dns_csa_use_reverse**  Use: main  Type: boolean  Default: true
=======================  =========  =============  =============

Этот параметр контролирует действительно ли, адрес данный как домен CSA, обратим и ищется в обратной зоне DNS, как подробно описано в разделе :ref:`40.46 <ch40_46>`.

.. index::
  pair: main; dns_ipv4_lookup

===================  =========  ==================  ==============
**dns_ipv4_lookup**  Use: main  Type: domain list†  Default: unset
===================  =========  ==================  ==============

Когда Exim собран с поддержкой IPv6 и параметр **disable_ipv6** не задан, он ищет для IPv6 адресные записи AAAA также, как и для IPv4 адресные записи A, пробуя найти IP-адреса для хостов, если домен не соответствует этому списку.

Это придумано для того, чтобы помочь с серверами имён дающими большую задержку, или иначе не работающими с типами записей AAAA. Когда мировые сервера имён будут должным образом модернизированы, в этом параметре не будет необходимости.

.. index::
  pair: main; dns_retrans

===============  =========  ==========  ===========
**dns_retrans**  Use: main  Type: time  Default: 0s
===============  =========  ==========  ===========

Параметры **dns_retrans** и **dns_retry** могут использоваться для повторной передачи и параметров повтора для поисков DNS. Значение нуля (по умолчанию) оставляет системные настройки по умолчанию без изменения. Первое значение - время между повторениями, и второе - число повторов. Не полностью ясно, как эти настройки затрагивают полное время, затрачиваемое на поиск в DNS. Я не нашёл никакой информации о таймаутах в поисках DNS; эти значения доступны во внешних структурах интерфейса резольвера, но нигде нет описания, как они используются, или что вы могли бы в них установить.

.. index::
  pair: main; dns_retry

=============  =========  =============  ==========
**dns_retry**  Use: main  Type: integer  Default: 0
=============  =========  =============  ==========

Смотрите параметр **dns_retrans**, выше.

.. index::
  pair: main; drop_cr

===========  =========  =============  ==============
**drop_cr**  Use: main  Type: boolean  Default: false
===========  =========  =============  ==============

Это - устаревший параметр, который сейчас не используется. Он использовался для изменения способа обработки Exim`ом символов CR и LF во входящих сообщениях. Что происходит сейчас, описано в разделе :ref:`44.2 <ch44_02>`.

.. index::
  pair: main; dsn_from

============  =========  =============  ==================
**dsn_from**  Use: main  Type: string†  Default: see below
============  =========  =============  ==================

Этот параметр может использоваться для изменения содержимого заголовков “From:” в рикошетах, и других автоматически созданных сообщениях (название параметра - сокращение от "Delivery Status Notifications"). Значение по умолчанию таково::

    dsn_from = Mail Delivery System <Mailer-Daemon@$qualify_domain>

Значение раскрывается каждый раз когда оно необходимо. Если раскрытие неудачно, в лог записывается паника и используется значение по умолчанию.

.. index::
  pair: main; envelope_to_remove

======================  =========  =============  =============
**envelope_to_remove**  Use: main  Type: boolean  Default: true
======================  =========  =============  =============

Траспорты Exim`a имеют параметр для добавления заголовка “Envelope-to:” в сообщение, при его доставке, точно таким же образом, обрабатывается “Return-path:”. “Envelope-to:” - делает запись оригинального адреса получателя, из конверта сообщения, вызвавшего доставку. Такие заголовки не должны присутствовать во входящих сообщениях, и этот параметр вызывает их удаление во время получения сообщения, для избежания возможных проблем, если доставленное сообщение впоследствии пересылается другому получателю.

.. index::
  pair: main; errors_copy

===============  =========  ==================  ==============
**errors_copy**  Use: main  Type: string list†  Default: unset
===============  =========  ==================  ==============

Установка этого параметра заставляет Exim посылать копии создаваемых рикошетов по другим адресам. 

.. note:: Это не применяется к рикошетам, приходящим из других мест. 

Значение этого параметра - список элементов, разделённый двоеточиями. Каждый элемент содержит габлон, завершаемый пробелом, сопровождаемый списком почтовых адресов, разделенных запятыми. Если шаблон содержит пробелы, он должен быть заключён в двойные кавычки.

Каждый шаблон обрабатывается также, как единичный пункт в списке адресов (смотрите раздел :ref:`10.19 <ch10_19>`). Когда шаблон совпадает с получателем рикошета, сообщение копируется на адреса в списке. Элементы просматриваются по порядку, и как только найдено совпадение, дальнейшие элементы не сравниваются. Например::

    errors_copy = spqr@mydomain   postmaster@mydomain.example :\
                  rqps@mydomain   hostmaster@mydomain.example,\
                                  postmaster@mydomain.example

Список адресов раскрывается до использования. Переменные раскрытия - $local_part и $domain устанавливаются из оригинального получателя сообщения о ошибке, и если был какой-либо подстановочный знак в шаблоне, переменные раскрытия - $0, $1, и т.д. устанавливаются обычным способом.

.. index::
  pair: main; errors_reply_to

===================  =========  ============  ==============
**errors_reply_to**  Use: main  Type: string  Default: unset
===================  =========  ============  ==============

По умолчанию, в Exim`e, предупреждающие сообщения о рикошетах и доставке содержат строку заголовка

::

    From: Mail Delivery System <Mailer-Daemon@qualify-domain>

где qualify-domain - значение параметра **qualify_domain**. Предупреждающее сообщение, созданное параметром **quota_warn_message** в транспорте **appendfile**, может содержать его собственный заголовок “From:”, отменяющий значение по умолчанию.

Опыт показывает, что люди отвечают на сообщения о рикошете. Если установлена параметр **errors_reply_to**, в предупреждающие сообщения и рикошеты добавляется заголовок “Reply-To:”. например::

    errors_reply_to = postmaster@my.domain.example

Значение этого параметра не раскрывается. Оно должно быть правильным адресом, в соответствии с :rfc:`2822`. Однако, если предупреждающее сообщение, созданное параметром **quota_warn_message** в транспорте **appendfile**, содержит собственный заголовок “Reply-To:”, значение параметра **errors_reply_to** не используется.

.. index::
  pair: main; exim_group

==============  =========  ============  ================================
**exim_group**  Use: main  Type: string  Default: compile-time configured
==============  =========  ============  ================================

Этот параметр изменяет gid под которым Exim работает, после отказа от привилегий суперпользователя. Значение по умолчанию вкомпилено в исполняемый файл. Значение этого параметра используется лишь когда, также, задано **exim_user**. Если значение не состоит полностью из цифр, ищется строка, используя *getgrnam()*, и ошибка вызывает ошибку конфигурации. Смотрите главу :ref:`52 <ch52_00>`, для обсуждения проблем безопасности.

.. index::
  pair: main; exim_path

=============  =========  ============  ==================
**exim_path**  Use: main  Type: string  Default: see below
=============  =========  ============  ==================

Этот параметр определяет путь к бинарному файлу Exim`a, который используется когда Exim`y надо перезапустить самого себя. Значение по умолчанию установлено на файл *exim* в директории, сконфигурированной при компиляции установкой BIN_DIRECTORY. Изменить **exim_path** бывает необходимо, исключительно если нужно запускать Exim из другого места. Предупреждение: не используйте макрос для установки значения этого параметра, поскольку вы прервёте те утилиты Exim`a, которые сканируют конфигурационный файл для нахождения местоположения исполняемого файла. (Тогда они используют параметр командной строки **-bP**, для извлечения настройки параметра, типа значения **spool_directory**.)

.. index::
  pair: main; exim_user

=============  =========  ============  ================================
**exim_user**  Use: main  Type: string  Default: compile-time configured
=============  =========  ============  ================================

Этот параметр изменяет uid, под которым работает Exim, после отказа от root`овых привилегий. Значение по умолчанию вкомпилено в исполняемый файл. Владелец файла рабочей конфигурации при использовании параметров командной строки **-C** и **-D** сверяется с исполняемым файлом, не с тем что установлено тут.

Если значение не состоит полностью из цифр, ищется строка, используя *getgrnam()*, и ошибка вызывает ошибку конфигурации. Если **exim_group** также не установлена, gid берётся из результата *getgrnam()*, если оно используется. Смотрите главу :ref:`52 <ch52_00>`, для обсуждения проблем безопасности.

.. index::
  pair: main; extra_local_interfaces

==========================  =========  =================  ==============
**extra_local_interfaces**  Use: main  Type: string list  Default: unset
==========================  =========  =================  ==============

Этот параметр задаёт сетевые интерфейсы, которые нужно считать местными при маршрутизации, но которые не слушаются даемоном. Смотрите раздел :ref:`13.8 <ch13_08>`, для получения дополнительных деталей.

.. index::
  pair: main; extract_addresses_remove_arguments

======================================  =========  =============  =============
**extract_addresses_remove_arguments**  Use: main  Type: boolean  Default: true
======================================  =========  =============  =============

Согласно некоторой документации sendmail (SUN, IRIX, HP-UX), если какие-либо адреса представлены в командной строке, когда параметр **-t** используется для построения конверта из заголовков сообщения “To:”, “Cc:” и “Bcc:”, адреса командной строки удаляются из списка получателей. Однако, другая документация Sendmail (книга O’Reilly), утверждает, что адреса командной строки добавляются к строкам полученным из заголовков. Когда **extract_addresses_remove_arguments** истинна (по умолчанию), Exim вычитает аргументы заголовков. Если она установлена в ложь, Exim добавляет, а не удаляет адреса параметров.

.. index::
  pair: main; finduser_retries

====================  =========  =============  ==========
**finduser_retries**  Use: main  Type: integer  Default: 0
====================  =========  =============  ==========

В системах, где работает NIS, или другие схемы с использованием информации о пользователях и группах из удалённой системы, могут быть времена, когда *getpwnam()* и связанные функции терпят неудачу, даже когда даны достоверные данные, поскольку происходит таймаут. К сожалению, эти отказы не могут быть отличены от подлинной ошибки “not found”. Если **finduser_retries** установлена более чем в ноль, Exim будет повторять попытки много раз, для нахождения пользователя или группы, ожидая секунду между повторами.

Вы не должны устанавливать этот параметр больше ноля, если ваша пользовательская БД находится в традиционном файле */etc/passwd*, поскольку это заставляет Exim напрасно искать в файле несуществующих пользователей, и также вызовет задержку.

.. index::
  pair: main; freeze_tell

===============  =========  ==================================  ==============
**freeze_tell**  Use: main  Type: string list, comma separated  Default: unset
===============  =========  ==================================  ==============

При столкновении с определёнными ошибками, или когда так сконфигурировано в системном фильтре, ACL, или специальном маршрутизаторе, Exim замораживает сообщение. Это означает, что дальнейших попыток не предпринимается, пока администратор не разморозит сообщение, или параметры **auto_thaw**, **ignore_bounce_errors_after**, или **timeout_frozen_after** не вызовут их обработку. Если установлена **freeze_tell**, Exim создает предупреждающее сообщение каждый раз, когда что-то замораживает, исключая, если замороженные сообщения - локально созданные рикошеты. (Без этого, есть возможность образования петель.) Предупреждающие сообщения посылаются по адресам, предоставленным как значение этого параметра, в виде списка, разделённого запятыми. Если несколько адресов сообщений вызывают заморозку, лишь одно сообщение посылается. Если замораживание было автоматическим, причины замораживания могут быть найдены в логах. Если вы настраиваете замораживание в фильтре, или ACL, вы можете настроить любую запись в лог, какое вам требуется.

.. index::
  pair: main; gecos_name

==============  =========  =============  ==============
**gecos_name**  Use: main  Type: string†  Default: unset
==============  =========  =============  ==============

Некоторые операционные системы, особенно HP-UX, используют поле “gecos” в системном файле паролей, для хранения иной информации, в дополнение к рельным именам пользователя. Exim ищет эту область для использования при создании заголовков “Sender:” и “From:”. Если **gecos_pattern** или **gecos_name** незаданы, используется неизменное содержимое этого поля, за тем исключением, что при столкновении со знаком “&”, он заменяется логином пользователя с первым заглавным символом, т.к. это - соглашение, соблюдаемое во многих системах.

Когда эти параметры установлены, **gecos_pattern** обрабатывается как регулярное выражение, которое должно быть применено к полю (снова с “&” заменяемым именем пользователя), и, если оно совпадает, **gecos_name** раскрывается, и используется как имя пользователя.

Числовые переменные, типа $1, $2 и т.д., могут использоваться в раскрытии для собирания субполей, которые совпадают с шаблоном. В HP-UX, где имя пользователя заканчивается в первой запятой, может использоваться следующее::

    gecos_pattern = ([^,]*)
    gecos_name = $1

.. index::
  pair: main; gecos_pattern

=================  =========  ============  ==============
**gecos_pattern**  Use: main  Type: string  Default: unset
=================  =========  ============  ==============

Смотрите выше, параметр **gecos_name**.

.. index::
  pair: main; gnutls_require_kx

=====================  =========  ============  ==============
**gnutls_require_kx**  Use: main  Type: string  Default: unset
=====================  =========  ============  ==============

Этот параметр контролирует механизм обмена ключей при использовании GnuTLS в сервере Exim. Для детальной информации смотрите раздел :ref:`39.5 <ch39_05>`.

.. index::
  pair: main; gnutls_require_mac

======================  =========  ============  ==============
**gnutls_require_mac**  Use: main  Type: string  Default: unset
======================  =========  ============  ==============

Этот параметр контролирует алгоритмы MAC при использовании GnuTLS в сервере Exim. Для детальной информации смотрите раздел :ref:`39.5 <ch39_05>`.

.. index::
  pair: main; gnutls_require_protocols

============================  =========  ============  ==============
**gnutls_require_protocols**  Use: main  Type: string  Default: unset
============================  =========  ============  ==============

Этот параметр контролирует протоколы  при использовании GnuTLS в сервере Exim. Для детальной информации смотрите раздел :ref:`39.5 <ch39_05>`.

.. index::
  pair: main; gnutls_compat_mode

======================  =========  =============  ==============
**gnutls_compat_mode**  Use: main  Type: boolean  Default: unset
======================  =========  =============  ==============

Этот параметр контролирует случаи использования совместимого режима GnuTLS в сервере Exim. Это сильно снижает безопасность, но повышает совместимость со старыми реализациями TLS.

.. index::
  pair: main; headers_charset

===================  =========  ============  ==================
**headers_charset**  Use: main  Type: string  Default: see below
===================  =========  ============  ==================

Этот параметр задаёт кодировку по умолчанию для трансляции из закодированных MIME “слов”, в строках заголовков, когда ссылаются из раскрытия $h_xxx. Значение по умолчанию - значение HEADERS_CHARSET в *Local/Makefile*. Окончательное значение по умолчанию - ISO-8859-1. Для дополнительных деталей, смотрите описание вставки заголовков в разделе :ref:`11.5 <ch11_05>`.

.. index::
  pair: main; header_maxsize

==================  =========  =============  ==================
**header_maxsize**  Use: main  Type: integer  Default: see below
==================  =========  =============  ==================

Этот параметр контролирует полный максимальный размер секции заголовков сообщения. Значение по умолчанию - HEADER_MAXSIZE в *Local/Makefile*; значение по умолчанию - 1M. Сообщения с большим размером заголовков, отклоняются.

.. index::
  pair: main; header_line_maxsize

=======================  =========  =============  ==========
**header_line_maxsize**  Use: main  Type: integer  Default: 0
=======================  =========  =============  ==========

Этот параметр ограничивает длину любой индивидуальной строки заголовка, после того, как были объединены все продолжения. Сообщения, в которых отдельные строки длиннее этого ограничения, отклоняются. Значение по умолчанию - ноль, означающее “нет ограничений”.

.. index::
  pair: main; helo_accept_junk_hosts

==========================  =========  ================  ==============
**helo_accept_junk_hosts**  Use: main  Type: host list†  Default: unset
==========================  =========  ================  ==============

Exim проверяет синтаксис команд HELO и EHLO, для входящей SMTP почты, и выдаёт ошибочный ответ для недопустимых данных. К сожалению, есть SMTP-клиенты, посылающие синтаксический хлам. Они могут быть обработаны, путём установки этого параметра. Отметьте - что это лишь синтаксическая проверка. Смотрите **helo_verify_hosts**, если вам необходимо провести и семантическую проверку. Также смотрите **helo_allow_chars**, для возможности расширить набор разрешённых символов.

.. index::
  pair: main; helo_allow_chars

====================  =========  ============  ==============
**helo_allow_chars**  Use: main  Type: string  Default: unset
====================  =========  ============  ==============

В этом параметре могут быть установлены запрещённые символы, которые будут разрешены во всех HELO и EHLO именах, в дополнение к стандартным буквам, цифрам, дефисам и точкам. Если вам реально необходимо разрешить символы подчёркивания, вы можете установить::

    helo_allow_chars = _

Отметьте, что значение - одна строка, а не список.

.. index::
  pair: main; helo_lookup_domains

=======================  =========  ==================  ==============
**helo_lookup_domains**  Use: main  Type: domain list†  Default: @:@[]
=======================  =========  ==================  ==============

Если домен, данный клиентом в команде HELO или EHLO совпадает с этим списком, производится обратный поиск, для установления истинного имени хоста. Значение по умолчанию вызывает поиск, если клиентом даётся имя сервера, или любой из его IP-адресов (в скобках), что, как замечено, делают кривые клиенты.

.. index::
  pair: main; helo_try_verify_hosts

=========================  =========  ================  ==============
**helo_try_verify_hosts**  Use: main  Type: host list†  Default: unset
=========================  =========  ================  ==============

По умолчанию, Exim лишь проверяет синтаксис команд HELO и EHLO (смотрите **helo_accept_junk_hosts** и **helo_allow_chars**). Однако, некоторые домены любят делать более расширенную проверку данных, предоставленных этими командами. Условие ACL ``verify = helo`` предоставляется, для возможности это сделать. Прежде, также было необходимо установить этот параметр (**helo_try_verify_hosts**) для принудительной проверки. Начиная с версии 4.53, это более не требуется. Если проверка не была сделана до встречи с ``verify = helo``, она делается в момент встречи. Следовательно, этот параметр является устаревшим. Его спецификация, здесь, сохранена для совместимости.

При получении команды HELO или EHLO, если вызывающий хост соответствует **helo_try_verify_hosts**, Exim проверяет что имя хоста, данное в команде HELO или EHLO, также:

* является IP-литералом, совпадающим с адресом вызывающего хоста, или
* совпадает с именем хоста, которое Exim получает, произведя обратный поиск адреса вызывающего хоста, или
* когда поиск путём *gethostbyname()* (или *getipnodebyname()*, когда доступна) приводит к адресу вызывающего хоста.
      
Однако, команда HELO или EHLO не отклоняется, если любая из проверок неудачна. Обработка продолжается, но результат проверки запомнен, и может быть обнаружен в ACL, путём условия ``verify = helo``.

.. index::
  pair: main; helo_verify_hosts

=====================  =========  ================  ==============
**helo_verify_hosts**  Use: main  Type: host list†  Default: unset
=====================  =========  ================  ==============

Как и **helo_try_verify_hosts**, этот параметр устарел, и сохранен лишь для обратной совместимости. Для хостов, совпадающих с этим параметром, Exim проверяет имя хоста данное в HELO или EHLO, также как для **helo_try_verify_hosts**. Если проверка неудачна, команда HELO/EHLO отклоняется с 550-й ошибкой, и пишутся логи в главный лог, и лог отклоненных хостов. Если команада MAIL передаётся до HELO/EHLO, она отклоняется с 503-й ошибкой.

.. index::
  pair: main; hold_domains

================  =========  ==================  ==============
**hold_domains**  Use: main  Type: domain list†  Default: unset
================  =========  ==================  ==============

Этот параметр разрешает проводить почту вручную по очереди, для некоторых доменов. Параметр переопределяется, если сообщение принудительно доставляется с параметрами **-M**, **-qf**, **-Rf** и **-Sf**, и также, когда тестируется или проверяется адрес с использованием **-bt** или **-bv**. Иначе, если домен совпадает с элементом в **hold_domains**, для этого адреса не производятся маршрутизация  или доставка, и он задерживается при каждом просмотре сообщения.

Этот параметр используется как временная операционная мера для задержки доставки почты, пока разбираются в какой-то проблеме, или проверяется новая конфигурация. Если вы хотите лишь задержать почту для некоторых доменов, пока работает очередь, вы должны использовать **queue_domains** или **queue_smtp_domains**, но не **hold_domains**.

.. index::
  pair: main; host_lookup

===============  =========  ================  ==============
**host_lookup**  Use: main  Type: host list†  Default: unset
===============  =========  ================  ==============

Exim не ищет имя вызывающего хоста, по его IP, если его не требуется сравнивать с каким-то списком хостов, или хост совпадает с **helo_try_verify_hosts** или **helo_verify_hosts**, или хост совпадает с этим параметром (который, обычно, содержит IP-адреса, а не имена хостов). Конфигурационный файл по умолчанию содержит

::

    host_lookup = *

что вызывает поиск для всех хостов. Если накладные расходы на этот поиск очень велики, установка может быть изменена, или удалена.

После успешного обратного поиска, Exim производит прямой поиск по полученному имени, для подтверждения, что он приведёт к тому IP, с которого всё началось. Если эта проверка безуспешна, Exim ведёт себя так, как будто поиск по имени был неудачен.

После любого вида ошибки, имя хоста (в $sender_host_name) остаётся незаданным, и $host_lookup_failed устанавливается в “1”. Смотрите также, **dns_again_means_nonexist**, **helo_lookup_domains**, и ``verify = reverse_host_lookup`` в ACL.

.. index::
  pair: main; host_lookup_order

=====================  =========  =================  =====================
**host_lookup_order**  Use: main  Type: string list  Default: bydns:byaddr
=====================  =========  =================  =====================

Эта параметр определяет порядок различных методов поиска, когда Exim пытается найти имя хоста по его IP-адресу. Значение по умолчанию - вначале производит поиск по DNS, и затем пробует локальный поиск (используя *gethostbyaddr()*, или эквивалент), если он неудачен. Вы можете изменить порядок этих поисков, или удалить ненужный.

.. warning:: Метод “byaddr” не всегда приводит к синонимам, когда много PTR-записей в DNS и IP-адрес не перечислен в */etc/hosts*. Различные ОС дают, в таких случаях, различные результаты. Именно поэтому, Exim с значением по умолчанию, вначале пробует произвести поиск в DNS.

.. index::
  pair: main; host_reject_connection

==========================  =========  ================  ==============
**host_reject_connection**  Use: main  Type: host list†  Default: unset
==========================  =========  ================  ==============

Если этот параметр задан, входящие SMTP вызовы от перечисленных хостов отклоняются, сразу же, при подключении.Эта параметр устарел, и сохранена только для обратной совместимости, поскольку, в настоящее время, ACL определённая как **acl_smtp_connect** также может немедленно отклонять входящие соединения.

Способность выдавать немедленное отклонение (или этим параметром, или использованием ACL) предусмотрена для использования в необычных случаях. Многие хосты просто сразу пробуют вновь, иногда без задержки. Обычно, лучше использовать ACL для отклонения входящих соединений на более поздней стадии, например после команды RCPT. Смотрите главу :ref:`40 <ch40_00>`.

.. index::
  pair: main; hosts_connection_nolog

==========================  =========  ================  ==============
**hosts_connection_nolog**  Use: main  Type: host list†  Default: unset
==========================  =========  ================  ==============

Этот параметр задаёт список хостов, при подключении с которых не происходит записи в лог, даже если лог-селектор **smtp_connection** установлен. Для примера, вы можете не регистрировать SMTP-соединения от локальных процессов, или с 127.0.0.1, или с вашей локальной сети. Этот параметр консультирует в основном цикле даемона; поэтому, вы должны стремиться к ограничению значения коротким списком IP и сетей. Для отключения записи в лог SMTP-подключений от локальных процессов, вы должны создать список хостов с пустым элементом. Например::

    hosts_connection_nolog = :

Если лог-селектор **smtp_connection** не установлен, от этом параметре не будет никакого эффекта.

.. index::
  pair: main; hosts_treat_as_local

========================  =========  ==================  ==============
**hosts_treat_as_local**  Use: main  Type: domain list†  Default: unset
========================  =========  ==================  ==============

Если этот параметр задан, при просмотре Exim`ом списка хостов полученного из MX-записей, или другого источника, любые имена хостов совпадающие со списком доменов, обрабатываются как будто они - локальный хост. Отметьте, что значение этого параметр - список доменов, не список хостов, поэтому она всегда используется для проверки имён хостов, а не IP-адресов.

Этот параметр также применяется, когда Exim сравнивает специальные элементы “@mx_any”, “@mx_primary”, и “@mx_secondary” в списке доменов (смотрите раздел :ref:`10.8 <ch10_08>`), и когда проверяется параметр **hosts** в транспорте **smtp**, для локального хоста (смотрите параметр **allow_localhost** в этом транспорте). Также смотрите **local_interfaces**, **extra_local_interfaces**, и главу :ref:`13 <ch13_00>`, который содержит обсуждение о локальных сетевых интерфейсах и распознавании локального хоста.

.. index::
  pair: main; ibase_servers

=================  =========  =================  ==============
**ibase_servers**  Use: main  Type: string list  Default: unset
=================  =========  =================  ==============

Этот параметр предоставляет список серверов InterBase, и ассоцированные данные соединения, для использования совместно с поисками “ibase” (смотрите раздел :ref:`9.21 <ch09_21>`). Параметр доступен лишь при сборке Exim'a c поддержкой InterBase.

.. index::
  pair: main; ignore_bounce_errors_after

==============================  =========  ==========  ============
**ignore_bounce_errors_after**  Use: main  Type: time  Default: 10w
==============================  =========  ==========  ============

Этот параметр затрагивает обработку рикошетов, которые не могут быть доставлены, т.е. те, у которых постоянная неудача доставки. (Рикошеты, у которых временная ошибка доставки, обрабатываются обычным способом.)

После постоянной неудачи доставки, рикошеты замораживаются, поскольку нет отправителя, которому они могли бы быть возвращены. Когда замороженный рикошет был в очереди больше заданного времени, он размораживается в следующую обработку очереди, и предпринимаются дальнейшие попытки доставки. Если снова происходит ошибка доставки, рикошет отбрасывается. Этот параметр позволяет оставлять неудачные рикошеты в течение более короткого периода времени, чем максимальное обычное время повтора, для замороженных сообщений. Например,

::

    ignore_bounce_errors_after = 12h

повторяет доставку неудачных рикошетов после 12 часов, отбрасывая любые последующие неудачи. Если значение этого параметра установлено в нулевой период времени, рикошеты отбрасываются немедленно. Установка очень большого времени (как в значении по умолчанию), имеет эффект отключения этого параметра. Для способов автоматического поведения других видов замороженных сообщений, смотрите параметры **auto_thaw** и **timeout_frozen_after**

.. index::
  pair: main; ignore_fromline_hosts

=========================  =========  ================  ==============
**ignore_fromline_hosts**  Use: main  Type: host list†  Default: unset
=========================  =========  ================  ==============

Некоторые кривые SMTP-клиенты настаивают на посылке похожей на UUCP “From ”, до заголовков сообщения. По умолчанию, это обрабатывается как начало тела сообщения, что означает, что любые следующие заголовки также не распознаются. Можно заставить Exim игнорировать это, путём установки **ignore_fromline_hosts** для совпадения с этими хостами, настаивающими на посылке таких строк. Если отправитель является локальным процессом, а не удалённым хостом, и он использует **-bs** для ввода сообщений, для достижения такого эффекта должна использоваться параметр **ignore_fromline_local**.

.. index::
  pair: main; ignore_fromline_local

=========================  =========  =============  ==============
**ignore_fromline_local**  Use: main  Type: boolean  Default: false
=========================  =========  =============  ==============

Смотрите выше, параметр **ignore_fromline_hosts**.

.. index::
  pair: main; keep_malformed

==================  =========  ==========  ===========
**keep_malformed**  Use: main  Type: time  Default: 4d
==================  =========  ==========  ===========

Этот параметр определяет, сколько времени оставлять сообщения, чьи spool-файлы повреждены каким-либо образом. Этого, конечно, никогда не должно происходить. При следующей попытке доставки этого сообщения, оно удаляется. Инцидент заносится в логи.

.. index::
  pair: main; ldap_default_servers

========================  =========  =================  ==============
**ldap_default_servers**  Use: main  Type: string list  Default: unset
========================  =========  =================  ==============

Этот параметр предоставляет список серверов LDAP, которые пробуются по очереди, когда запрос LDAP не содердит сервер. Смотрите раздел :ref:`9.14 <ch09_14>` для подробной информации о запросах LDAP. Этот параметр доступна лишь в случае, если Exim собран с поддержкой LDAP.

.. index::
  pair: main; ldap_version

================  =========  =============  ==============
**ldap_version**  Use: main  Type: integer  Default: unset
================  =========  =============  ==============

Этот параметр может использоваться для принудительной установки использования Exim`ом определённой версии протокола для LDAP. Если этот параметр не задан, он отображается при параметр командной строки **-bP** как равный “-1”. В этом случае, значение по умолчанию - 3, если в заголовках LDAP задано LDAP_VERSION3; иначе, оно - 2. Этот параметр доступен лишь в случае, если Exim собран с поддержкой LDAP.

.. index::
  pair: main; local_from_check

====================  =========  =============  =============
**local_from_check**  Use: main  Type: boolean  Default: true
====================  =========  =============  =============

Когда сообщение передаётся локально (т.е. не через TCP/IP соединение) недовереным пользователем, Exim удаляет любые существующие заголовки “Sender:”, и проверяет, что строка заголовка “From:” совпадает с логином вызывающего пользователя, и домен соответствует **qualify_domain**.

Отметьте: Дисквалифицированный адрес (без домена) в заголовке “From:”, в локально переданных сообщениях, автоматически квалифицируется Exim`ом, кроме как при использовании параметра командной строки - **-bnq**.

Вы можете использовать параметры **local_from_prefix** и **local_from_suffix** для разрешения аффиксов в локальных частях. Если строка заголовка “From:” не совпадает, Exim добавляет заголовок “Sender:” с адресом сконструированным из логина вызывающего пользователя, и домена по умолчанию.

Если **local_from_check** установлена в ложь, проверка заголовка “From:” отключена, и не добавляется заголовок “Sender:”. Кроме того, если вы хотите сохранить строку заголовка “Sender:”, переданную недоверенным пользователем, вы, также, должны сделать истинной параметр **local_sender_retain**.

Эти параметры имеют эффект лишь для строк заголовков в сообщении. Отправитель конверта продолжает оставаться идентификатором логина с квалификационным доменом, если **untrusted_set_sender** не разрешает пользователю передавать отправителя конверта.

Для сообщений переданных через TCP/IP, ACL может определить “режим подачи”,  для запроса подобной проверки строки заголовка. Смотрите раздел :ref:`44.16 <ch44_16>`, содержащем больше деталей о обработке “Sender:”.

.. index::
  pair: main; local_from_prefix

=====================  =========  ============  ==============
**local_from_prefix**  Use: main  Type: string  Default: unset
=====================  =========  ============  ==============

Когда Exim проверяет строку заголовка “From:” локально переданных сообщений на совпадение с идентификатором логина (смотрите выше, параметр **local_from_check**), он может быть сконфигурен для игнорирования определённых приставок и суффиксов в локальной части адресов. Это делается установкой **local_from_prefix** и/или **local_from_suffix** для подходящих списков, в такой же форме как параметр маршрутизации **local_part_prefix** и **local_part_suffix** (смотрите главу :ref:`15 <ch15_00>`). Для примера, если

::

    local_from_prefix = *-

установлено, строка “From:” содержит

::

    From: anything-user@your.domain.example

не будет заставлять добавлять заголовок “Sender:”, если *user@your.domain.example* фактически соответствует адресу отправителя, созданному из имени логина и квалификационного домена.

.. index::
  pair: main; local_from_suffix

=====================  =========  ============  ==============
**local_from_suffix**  Use: main  Type: string  Default: unset
=====================  =========  ============  ==============

Смотрите параметр **local_from_prefix**, выше.

.. index::
  pair: main; local_interfaces

====================  =========  =================  ==================
**local_interfaces**  Use: main  Type: string list  Default: see below
====================  =========  =================  ==================

Этот параметр контролирует, какие сетевые интерфейсы используются даемоном для прослушивания; также, они используются для идентификации локального хоста при маршрутизации. Глава :ref:`13 <ch13_00>` содержит полное описание этого параметра и связанных с ним параметров **daemon_smtp_ports**, **extra_local_interfaces**, **hosts_treat_as_local** и **tls_on_connect_ports**. Значение по умолчанию **local_interfaces**

::

    local_interfaces = 0.0.0.0

когда Exim собран без поддержки IPv6; иначе, оно

::

    local_interfaces = <; ::0 ; 0.0.0.0

.. index::
  pair: main; local_scan_timeout

======================  =========  ==========  ===========
**local_scan_timeout**  Use: main  Type: time  Default: 5m
======================  =========  ==========  ===========

Этот таймаут применяется к функции *local_scan()* (смотрите главу :ref:`42 <ch42_00>`). Нулевое значение - нет таймаута. Если таймаут истёк, входящее сообщение отвергается с временной ошибкой, если это SMTP сообщение. Для не-SMTP сообщения, сообщение уничтожается и Exim завершается с ненулевым кодом. Инцидент записывается в главном логе, и логе отклонённых.

.. index::
  pair: main; local_sender_retain

=======================  =========  =============  ==============
**local_sender_retain**  Use: main  Type: boolean  Default: false
=======================  =========  =============  ==============

Когда сообщение передаётся локально (т.е. не через TCP/IP соединение) недоверенным пользователем, Exim удаляет любые существующие строки заголовка “Sender:”. Если вы не хотите чтобы это происходило, вы должны установить **local_sender_retain** и также установить **local_from_check** в ложь (Exim будет ругаться, если этого не сделать). Смотрите также ACL модификатор ``control = suppress_local_fixups``. Раздел :ref:`44.16 <ch44_16>` для получения дополнительных деталей о обработке “Sender:”.

.. index::
  pair: main; localhost_number

====================  =========  =============  ==============
**localhost_number**  Use: main  Type: string†  Default: unset
====================  =========  =============  ==============

Идентификаторы сообщений Exim`a, обычно, уникальны только в пределах локального хоста. Если требуется уникальность среди ряда хостов, на каждом хосте необходимо установить различное значение для gfhfvtnhf **localhost_number**. Строка раскрывается немедленно после чтения конфигурационного файла (таким образом, чтобы число могло быть вычислено из имени хоста, например), и результат раскрытия должен быть числом в диапазоне 0-16 (или 0-10, если файловая система нечувствительна к регистру букв). Это доступно в последующих раскрытиях строк через переменную $localhost_number. Когда **localhost_number** установлена, два финальных символа идентификатора сообщения, вместо того, чтобы просто быть дробной частью от времени, вычисляются из времени и номера локального хоста, как описано в разделе :ref:`3.4 <ch03_04>`.

.. index::
  pair: main; log_file_path

=================  =========  ==================  ============================
**log_file_path**  Use: main  Type: string list†  Default: set at compile time
=================  =========  ==================  ============================

Этот параметр устанавливает путь, используемый для определения имён лог-файлов Exim`a, или индикации что запись в лог осуществляется через syslog, или и того и другого. Это раскрывается при входе Exim`a, и она может, например, содержать ссылку на имя хоста. Если путь для ведения логов не установлен при компиляции или в рабочей конфигурации, они пишутся в субдиректорию, называемую *log*, в директории спула Exim`a. Глава :ref:`49 <ch49_00>` содержит дальнейшие детали о записи в лог Exim`a, и раздел :ref:`49.1 <ch49_01>` описывает, как используется содержимое **log_file_path**. Если эта строка установлена при инсталляции (не содержит никаких раскрываемых переменных), рекомендуется, чтобы вы не устанавливали этот параметр в файле конфигурации, но предоставляли путь, используя LOG_FILE_PATH в *Local/Makefile*, чтобы он сразу была доступен Exim`y для записи ошибок, в частности ошибок чтения конфигурационного файла.

.. index::
  pair: main; log_selector

================  =========  ============  ==============
**log_selector**  Use: main  Type: string  Default: unset
================  =========  ============  ==============

Этот параметр может использоваться для уменьшения или сокращения числа событий которые Exim пишет в лог-файлы. Его параметр составлен из имён, которым предшествуют символы плюса или минуса. Например::

    log_selector = +arguments -retry_defer

Список возможных имён и что они контролируют дан в части о записи в логи, в разделе :ref:`49.15 <ch49_15>`.

.. index::
  pair: main; log_timezone

================  =========  =============  ==============
**log_timezone**  Use: main  Type: boolean  Default: false
================  =========  =============  ==============

По умолчанию, временная метка, в строках логов, в локальном времени, без временной зоны. Это означает, что если ваша временная зона меняется дважды в год, временная метка в логах неоднозначна в течение часа, когда часы возвращаются назад. Один способ избежать этой проблемы - установить временную зону в UTC. Альтернатива - установить **log_timezone** в истину. Это включает дополнение временной зоны в строки логов. Включение этого параметра может добавить довольно много к размеру логов, поскольку каждая строка становиться больше на 6 символов. Отметьте, что переменная $tod_log содержит временную метку без зоны, но есть другая переменная, называемая $tod_zone, которая содержит смещение часового пояса.

.. index::
  pair: main; lookup_open_max

===================  =========  =============  ===========
**lookup_open_max**  Use: main  Type: integer  Default: 25
===================  =========  =============  ===========

Этот параметр ограничивает число одновременно открытых файлов, для одноключевого поиска, которые используют регулярные файлы (т.е. **lsearch**, **dbm** и **cdb**). Обычно, Exim оставляет эти файлы открытыми в течение маршрутизации, поскольку часто один и тот же файл требуется несколько раз. Если предел достигнут, Exim закрывает самый давно использовавшийся файл. Отметьте, что если вы используете библиотеку **ndbm**, она, фактически, открывает два файла для каждой логической DBM базы данных, хотя для **lookup_open_max** он всё ещё считается как один.Если вы получаете ошибку “too many open files” с NDBM, вы должны уменьшить [#]_ значение **lookup_open_max**.

.. index::
  pair: main; max_username_length

=======================  =========  =============  ==========
**max_username_length**  Use: main  Type: integer  Default: 0
=======================  =========  =============  ==========

Некоторые операционные системы кривые, в том, что они усекают длинный аргумент *getpwnam()* до восьми символов, вместо того, чтобы вернуть “no such user”. Если этот параметр установлен в число больше нуля, любые попытки вызова *getpwnam()* с более длинным аргументом ведут себя так, будто вызов *getpwnam()* был неудачен.

.. index::
  pair: main; message_body_newlines

=========================  =========  ==========  ==============
**message_body_newlines**  Use: main  Type: bool  Default: false
=========================  =========  ==========  ==============

По умолчанию, символы новой строки в сообщении заменяются пробелами при установке переменных раскрытия $message_body и $message_body_end. Если этот параметр истинна - этого не происходит.

.. index::
  pair: main; message_body_visible

========================  =========  =============  ============
**message_body_visible**  Use: main  Type: integer  Default: 500
========================  =========  =============  ============

Этот параметр определяет, как много тела сообщения будет включено в переменные раскрытия $message_body и $message_body_end.

.. index::
  pair: main; message_id_header_domain

============================  =========  =============  ==============
**message_id_header_domain**  Use: main  Type: string†  Default: unset
============================  =========  =============  ==============

Если этот параметр задан, строка раскрывается и используется как правая сторона (домен) в заголовке “Message-ID:”, который создаёт Exim, если локально созданное сообщение приходит без него. Локально созданное - значит не полученное через TCP/IP. Иначе, используется первичное имя хоста. Разрешены только буквы, цифры, точки и дефисы; любые другие символы заменяются дефисами. Если раскрытие принудительно неудачно, или если результат - пустая строка, параметр игнорируется.

.. index::
  pair: main; message_id_header_text

==========================  =========  =============  ==============
**message_id_header_text**  Use: main  Type: string†  Default: unset
==========================  =========  =============  ==============

Если этот параметр задан, строка раскрывается и используется для увеличения текста заголовка “Message-id:”, который Exim создаёт если локально созданное сообщение его не имеет. Текст этого заголовка требуется согласно :rfc:`2822`, для принятия формы адреса. По умолчанию, Exim использует его внутренние идентификаторы сообщений как локальную часть, и первичное имя хоста как домен. Если этот параметр задан, он раскрывается, и если раскрытие не было неудачным, и не привело к пустой строке, результат вставляется в заголовок непосредственно до “@”, отделяясь от внутреннего идентификатора точкой. Любые символы, которые недопустимы в адресах, автоматически преобразуются в дефисы. Это означает, что могут использоваться переменные типа $tod_log, поскольку все пробелы и двоеточия станут дефисами

.. index::
  pair: main; message_logs

================  =========  =============  =============
**message_logs**  Use: main  Type: boolean  Default: true
================  =========  =============  =============

Если этот параметр выключен, логи на каждое сообщение не создаются в поддиректории спула *msglog*. Это уменьшает дисковый ввод-вывод, требуемый Exim`y, уменьшает число файлов вовлечённых в обработку сообщения от минимум четырёх (заголовок в файле спула, тело в файле спула, журнал доставки, и лог на каждое сообщение) до трёх. Другая причина активности ввода-вывода - главный лог-файл Exim'a, не затрагиваемый этим параметром.

.. index::
  pair: main; message_size_limit

======================  =========  =============  ============
**message_size_limit**  Use: main  Type: string†  Default: 50M
======================  =========  =============  ============

Этот параметр ограничивает максимальный размер сообщения, обрабатываемого Exim`ом. Значение раскрывается для каждого входящего сообщения, таким образом, например, оно может зависеть от IP-адреса, удалённого хоста, для сообщений передаваемых через TCP/IP. После раскрытия переменная должна быть последовательностью десятичных цифр, необязательно сопровождаемых “K” или “M”.

.. note:: Эти ограничения не могут быть зависимы от отправителя сообщения, или других свойств индивидуального сообщения, поскольку оно должно фигурировать в ответе сервера HELO. Ошибка раскрытия строки приводит к временной ошибке. Значение ноль означает - нет лимитов, но оно не рекомендуется для использования. Смотрите также параметр **bounce_return_size_limit**.

Входящим SMTP-сообщениям выдаётся 552-я ошибка, если лимит исчерпан; сообщения, созданное локально, получают сообщение на стандартный вывод ошибок, или сообщение о ошибке доставки, отправителю сообщения, в зависимости от установки **-oe**. Отклонение сообщений с превышенным размером записывается в оба лога - главный, и лог отклонённых. Смотрите также общий параметр транспортов - **message_size_limit**, который ограничивает размер сообщения которое может обработать индивидуальный транспорт.

.. index::
  pair: main; move_frozen_messages

========================  =========  =============  ==============
**move_frozen_messages**  Use: main  Type: boolean  Default: false
========================  =========  =============  ==============

Этот параметр, который доступен лишь если Exim собран с установкой

::

    SUPPORT_MOVE_FROZEN_MESSAGES=yes

в *Local/Makefile*, вызывает перемещение замороженных сообщений и их логов из директорий *input* и *msglog* в спуле, в *Finput* и *Fmsglog*, соответственно. В настоящее время в Exim`e или стандартных утилитах нет поддержки, для обработки таких сообщений, и они не показываются в списках созданных параметром **-bp**, или монитором Exim`a.

.. index::
  pair: main; mua_wrapper

===============  =========  =============  ==============
**mua_wrapper**  Use: main  Type: boolean  Default: false
===============  =========  =============  ==============

Установка этого параметра в истину заставляет Exim выполняться в очень ограниченном режиме, в котором он передаёт сообщения синхронно, на интелектуальный хост. Глава :ref:`48 <ch48_00>` содержит полное описание этого средства.

.. index::
  pair: main; mysql_servers

=================  =========  =================  ==============
**mysql_servers**  Use: main  Type: string list  Default: unset
=================  =========  =================  ==============

Этот параметр предоставляет список MySQL серверов, и ассоциированных данных подключения, для использования с поиском **mysql** (смотрите раздел :ref:`9.21 <ch09_21>`). Параметр доступен только если Exim собран с поддержкой MySQL.

.. index::
  pair: main; never_users

===============  =========  ==================  ==============
**never_users**  Use: main  Type: string list†  Default: unset
===============  =========  ==================  ==============

Этот параметр раскрывается лишь раз, в начале старта процесса Exim`a. Локальные доставки сообщений, обычно, в процессах, выполняющихся от получателя, и удалённые доставки, обычно, работают под uid и gid Exim`a. Из предосторожности, следует избегать любых доставок производимых от пользователя root.

При сборке Exim`a, параметр с именем FIXED_NEVER_USERS может быть установлена в список пользователей которые не могут использоваться для локальной доставки. Этот список установлен в исполняемом файле, и не может быть замещен конфигурационным файлом. По умолчанию, он содержит лишь одно имя пользователя - “root”. Рабочий параметр **never_users** может использоваться для добавления большего количества пользователей к фиксированному списку.

Если сообщение необходимо доставить от одного из пользователей жёсткого списка, или списка **never_users**, происходит ошибка, и доставка задерживается. Обычный пример::

    never_users = root:daemon:bin

Включение root - избыточно, если он таже находится в фиксированном списке, но вреда не причиняет. Этот параметр замещает параметр **pipe_as_creator** драйвера транспорта **pipe**.

.. index::
  pair: main; openssl_options

===================  =========  =================  =====================================
**openssl_options**  Use: main  Type: string list  Default: +dont_insert_empty_fragments
===================  =========  =================  =====================================

This option allows an administrator to adjust the SSL options applied by OpenSSL to connections. It is given as a space-separated list of items, each one to be +added or -subtracted from the current value. The default value is one option which happens to have been set historically. You can remove all options with::

    openssl_options = -all

This option is only available if Exim is built against OpenSSL. The values available for this option vary according to the age of your OpenSSL install. The “all” value controls a subset of flags which are available, typically the bug workaround options. The SSL_CTX_set_options man page will list the values known on your system and Exim should support all the “bug workaround” options and many of the “modifying” options. The Exim names lose the leading “!SSL_OP_” and are lower-cased. 

Note that adjusting the options can have severe impact upon the security of SSL as used by Exim. It is possible to disable safety checks and shoot yourself in the foot in various unpleasant ways. This option should not be adjusted lightly. An unrecognised item will be detected at by invoking Exim with the **-bV** flag. 

An example:: 

    openssl_options = -all +microsoft_big_sslv3_buffer


.. index::
  pair: main; oracle_servers

==================  =========  =================  ==============
**oracle_servers**  Use: main  Type: string list  Default: unset
==================  =========  =================  ==============

Этот параметр предоставляет список Oracle серверов, и ассоциированных данных подключения, для использования с поиском **oracle*** (смотрите раздел :ref:`9.21 <ch09_21>`). Параметр доступен только если Exim собран с поддержкой Oracle.

.. index::
  pair: main; percent_hack_domains

========================  =========  ==================  ==============
**percent_hack_domains**  Use: main  Type: domain list†  Default: unset
========================  =========  ==================  ==============

“percent hack” - является соглашением, посредством которого, локальная часть, содержащая символ процента, интерпретируется как новый e-mail адрес, с процентом, заменённым “@”. Иногда, это называют маршрутизацией источника, хотя этот термин также применим к адресам :rfc:`2822`, начинающимся с символа “@”. Если этот параметр задан, Exim применяет феню с процентом для перечисленных доменов, но не для других. Это происходит до проверки SMTP-адреса при помощи ACL.

.. warning:: “percent hack” часто используется людьми, пробующими обойти ограничения релеинга. Поэтому, лучше его избегать, если это возможно. К сожалению, много MTA не заботящихся о безопасности, применяют его безоговорочно. Если вы используете Exim на межсетевом хосте, и маршрутизации почту к внутреннему MTA, без обработки локальной части, то хорошей идеей будет отклонить адреса получателей с символами процента в локальной части. Конфигурация по умолчанию Exim`a так и делает.

.. index::
  pair: main; perl_at_start

=================  =========  =============  ==============
**perl_at_start**  Use: main  Type: boolean  Default: false
=================  =========  =============  ==============

Этот параметр доступнен лишь когда Exim собран с встроенным интерпретатором Perl. Смотрите главу :ref:`12 <ch12_00>`, для получения деталей о её использовании.

.. index::
  pair: main; perl_startup

================  =========  ============  ==============
**perl_startup**  Use: main  Type: string  Default: unset
================  =========  ============  ==============

Этот параметр доступен лишь когда Exim собран с встроенным интерпретатором Perl. Смотрите главу :ref:`12 <ch12_00>`, для получения деталей о её использовании.

.. index::
  pair: main; pgsql_servers

=================  =========  =================  ==============
**pgsql_servers**  Use: main  Type: string list  Default: unset
=================  =========  =================  ==============

Этот параметр предоставляет список PostgreSQL серверов, и ассоциированных данных подключения, для использования с поиском **pgsql** (смотрите раздел :ref:`9.21 <ch09_21>`). Параметр доступен только если Exim собран с поддержкой PostgreSQL.

.. index::
  pair: main; pid_file_path

=================  =========  =============  ============================
**pid_file_path**  Use: main  Type: string†  Default: set at compile time
=================  =========  =============  ============================

Этот параметр задаёт имя файла, в который даемон Exim`a записывает свой pid процесса. Строка раскрывается, таким образом она может содержать ссылку на имя хоста::

    pid_file_path = /var/log/$primary_hostname/exim.pid

Если путь не задан, pid пишется в файл *exim-daemon.pid* в директории спула Exim`a. Значение установленное параметром может быть замещено параметром командной строки **-oP**. Файл pid не записывается “нестандартным” даемоном, запущенным при помощи параметра **-oX**, если путь явно не задан параметром **-oP**.

.. index::
  pair: main; pipelining_advertise_hosts

==============================  =========  ================  ===========
**pipelining_advertise_hosts**  Use: main  Type: host list†  Default: \*
==============================  =========  ================  ===========

Этот параметр может использоваться для подавления объявления расширения SMTP PIPELINING для определённых хостов. Смотрите, также, **no_pipelining** в разделе :ref:`40.20 <ch40_20>`. Когда PIPELINING не объявляется, и **smtp_enforce_sync** истинна, сервер Exim требует строгую синхронизацию для каждой SMTP команды, и ответа. Когда объявлено PIPELINING, Exim предполагает что клиенты будут его использовать; ожидаются команды не по порядку, и они не считаются ошибками протокола (смотрите **smtp_max_synprot_errors**).

.. index::
  pair: main; preserve_message_logs

=========================  =========  =============  ==============
**preserve_message_logs**  Use: main  Type: boolean  Default: false
=========================  =========  =============  ==============

Если этот параметр задан, лог-файлы сообщений не удаляются, по окончании обработки сообщения. Вместо этого, они перемещаются в поддиректорию спула, с именем *msglog.OLD*, где они остаются доступными для статистики и процесса отладки. Это опасный параметр для установки на системах с заметным объёмом почты. Используйте с осторожностью!

.. index::
  pair: main; primary_hostname

====================  =========  ============  ==================
**primary_hostname**  Use: main  Type: string  Default: see below
====================  =========  ============  ==================

Этот параметр задаёт имя текущего хоста. Она используется в командах по умолчанию HELO или EHLO, для исходящих SMTP сообщений (изменяется параметром **helo_data** в транспорте **smtp**), и по умолчанию для **qualify_domain**. Значение, также, используется, по умолчанию, в некоторых сообщениях SMTP-ответов сервера Exim. Он может быть динамически изменен установкой **smtp_active_hostname**.

Если **primary_hostname** не задан, Exim вызывает *uname()*, для нахождения имени хоста. Если вызов неудачен, Exim паникует и умирает. Если имя, возвращённое *uname()* содержит лишь один компонент, Exim передаёт его *gethostbyname()* (или *getipnodebyname()*, когда доступна) чтобы получить полностью квалифицированную версию. Переменная $primary_hostname содержит имя хоста, полученный этим параметром, или значение по умолчанию.

.. index::
  pair: main; print_topbitchars

=====================  =========  =============  ==============
**print_topbitchars**  Use: main  Type: boolean  Default: false
=====================  =========  =============  ==============

По умолчанию, Exim рассматривает лишь те символы, которые закодированы в диапазоне 32-126 - печатные символы. Во многих обстоятельствах (например, при записи логов), непечатные символы конвертируются в прослэшенные последовательности, прежде всего, чтобы не испортить размещение. Если **print_topbitchars** установлена, предполагается, что значения кодов более 128 - печатные символы.

Также, этот параметр применяется к проверкам синтаксиса заголовков, производимых транспортом **transport**, и при конструировании полных пользовательских имён по :rfc:`2047`, в заголовках адресов “From:” и “Sender:” (как описано в разделе :ref:`44.18 <ch44_18>`). Установка этого параметр может заставить Exim создавать восьмибитные заголовки сообщений, что не соответствует стандартам.

.. index::
  pair: main; process_log_path

====================  =========  ============  ==============
**process_log_path**  Use: main  Type: string  Default: unset
====================  =========  ============  ==============

Этот параметр устанавливает имя файла, в который Exim записывает свой “лог процесса” (“process log”), когда посылается сигнал USR1. Это используется скриптом утилиты *exiwhat*. Если этот параметр не задан, используется файл с именем *exim-process.info* в директории спула Exim`a. Возможность задать имя явно может быть полезной в окружении где запущены два различных Exim`a, используя различные директории spool`a.

.. index::
  pair: main; prod_requires_admin

=======================  =========  =============  =============
**prod_requires_admin**  Use: main  Type: boolean  Default: true
=======================  =========  =============  =============

Параметры командной строки **-M**, **-R** и **-q** требуют, чтобы вызывающий был административным пользователем, если параметр **prod_requires_admin** не установлен в ложь. Смотрите также **queue_list_requires_admin**.

.. index::
  pair: main; qualify_domain

==================  =========  =============  ==================
**qualify_domain**  Use: main  Type: string   Default: see below
==================  =========  =============  ==================

Этот параметр определяет имя домена, которое добавляется к любому адресу отправителя конверта, не имеющему доменной части. Также он применяется к адресам получателей, если не установлен параметр **qualify_recipient**. Дисквалифицированые [#]_ адреса, по умолчанию, принимаются только для созданных локально сообщений. Квалификация, также, применяется к адресам в строках заголовков, типа “From:” и “To:” для локально созданных сообщений, если не используется параметр командной строки **-bnq**.

Сообщения из внешних источников всегда должны содержать полностью квалифицированный адрес, если посылающий хост не соответствует **sender_unqualified_hosts** или **recipient_unqualified_hosts** (соответственно), в этих случаях входящие адреса квалифицируются с **qualify_domain** или **qualify_recipient**, по необходимости. Внутри себя, Exim всегда работает с полностью квалифицированными адресами конвертов. Если **qualify_domain** не задана, по умолчанию используется значение **primary_hostname**.

.. index::
  pair: main; qualify_recipient

=====================  =========  =============  ==================
**qualify_recipient**  Use: main  Type: string   Default: see below
=====================  =========  =============  ==================

Этот параметр позволяет вам задать иной домен для квалификации адреса получателя. Смотрите **qualify_domain** выше.

.. index::
  pair: main; queue_domains

=================  =========  ==================  ==============
**queue_domains**  Use: main  Type: domain list†  Default: unset
=================  =========  ==================  ==============

Этот параметр - список доменов, для которых немедленная доставка не требуется. Процесс доставки начинается при получении каждого сообщения, но обрабатываются лишь те домены, которые не соответствуют [#]_. Все иные доставки ждут следующего запуска очереди. Смотрите также **hold_domains** и **queue_smtp_domains**.

.. index::
  pair: main; queue_list_requires_admin

=============================  =========  =============  =============
**queue_list_requires_admin**  Use: main  Type: boolean  Default: true
=============================  =========  =============  =============

Параметр командной строки **-bp**, выводящая список сообщений в очереди, требует, чтобы вызывающий был административным пользователем, если **queue_list_requires_admin** не установлена в ложь. Также смотрите параметр **prod_requires_admin**.

.. index::
  pair: main; queue_only

==============  =========  =============  ==============
**queue_only**  Use: main  Type: boolean  Default: false
==============  =========  =============  ==============

Если **queue_only** задана, процесс доставки не стартует автоматически когда получено сообщение. Вместо этого, сообщение ждёт в очереди, следующего запуска очереди. Даже если **queue_only** - ложна, входящие сообщения могут доставляться не сразу, когда происходят определённые условия (например большая загрузка).

Параметр командной строки **-odq** - имеет такой же эффект как и **queue_only**. Параметр командной строки **-odb** и **-odi** замещают **queue_only**, если не ложна **queue_only_override**. Смотрите также **queue_only_file**, **queue_only_load** и **smtp_accept_queue**.

.. index::
  pair: main; queue_only_file

===================  =========  ============  ==============
**queue_only_file**  Use: main  Type: string  Default: unset
===================  =========  ============  ==============

Этот параметр может быть установлена в список, разделённый двоеточием, абсолютных имён путей, каждому из которых, необязательно, предшествует **smtp**. Когда Exim получает сообщение, этот параметр проверяет существование каждого перечисленного пути, используя вызов *stat()*. Для каждого пути, что существует, устанавливается параметр очереди передачи. Для путей без префикса, **queue_only** - установлена; для путей с префиксом **smtp**, **queue_smtp_domains** устанавливается в совпадение со всеми доменами. Таким образом, например,

::

    queue_only_file = smtp/some/file

заставляет Exim вести себя, так, как будто **queue_smtp_domains** установлена в “*”, когда существует файл */some/file*.

.. index::
  pair: main; queue_only_load

===================  =========  =================  ==============
**queue_only_load**  Use: main  Type: fixed-point  Default: unset
===================  =========  =================  ==============

Если средняя загрузка системы выше этого значения, входящие сообщения из всех источников ставиться в очередь, и автоматическая доставка не запускается. Если это происходит во время локального или SMTP ввода, все последующие сообщения, в том же соединении, ставяться в очередь о умолчанию - назвисимо от того что происходит с нагрузкой, но - это может быть изменено путём установки **queue_only_load_latch** в ложь.

Доставки будут выполнены впоследствии, процессами обработчика очереди. Этот параметр не имеет эффекта на старых операционных системах, в которых Exim не может определить среднюю загрузку системы. Также смотрите **deliver_queue_load_max** и **smtp_load_reserve**.

.. index::
  pair: main; queue_only_load_latch

=========================  =========  =============  =============
**queue_only_load_latch**  Use: main  Type: boolean  Default: true
=========================  =========  =============  =============

Когда этот параметр истинна (по-умолчанию), как только сообщение будет поставлено в очередь, поскольку значение нагрузки (LA) будет больше чем установленное **queue_only_load**, все последующие сообщения переданные в том же SMTP соединении также ставится в очередь. Это - осознанный выбор; хотя средняя нагрузка может быть ниже порога, кажется неправильным доставлять более поздние сообщения из того же соединения, пока не доставлены предыдущие. Однако, есть специальные обстоятельства, такие как долгоживущие соединения от сканирующих программ, когда это не самый лучший вариант. В этих случаях, **queue_only_load_latch** должна быть установлена в ложь. Это вызывает пересчёт значения нагрузки для каждого сообщения.

.. index::
  pair: main; queue_only_override

=======================  =========  =============  =============
**queue_only_override**  Use: main  Type: boolean  Default: true
=======================  =========  =============  =============

Когда этот параметр истинна, параметр командной строки **-odx** замещает установки **queue_only** или **queue_only_file** в конфигурационном файле. Если **queue_only_override** установлена в ложь, параметр **-odx** не может использоваться для замещения; они принимаются, но игнорируются.

.. index::
  pair: main; queue_run_in_order

======================  =========  =============  ==============
**queue_run_in_order**  Use: main  Type: boolean  Default: false
======================  =========  =============  ==============

Если этот параметр установлен, работа очереди происходит в порядке прибытия сообщений, вместо произвольного порядка. Для того чтобы это случилось, до начала доставки должен быть создан полный список всей очереди. Когда очередь находится в единственном каталоге (по умолчанию), создаётся единственный список и для упорядоченных случаев, и для неупорядоченных. Однако, если установлен параметр **split_spool_directory**, единственный список не создаётся, когда параметр **queue_run_in_order** ложь. В этом случае, поддиректории обрабатываются по одному (в случайном порядке), и это позволяет избежать создания одного огромного списка для всей очереди. Таким образом, установка **queue_run_in_order** с **split_spool_directory** может ухудшить производительность, когда очередь большая, поскольку будет производиться дополнительная работа по созданию одного, большого списка. В большинстве случаев, **queue_run_in_order** не должна быть установлена.

.. index::
  pair: main; queue_run_max

=================  =========  =============  ==========
**queue_run_max**  Use: main  Type: integer  Default: 5
=================  =========  =============  ==========

Этот параметр контролирует максимальное число процессов обработчика очереди которые даемон Exim`a может выполнять одновременно. Это не значит, что он запускает их одновременно, а скорее, что если всё ещё работает максимальное число, когда приходит время запускать другой, он задерживает старт следующего. Это может случиться с очень большими очередями, и/или с очень медленными доставками. Однако, этот параметр не блокирует другие процессы, таким образом дополнительные обработчики очереди могут быть запущены другими средствами, или уничтожением и перезапуском даемона.

Установка этого параметра в ноль не подавляет выполнение очереди; вместо этого, это отключает лимит, разрешая выполняться любому числу одновременных процессов обработчика очереди. Если вы не хотите чтобы обработки очереди пересекались, опустите параметр **-qxx** в командной строке даемона.

.. index::
  pair: main; queue_smtp_domains

======================  =========  ==================  ==============
**queue_smtp_domains**  Use: main  Type: domain list†  Default: unset
======================  =========  ==================  ==============

Когда этот параметр установлен, процесс доставки запускается каждый раз, когда получено сообщение, маршрутизация выполнена, и имеют место локальные доставки. Однако, если SMTP доставки требуются для доменов совпадающих с **queue_smtp_domains**, они не происходят немедленно, вместо этого сообщение ждёт в очереди следующего запуска очереди. С момента маршрутизации сообщения, Exim знает, к каким удалённым хостам его нужно доставить, и, таким образом, когда происходит обработка очереди, много сообщений для одного хоста доставляются через одно SMTP соединение. В таком случае, параметр командной строки **-odqs** заставляет все SMTP доставки становиться в очередь, и это эквивалентно установке **queue_smtp_domains** в “*”. Также смотрите **hold_domains** и **queue_domains**.

.. index::
  pair: main; receive_timeout

===================  =========  ==========  ===========
**receive_timeout**  Use: main  Type: time  Default: 0s
===================  =========  ==========  ===========

Этот параметр устанавливает таймаут для приёма не-SMTP сообщений, т.е. максимальное время, которое Exim ждёт, читая сообщение на стандартном вводе. Если это значение равно нулю, он будет ждать вечно. Этот параметр замещается параметром командной строки **-or**. Таймаут для входящих SMTP сообщение контролируется параметром **smtp_receive_timeout**.

.. index::
  pair: main; received_header_text

========================  =========  =============  ==================
**received_header_text**  Use: main  Type: string†  Default: see below
========================  =========  =============  ==================

Этот параметр задаёт содержимое заголовка сообщения “Received:”, который добавляется к каждому сообщению, за исключением штампа времени, который добавляется автоматчески в конце (с предшествующей точкой с запятой). Строка раскрывается каждый раз при использовании. Если раскрытие приводит к пустой строке, заголовок “Received:” к сообщению не добавляется. Иначе, строка должна начинаться с текста “Received:”, и соответствовать спецификации :rfc:`2822` для строк заголовка  “Received:”. Значение по умолчанию::

    received_header_text = Received: \
     ${if def:sender_rcvhost {from $sender_rcvhost\n\t}\
     {${if def:sender_ident \
     {from ${quote_local_part:$sender_ident} }}\
     ${if def:sender_helo_name {(helo=$sender_helo_name)\n\t}}}}\
     by $primary_hostname \
     ${if def:received_protocol {with $received_protocol}} \
     ${if def:tls_cipher {($tls_cipher)\n\t}}\
     (Exim $version_number)\n\t\
     ${if def:sender_address \
     {(envelope-from <$sender_address>)\n\t}}\
     id $message_exim_id\
     ${if def:received_for {\n\tfor $received_for}}

Ссылка на шифрование TLS опущена, когда Exim собран без поддержки TLS. Использование условных раскрытий гарантирует, что это работает и для локально созданных сообщений, и для сообщений полученных с удалённых хостов, давая строки заголовка, типа таких::

    Received: from scrooge.carol.example ([192.168.12.25] ident=root)
              by marley.carol.example with esmtp (Exim 4.00)
              (envelope-from <bob@carol.example>)
              id 16IOWa-00019l-00
              for chas@dickens.example; Tue, 25 Dec 2001 14:43:44 +0000
              Received: by scrooge.carol.example with local (Exim 4.00)
              id 16IOWW-000083-00; Tue, 25 Dec 2001 14:43:41 +0000

Пока тело сообщения не получено, штамп времени - время начала приёма сообщения. Как только получено тело сообщения, и все проверки политик произошли, штамп времени обновляется, до времени в которое было принято сообщение.

.. index::
  pair: main; received_headers_max

========================  =========  =============  ===========
**received_headers_max**  Use: main  Type: integer  Default: 30
========================  =========  =============  ===========

Когда сообщение должно быть доставлено, подсчитывается число заголовков “Received:”, и если оно больше этого параметра, предполагается, что произошло зацикливание почты, доставка прерывается, и создается сообщение о ошибке. Это применяется к обоим - локальной и удалённой доставкам.

.. index::
  pair: main; recipient_unqualified_hosts

===============================  =========  ================  ==============
**recipient_unqualified_hosts**  Use: main  Type: host list†  Default: unset
===============================  =========  ================  ==============

Этот параметр - список тех хостов, от которых Exim готов принять неквалифицированные адреса получателей, в конвертах сообщений. Адреса полностью квалифицируются путём дополнения значением **qualify_recipient**. Этот параметр, также, применяется к строкам заголовков. Exim не отклоняет неквалифицированные адреса получателей в заголовках, но он их квалифицирует только когда сообщение пришло с хоста совпадающего с **recipient_unqualified_hosts**, или если сообщение было передано локально (не используя TCP/IP), и не был установлен параметр **-bnq**.

.. index::
  pair: main; recipients_max

==================  =========  =============  ==========
**recipients_max**  Use: main  Type: integer  Default: 0
==================  =========  =============  ==========

Если этот параметр установлен больше ноля, он определяет максимальное число оригинальных получателей для любого сообщения. Дополнительные получатели, которые созданы перенаправлением или подстановкой синонима не считаются. SMTP сообщения дают 452-й ответ для всех получателей, превышающих предел; более ранние получатели доставляются нормально. Не-SMTP сообщения со слишком большим числом получателей неуспешны, и никаких доставок не происходит.

.. note:: RFC определяет, что SMTP-сервер должен принять по крайней мере 100 команд RCPT в одном сообщении.

.. index::
  pair: main; recipients_max_reject

=========================  =========  =============  ==============
**recipients_max_reject**  Use: main  Type: boolean  Default: false
=========================  =========  =============  ==============

Если этот параметр установлен в истину, Exim отклоняет SMTP сообщения содержащие слишком много получателей, выдавая ошибку 552 на избыточные команды RCPT, и ошибку 554 на возможную команду DATA. Иначе (по умолчанию) он выдаёт ошибку 452 на избыточные команды RCPT и принимает сообщение от имени начального набора получателей. Удалённый сервер должен снова послать сообщение для оставшихся получателей, в более позднее время.

.. index::
  pair: main; remote_max_parallel

=======================  =========  =============  ==========
**remote_max_parallel**  Use: main  Type: integer  Default: 2
=======================  =========  =============  ==========

Этот параметр контролирует параллельные доставки одного сообщения к множеству удалённых хостов. Если значение меньше чем 2, параллельная доставка отключена, и Exim делает все удалённые доставки для сообщения по одной. Иначе, если единичное сообщение нужно доставить более чем одному удалённому хосту, или если несколько копий необходимо доставить на один и тот же удалённый хост, одновременно производятся до **remote_max_parallel** доставок. Если требуется более чем **remote_max_parallel** доставок, запускается максимальное число процессов, и как только заканчивается один, начинается другой. Порядок запуска процессов точно такой же как при последовательной доставке, и может управляться параметром **remote_sort_domains**. Если параллельная доставка имеет место когда включена работа с отладкой, отладочный вывод для каждого процесса доставки отмечается его идентификатором процесса.

Этот параметр контролирует только максимальное число параллельных доставок для одного сообщения в одном процессе доставки Exim`a. Поскольку Exim не имеет центрального менеджера очереди, нет способа управлять общим числом одновременных доставок, если конфигурация позволяет попытку доставки сразу после получения сообщения.

Если вы хотите контролировать общее число доставок на систему, вам необходимо установить параметр **queue_only**. Это гарантирует, что все входящие сообщения сановятся в очередь, без запуска процесса доставки. Затем, настройте даемон Exim`a на запуск процесса обработчика очереди в соответствующих интервалах (скорей всего часто, например, раз в минуту), и ограничьте общее число обработчиков очереди путём установки параметра **queue_run_max**. Поскольку каждый обработчик очереди доставляет лишь одно сообщение за раз, максимальное число доставок, которые могут происходить одновременно, это - **queue_run_max** умноженное на **remote_max_parallel**.

Если вы просто хотите контролировать удалённые доставки, используйте **queue_smtp_domains** вместо **queue_only**. Это добавляет преимущества, от использования SMTP-маршрутизации до очереди, таким обрахом, чтобы несколько сообщений для одного хоста доставлялись за одно соединение.

.. index::
  pair: main; remote_sort_domains

=======================  =========  ==================  ==============
**remote_sort_domains**  Use: main  Type: domain list†  Default: unset
=======================  =========  ==================  ==============

Когда существует много удалённых доставок для сообщения, они сортируются по доменам, в порядке заданном этим списком. Например,

::

    remote_sort_domains = *.cam.ac.uk:*.uk

вызвало бы попытку, вначале, доставить все адреса в домен “cam.ac.uk”, затем в домен “uk”, затем к остальным доменам.

.. index::
  pair: main; retry_data_expire

=====================  =========  ==========  ===========
**retry_data_expire**  Use: main  Type: time  Default: 7d
=====================  =========  ==========  ===========

Этот параметр устанавливает время “использовать до” (“use before”), в информации повторов, в базе данных подсказок (hints) Exim`a. Любые более старые данные повторов - игнорируются. Таким образом, это значит, что, например, если хост не был проверен в течение 7 дней, Exim ведёт себя так, будто прошлых неудач не было.

.. index::
  pair: main; retry_interval_max

======================  =========  ==========  ============
**retry_interval_max**  Use: main  Type: time  Default: 24h
======================  =========  ==========  ============

Глава :ref:`32 <ch32_00>` описывает механизмы Exim`a, для контроля интервалов между попытками доставки сообщения, которое не может быть доставлено немедленно. Этот параметр устанавливает полный предел временного отрезка между повторами. Он не может быть установлена более 24 часов; любая попытка так сделать приведёт к значению по умолчанию.

.. index::
  pair: main; return_path_remove

======================  =========  =============  =============
**return_path_remove**  Use: main  Type: boolean  Default: true
======================  =========  =============  =============

:rfc:`2821`, раздел :ref:`4.4 <ch04_04>`, заявляет, что сервер SMTP должен вставить строку заголовка “Return-path:” в сообщение, когда он совершает “финальную доставку”. Заголовок “Return-path:” сохраняет адрес отправителя, как он был передан в команде MAIL. Это описание подразумевает, что этот заголовок не должен присутствовать во входящих сообщениях. Если параметр **return_path_remove** истинна, любой существующий заголовок “Return-path:” удаляется из сообщения при его приёме. Транспорты Exim`a имеют параметры для добавления заголовка “Return-path:” во время доставки. Обычно они используются только для заключительных локальных доставок.

.. index::
  pair: main; return_size_limit

=====================  =========  =============  =============
**return_size_limit**  Use: main  Type: integer  Default: 100K
=====================  =========  =============  =============

Этот параметр - устаревший синоним для **bounce_return_size_limit**.

.. index::
  pair: main; rfc1413_hosts

=================  =========  ================  ===========
**rfc1413_hosts**  Use: main  Type: host list†  Default: \*
=================  =========  ================  ===========

Идентификационные запросы :rfc:`1413`, производимые к любому клиентскому хосту, который совпадает с элементом в списке.

.. index::
  pair: main; rfc1413_query_timeout

=========================  =========  ==========  ===========
**rfc1413_query_timeout**  Use: main  Type: time  Default: 5s
=========================  =========  ==========  ===========

Этот параметр устанавливает таймаут для идентификационных вызовов :rfc:`1413`. Если она установлена в ноль, вызовы :rfc:`1413` не производятся.

.. index::
  pair: main; sender_unqualified_hosts

============================  =========  ================  ==============
**sender_unqualified_hosts**  Use: main  Type: host list†  Default: unset
============================  =========  ================  ==============

Этот параметр - список тех хостов, от которых Exim готов принять неквалифицированные адреса получателей. Адреса квалифицируются парамтром **qualify_domain**. Этот параметр, также, затрагивает строки заголовков. Exim не отклоняет неквалифицированные адреса в заголовках которые содержат адрес отправителя, но он их квалифицирует лишь в случае, если сообщение пришло с хоста совпадающего с **sender_unqualified_hosts**, или если сообщение было передано локально (не используя TCP/IP), и не был задан параметр командной строки **-bnq**.

.. index::
  pair: main; smtp_accept_keepalive

=========================  =========  =============  =============
**smtp_accept_keepalive**  Use: main  Type: boolean  Default: true
=========================  =========  =============  =============

Этот параметр управляет установкой параметра SO_KEEPALIVE для входящих соединений сокетов TCP/IP. Когда она установлена, это говорит ядру периодически пробовать неактивные соединения, путём посыла пакета со старыми номерами последовательности. Другой конец соединения должен послать подтверждение, если соединение всё ещё существует, или сброс, если соединение было прервано. Причина, по которой это делается, в том, что это вызывает полезный эффект освобождения определённых типов подключений, которые могут застревать, когда удалённый хост отсоединился без соответствующего запроса TCP/IP. Механизм keepalive занимает несколько часов  для обнаружения недостижимых хостов.

.. index::
  pair: main; smtp_accept_max

===================  =========  =============  ===========
**smtp_accept_max**  Use: main  Type: integer  Default: 20
===================  =========  =============  ===========

Этот параметр определяет максимальное число одновременных входящих вызовов SMTP, которые Exim примет. Это применяется только к слушающему даемону; она не управляет Exim`ом, когда входящие SMTP-подключения обрабатываются *inetd*. Если значение установлено в ноль, ограничения снимаются. Однако, она обязана быть отличной от нуля, если установлен параметр **smtp_accept_max_per_host** или **smtp_accept_queue**. Также смотрите параметры **smtp_accept_reserve** и **smtp_load_reserve**.

Новое SMTP соединение немедленно отвергается, если достигнуто ограничение **smtp_accept_max**. Если нет, вначале Exim проверяет **smtp_accept_max_per_host**. Если клиентский хост не достиг этого ограничения, до приёма соединения проверяются **smtp_accept_reserve** и **smtp_load_reserve**.

.. index::
  pair: main; smtp_accept_max_nonmail

===========================  =========  =============  ===========
**smtp_accept_max_nonmail**  Use: main  Type: integer  Default: 10
===========================  =========  =============  ===========

Exim считает число “непочтовых” (“non-mail”) команд в SMTP-сессии, и разрывает её, если их слишком много. Этот параметр задаёт “слишком много”. Проверка ловит некоторые атаки отказ-в-обслуживании, повторяющиеся неправильные AUTH, или сумашедшее зацикливание клиента, например посылая HELO. Проверка применяется лишь если клиентский хост совпадает с **smtp_accept_max_nonmail_hosts**.

Когда ожидается новое сообщение, не подсчитывается одно RSET. Это позволяет клиентам посылать одну команду RSET до сообщения (это ненужно, но некотрые клиенты так делают). Exim также разрешает одну неподсчитываемую команду HELO или EHLO, и одну STARTTLS между сообщениями. После запуска TLS-сессии, ожидается иное HELO, таким образом, оно тоже не считается. Первая команда AUTH в соединении, или сразу после STARTTLS - также не считается. Иначе, подсчитываются все команды кроме MAIL, RCPT, DATA, и QUIT.

.. index::
  pair: main; smtp_accept_max_nonmail_hosts

=================================  =========  ================  ===========
**smtp_accept_max_nonmail_hosts**  Use: main  Type: host list†  Default: \*
=================================  =========  ================  ===========

Вы можете контролировать, какие хосты подчиняются проверке **smtp_accept_max_nonmail**, путём установки этого параметра. Значение по умолчанию применяет её ко всем хостам. Изменяя значение, вы можете исключить любые хосты с неправильным поведением, с которыми вам надо переписываться.

.. index::
  pair: main; smtp_accept_max_per_connection

==================================  =========  =============  =============
**smtp_accept_max_per_connection**  Use: main  Type: integer  Default: 1000
==================================  =========  =============  =============

Значение этого параметра ограничивает число команд MAIL, которые Exim готов принять в течение одного SMTP-подключения, вне зависимости от того, приводит ли каждая команда к передаче сообщения. После исчерпания лимита, выдаётся 421 ответ на последующие команды MAIL. Этот предел - предосторожность против сошедших с ума клиентов (были замечены такие инциденты).

.. index::
  pair: main; smtp_accept_max_per_host

============================  =========  =============  ==============
**smtp_accept_max_per_host**  Use: main  Type: string†  Default: unset
============================  =========  =============  ==============

Этот параметр ограничивает число одновременных IP подключений с одного хоста (строго, с одного IP-адреса) к даемону Exim`a. Параметр раскрывается, для обнаружения различных ограничений применяемых к различным хостам, по $sender_host_address. Когда лимит исчерпан, дополнительные попытки подключения с того же хоста отклоняются с кодом ошибки 421. Это полностью независимо от **smtp_accept_reserve**. Значение по умолчанию - ноль, не налагает никаких ограничений. Если параметр установлен, он требует, чтобы **smtp_accept_max** была ненулевой.

.. warning:: При установке этого параметра вы не должны использовать любые конструкции раскрытия, которые занимают заметное время. Раскрытие и проверка происходят в петле главного даемона, для отклонения дополнительных подключений без запуска дополнительного процесса (иначе, атака отказ-в-обслуживании может вызвать создание большого числа процессов). Во время выполнения этой обработки, даемон не может принимать другие входящие подключения.

.. index::
  pair: main; smtp_accept_queue

=====================  =========  =============  ==========
**smtp_accept_queue**  Use: main  Type: integer  Default: 0
=====================  =========  =============  ==========

Если число одновременных входящих SMTP-подключений обрабатываемых слушающим даемоном превысит это значение, сообщения передаваемые через SMTP лишь помещаются в очередь; процессы доставки автоматически не запускаются. Счётчик исправляется при старте SMTP соединения. Он не может быть обновлён субпроцессом который получает сообщение, и, таким образом, ставить в очередь или нет применяется ко всем сообщениям переданным в одном соединении.

Значение ноль, означает отсутствие лимитов, и ясно, что полезны лишь значения отличные от нуля, лишь если оно меньше чем **smtp_accept_max** (если оно не ноль). Также смотрите **queue_only**, **queue_only_load** **queue_smtp_domains** и различные **-odx** параметры командной строки.

.. index::
  pair: main; smtp_accept_queue_per_connection

====================================  =========  =============  ===========
**smtp_accept_queue_per_connection**  Use: main  Type: integer  Default: 10
====================================  =========  =============  ===========

Этот параметр ограничивает число процессов доставки, которые Exim запускает автоматически, когда получает сообщение по SMTP, через даемона, или путём использования **-bs** или **-bS**. Если значение параметра больше нуля, и число сообщений передаваемых в одной SMTP-сессии превышает это число, последующие сообщения помещаются в очередь, но процессы доставки не запускаются. Это помогает ограничить число процессов Exim`a при перезапуске сервера после простоя, и есть много почты ожидающей его на других системах. На больших системах, значение по умолчанию вероятно, должно быть увеличено, и на системах с дозвоном по умолчанию (модему), оно, вероятно, должно быть равно нулю (т.е. - отключено).

.. index::
  pair: main; smtp_accept_reserve

=======================  =========  =============  ==========
**smtp_accept_reserve**  Use: main  Type: integer  Default: 0
=======================  =========  =============  ==========

Когда **smtp_accept_max** установлено в значение больше нуля, этот параметр определяет число SMTP-соединений, которые зарезервированы для хостов перечисленных в **smtp_reserve_hosts**. Значение в **smtp_accept_max** включает это резервирование. Указанные хосты не ограничены этим числом подключений; параметр определяет минимальное число соединений для них, не для максимума. Это гарантирует, что группа хостов всегда может получить по крайней мере **smtp_accept_reserve** число подключений. Однако, всё ещё применяется лимит **smtp_accept_max_per_host** к каждому индивидуальному хосту.

Например, если **smtp_accept_max** установлена в 50, и **smtp_accept_reserve** установлена в 5, как только будет 45 активных соединений (от любых хостов), новые соединения будут приниматься лишь для хостов перечисленных в **smtp_reserve_hosts** предоставляя иные критерии для приёма.

.. index::
  pair: main; smtp_active_hostname

========================  =========  =============  ==============
**smtp_active_hostname**  Use: main  Type: string†  Default: unset
========================  =========  =============  ==============

Этот параметр предоставлена для многодомашних [#]_ серверов, которые могут выдавать себя за несколько различных хостов. В начале входящего SMTP соединения, это значение раскрывается, и используется в SMTP-ответах, вместо значения $primary_hostname. Например, это используется как имя домена в ответ на входящую команду HELO или EHLO.

Активное имя хоста помещается в переменную $smtp_active_hostname, которая сохраняется с любыми полученными сообщениями. Поэтому она доступна для использования в маршрутизаторах и транспортах, когда сообщение доставляется позднее.

Если этот параметр не задан, или раскрытие принудительно неудачно, или раскрытие вернуло пустую строку, используется значение **$primary_hostname**. Другие ошибки раскрытия вызывают запись сообщения в главный лог и лог паники, и SMTP-командой передаётся временная ошибка. Обычно, значение **smtp_active_hostname** зависит от адреса интерфейса, с которого идёт сообщение. Например::

    smtp_active_hostname = ${if eq{$received_ip_address}{10.0.0.1}\
                            {cox.mydomain}{box.mydomain}}

Хотя $smtp_active_hostname применяется преимущественно ко входящим сообщениям, она также, используется как значение по умолчанию для команд “HELO” в проверках обратным вызовом (callout), если отсутствует удалённый транспорт из которого получается значение **helo_data**.

.. index::
  pair: main; smtp_banner

===============  =========  =============  ==================
**smtp_banner**  Use: main  Type: string†  Default: see below
===============  =========  =============  ==================

Эта строка, которая раскрывается каждый раз при использовании, выводится как начальный положительный ответ на SMTP подключение. Значение по умолчанию такое::

    smtp_banner = $smtp_active_hostname ESMTP Exim \
                  $version_number $tod_full

Ошибка раскрытия строки вызывает паническую ошибку. Если вы хотите создать многострочный ответ на начальное SMTP соединение, используйте “\n” в соответствующих точках строки, но не в конце. Отметьте, что 220 код не включен в строку. Exim добавляет его автоматически (многократно, в случае многострочного ответа).

.. index::
  pair: main; smtp_check_spool_space

==========================  =========  =============  =============
**smtp_check_spool_space**  Use: main  Type: boolean  Default: true
==========================  =========  =============  =============

Когда этот параметр установлен, если во входящем SMTP сеансе будет параметр SIZE в команде MAIL, она проверяет, что есть достаточно свободного места, в директории спула, для приёма сообщения этого размера, где всё ещё остаётся свободным количество заданное **check_spool_space** (даже если это значение - ноль). Если нет достаточного количества свободного места, возвращается код временной ошибки.

.. index::
  pair: main; smtp_connect_backlog

========================  =========  =============  ===========
**smtp_connect_backlog**  Use: main  Type: integer  Default: 20
========================  =========  =============  ===========

Этот параметр задаёт максимальное число ожидающих SMTP соединений. Exim передаёт это значение системе TCP/IP, когда он устанавливает её слушателя. Тогда, это число соединений, ожидающих внимания даемона, последующим попыткам подключения отказывается на уровне TCP/IP. по крайней мере, это то, что говорится в документации; в некоторых ситуациях, наблюдались таймауты этих попыток соединения. Для больших систем, было бы хорошей идеей увеличить это значение (скажем, до 50). Также это даёт некоторую защиту против атак типа отказ-в-обслуживании, SYN-флудом.

.. index::
  pair: main; smtp_enforce_sync

=====================  =========  =============  =============
**smtp_enforce_sync**  Use: main  Type: boolean  Default: true
=====================  =========  =============  =============

Спецификация протокола SMTP требует, чтобы клиент ждал ответа сервера в определённых точках диалога. Без PIPELINING, эти точки синхронизации - после каждой команды; с PIPELINING, их меньше, но они всё ещё существуют.

Некоторые спамеры высылают полный набор команд SMTP без ожидания какого-либо ответа. Exim защищает от этого, путём отклонения сообщения, если клиент посылал будущий ввод [#]_, когда этого не должно было быть.Посылается ответ о ошибке “554 SMTP synchronization error”, и соединение обрывается. Тестирование на эту ошибку не может быть идеальным, поскольку задержки передачи (неожиданный ввод может находиться в пути, но не получен при проверках Exim). Однако, этим детектируется много случаев.

Эта проверка может быть глобально отключена путём установки **smtp_enforce_sync** в ложь. Если вы хотите выборочно отключить эту проверку (например, только для определённых хостов), вы можете это сделать путём соответствующего использования модификатора “control” в ACL (смотрите раздел :ref:`40.20 <ch40_20>`). Также, смотрите параметр **pipelining_advertise_hosts**.

.. index::
  pair: main; smtp_etrn_command

=====================  =========  =============  ==============
**smtp_etrn_command**  Use: main  Type: string†  Default: unset
=====================  =========  =============  ==============

Если этот параметр установлен, данная команда выполняется каждый раз, при получении команды SMTP ETRN с хоста, которому разрешено давать такие команды (смотрите главу :ref:`40 <ch40_00>`). Строка разделяется на отдельные аргументы, которые раскрываются независимо. Переменная раскрытия $domain устанавливается из аргумента команды ETRN, и проверок её синтаксиса не производится. Например::

    smtp_etrn_command = /etc/etrn_command $domain \
                        $sender_host_address

Для запуска команды создаётся новый процесс, но Exim не ждёт его завершения. Следовательно, его статус не может быть проверен. Если команда не может быть запущена, это пишется в лог паники, но вызывающему ETRN всё равно передаётся успешный код 250. Exim, обычно, запускается под собственным uid, когда получает SMTP, таким образом, невозможно сменить uid до выполнения команды.

.. index::
  pair: main; smtp_etrn_serialize

=======================  =========  =============  =============
**smtp_etrn_serialize**  Use: main  Type: boolean  Default: true
=======================  =========  =============  =============

Когда этот параметр установлен, он предотвращает одновременное выполнение более чем одной идентичной команды, как результат ERTN в SMTP-соединении. Для получения дополнительных деталей, смотрите раздел :ref:`45.8 <ch45_08>`.

.. index::
  pair: main; smtp_load_reserve

=====================  =========  =================  ==============
**smtp_load_reserve**  Use: main  Type: fixed-point  Default: unset
=====================  =========  =================  ==============

Если средняя загрузка системы становиться выше чем тут указано, входящие SMTP-соединения принимаются только от тех хостов, которые совпадают с **smtp_reserve_hosts**. Если **smtp_reserve_hosts** не задана, входящие SMTP-вызовы не принимаются, когда загрузка превышает лимит. Параметр не имеет эффекта на старых операционных системах, в которых Exim не может определить среднюю загрузку. Также смотрите **deliver_queue_load_max** и **queue_only_load**.

.. index::
  pair: main; smtp_max_synprot_errors

===========================  =========  =============  ==========
**smtp_max_synprot_errors**  Use: main  Type: integer  Default: 3
===========================  =========  =============  ==========

Exim отклоняет команды SMTP содержащие ошибки синтаксиса или протокола. В частности, синтаксически неправильный адрес электронной почты в этой команде::

    RCPT TO:<abc xyz@a.b.c>

приводит к немедленному отклонению команды, до других проверок. (ACL не могут быть запущены, если нет допустимого адреса, для его установки.) Пример ошибки протокола - передача RCPT до MAIL. Если происходит слишком много синтаксических ошибок или ошибок протокола в одной SMTP-сессии, соединение разрывается. Ограничение устанавливается этим параметром.

Когда используется расширение SMTP - PIPELINING, некоторые ошибки протокола “ожидаемы”, например, команда RCPT после отклонённой команды MAIL. Exim предполагает, что PIPELINING будет использоваться, если он информировал о нём (смотрите **pipelining_advertise_hosts**), и в этой ситуации, “ожидаемые” ошибки не суммируются к лимиту.

.. index::
  pair: main; smtp_max_unknown_commands

=============================  =========  =============  ==========
**smtp_max_unknown_commands**  Use: main  Type: integer  Default: 3
=============================  =========  =============  ==========

Если слишком много не распознанных команд во входящей SMTP-сессии, сервер Exim обрывает соединение. Это - защита от некоторых спамеров, ломающих сайты, заставляя их создавать соединения на SMTP-порты; в этих случаях, сначала посылается много не-SMTP команд.

.. index::
  pair: main; smtp_ratelimit_hosts

========================  =========  ================  ==============
**smtp_ratelimit_hosts**  Use: main  Type: host list†  Default: unset
========================  =========  ================  ==============

Некоторые сервера считают полезным ограничивать частоту с которой определённые хосты могут им посылать письма, и частоту с которой индивидуальные сообщения могут определять получателей.

Exim имеет два фактора, ограничивающих частоту. Эта секция описывает старое средство, которое может ограничивать частоту в одном соединении. Более новое условие ACL может ограничивать частоту для всех соединений. Для получения деталей о новом средстве, смотрите раздел :ref:`40.35 <ch40_35>`.

Когда хост совпадает с **smtp_ratelimit_hosts**, используются значения **smtp_ratelimit_mail** и **smtp_ratelimit_rcpt** для контроля частоты приёма команд MAIL и RCPT в единственной SMTP-сессии, соответственно. Каждый параметр, если задан, должен содержать четыре значения, разделённых запятыми:
* Порог, до которого нет ограничений частоты.
* Начальная задержка времени. В отличие от других времён в Exim`e, тут разрешены цифры с десятичными дробными частями.
* Фактор, по которому каждый раз увеличивается время задержки.
* Максимальное значение для задержки. Оно, обычно, должно быть менее пяти минут, поскольку после этого времени, клиент подвергает SMTP-команду таймауту.

Например, эти установки успешно использовались на сервере, который первым предложил эту деталь, для контролирования почты от клиентов::

    smtp_ratelimit_mail = 2,0.5s,1.05,4m
    smtp_ratelimit_rcpt = 4,0.25s,1.015,4m

Первая установка определяет задержки, применяемые к командам MAIL после того, как две были переданы по одному соединению. Начальная задержка 0.5 секунды, увеличивающаяся по фактору 1.05 каждый раз. Вторая установка применяет задержки к командам RCPT, когда их бывает более четырёх в одном сообщении.

.. index::
  pair: main; smtp_ratelimit_mail

=======================  =========  ============  ==============
**smtp_ratelimit_mail**  Use: main  Type: string  Default: unset
=======================  =========  ============  ==============

Смотрите выше, параметр **smtp_ratelimit_hosts**.

.. index::
  pair: main; smtp_ratelimit_rcpt

=======================  =========  ============  ==============
**smtp_ratelimit_rcpt**  Use: main  Type: string  Default: unset
=======================  =========  ============  ==============

Смотрите выше, параметр **smtp_ratelimit_hosts**.

.. index::
  pair: main; smtp_receive_timeout

========================  =========  ==========  ===========
**smtp_receive_timeout**  Use: main  Type: time  Default: 5m
========================  =========  ==========  ===========

Этим устанавливается значение таймаута для приёма SMTP. Это применяется ко всем формам ввода SMTP, включая пакетный SMTP. Если строка ввода (включая команды SMTP, или строки данных) не получена в пределах этого времени, подключение SMTP разрывается и сообщение бросается. В лог пишутся строки содержащие одно их следующих сообщений::

    SMTP command timeout on connection from...
    SMTP data timeout on connection from...

Первая означает, что Exim ожидал чтения SMTP-команды; последняя означает, что он был в фазе данных, читая содержимое сообщения.

Значение этого параметра может быть замещено параметром командной строки **-os**. Установка значения времени в ноль - отключает таймаут, но это никогда не должно использоваться для SMTP через TCP/IP. (Это может быть полезным в некотрых случаях локального ввода, используя **-bs** или **-bS**.) Для не-SMTP ввода, таймаутом приёма управляет параметр **receive_timeout** или **-or**.

.. index::
  pair: main; smtp_reserve_hosts

======================  =========  ================  ==============
**smtp_reserve_hosts**  Use: main  Type: host list†  Default: unset
======================  =========  ================  ==============

Этот параметр задаёт хосты для которых резервируются SMTP-соединения; смотрите выше параметры **smtp_accept_reserve** и **smtp_load_reserve**.

.. index::
  pair: main; smtp_return_error_details

=============================  =========  =============  ==============
**smtp_return_error_details**  Use: main  Type: boolean  Default: false
=============================  =========  =============  ==============

В состоянии по умолчанию, когда происходит отклонение команд SMTP по настройкам политик, Exim использует вежливые собщения, типа “Administrative prohibition”. Это нравиться многим системным администраторам, поскольку даёт мало информации спамерам. Однако, некоторые другие системные администраторы, применяющие жёсткую политику проверки, хотят выдавать намного более полную информацию о ошибках. Установка **smtp_return_error_details** в истину заставляет Exim быть более приветливым. Например, вместо “Administrative prohibition”, он мог бы выдать::

    550-Rejected after DATA: '>' missing at end of address:
    550 failing address in "From" header is: <user@dom.ain

.. index::
  pair: main; spamd_address

=================  =========  ============  ==================
**spamd_address**  Use: main  Type: string  Default: see below
=================  =========  ============  ==================

Этот параметр доступен лишь если Exim собран с поддержкой расширения проверки контента. Этим определяется, как Exim подключается к даемону SpamAssassin`a. Значение по умолчанию::

    127.0.0.1 783

Для получения дополнительных деталей, смотрите раздел :ref:`41.2 <ch41_02>`.

.. index::
  pair: main; split_spool_directory

=========================  =========  =============  ==============
**split_spool_directory**  Use: main  Type: boolean  Default: false
=========================  =========  =============  ==============

Если этот параметр установлен, это заставляет Exim разбить свой входной каталог на 62 поддиректории, каждая с именем в виде одного буквенно-цифрового символа.  Шестой символ идентификатора сообщения используется для распределения сообщений по поддиректориям; это - наименее значащая из цифра, по основанию 62, времени прибытия сообщения.

Разделение спула позволяет увеличить производительность в системах, где длинные почтовые очереди, уменьшая число файлов в одном каталоге. Директория *msglog* делится таким же способом, как и *input*; однако, если **preserve_message_logs** установлена, все старые логи всё равно помещаются в одну директорию *msglog.OLD*.

Нет необходимости предпринимать какие-то действия для существующих сообщений, когда изменяется **split_spool_directory**. Exim замечает сообщения, находящиеся в “неверном” месте, и продолжает обрабатывать их. Если параметр будет отключен, то после периода обработки, поддиректории, в конечном счёте, опустеют, и будут автоматически удалены.

Когда параметр **split_spool_directory** установлена, изменяется поведение обработчика очереди. Вместо создания списка всех сообщений в очереди, и последующей попытки доставить каждое из них по очереди, он создаёт их список в одной субдиректории, и пробует доставить их, до перехода к следующему подкаталогу. Подкаталоги обрабатываются в случайном порядке. Это разворачивает сканирование входных директорий, и использует меньше памяти. Особенно это выгодно, когда в очереди много сообщений. Однако, если установлен параметр **queue_run_in_order**, не происходит ни одна из новых обработок. Вся очередь должна быть просмотрена, и отсортирована до того, как начнутся какие бы то ни было доставки.

.. index::
  pair: main; spool_directory

===================  =========  =============  ============================
**spool_directory**  Use: main  Type: string†  Default: set at compile time
===================  =========  =============  ============================

Этот параметр задаёт директорию, в которую Exim сохраняет обрабатываемые сообщения, т.е. сообщения, ожидающие доставки. Значение по умолчанию берётся из настроек сборки, если они есть. Если нет, этот параметр должен быть задан. Строка раскрывается, таким образом она может содержать, например, ссылку на $primary_hostname.

Если имя директории спула задано при инсталляции, рекомендуется, чтобы вы использовали настройки из инсталляции, а не этого параметра, особенно, если логи пишутся в директорию спула (смотрите **log_file_path**). Иначе, логи не могут использоваться для ошибок, детектируемых на ранней стадии, типа ошибок в файле конфигурации.

Путём использования этого параметра для отмены вкомпиленного пути, возможно запускать тесты Exim`a без использования стандартного спула.

.. index::
  pair: main; sqlite_lock_timeout

=======================  =========  ==========  ===========
**sqlite_lock_timeout**  Use: main  Type: time  Default: 5s
=======================  =========  ==========  ===========

Этот параметр контролирует таймаут, который используется поисками “sqlite”, когда пытаются обратиться к БД SQLite. Для получения дополнительных деталей, смотрите раздел :ref:`9.25 <ch09_25>`.

.. index::
  pair: main; strict_acl_vars

===================  =========  =============  ==============
**strict_acl_vars**  Use: main  Type: boolean  Default: false
===================  =========  =============  ==============

Этот параметр контролирует, что происходит если ссылаются на синтаксически верную, но не заданную переменную ACL. Если он ложна (по умолчанию), подставляется пустая строка; если он истинна, создается ошибка. Для получения подробностей о переменных ACL смотрите раздел :ref:`40.17 <ch40_17>`

.. index::
  pair: main; strip_excess_angle_brackets

===============================  =========  =============  ==============
**strip_excess_angle_brackets**  Use: main  Type: boolean  Default: false
===============================  =========  =============  ==============

Если этот параметр задана, из элемента адреса “route-addr”, удаляются избыточные пары угловых скобок. Например, <<xxx@a.b.c.d>> обрабатывается как <xxx@a.b.c.d>. Если это в конверте, и сообщение передаётся другому MTA, лишние угловые скобки не передаются. Если этот параметр не задан, несколько пар угловых скобок вызывают ошибку синтаксиса.

.. index::
  pair: main; strip_trailing_dot

======================  =========  =============  ==============
**strip_trailing_dot**  Use: main  Type: boolean  Default: false
======================  =========  =============  ==============

Если этот параметр установлен, завершающая точка в конце домена, в адресе, игнорируется. Если это в конверте, и точка и сообщение передаётся другому MTA, точка не передаётся. Если этот параметр не задан, точка в конце домена вызывает синтаксическую ошибку. Однако, адреса в строках заголовков проверяются только когда ACL запрашивает проверку синтаксиса заголовков.

.. index::
  pair: main; syslog_duplication

======================  =========  =============  =============
**syslog_duplication**  Use: main  Type: boolean  Default: true
======================  =========  =============  =============

Когда Exim пишет логи в syslog, он пишет строки логов для своих трёх раздельных логов с различным приоритетом, таким образом, чтобы они, в принципе, могли быть разделены на хосте syslogd. Некоторые инсталляции не требуют этого разделения, и в этих случаях, дублирование определённых строк логов - неприятность. Если **syslog_duplication** установлена в ложь, лишь одна копия любых специфических строк логов пишется в syslog. Для строк, обычно идущих в оба лога - главный и отклонённых, версия для лога отклонённых (возможно, содержащая строки заголовков сообщения) записывается, с приоритетом LOG_NOTICE. Строки, обычно идущие в оба - главный и лог паники, пишутся с приоритетом LOG_ALERT.

.. index::
  pair: main; syslog_facility

===================  =========  ============  ==============
**syslog_facility**  Use: main  Type: string  Default: unset
===================  =========  ============  ==============

Этот параметр устанавливает имя “средства” syslog, используемого когда Exim пишет логи в syslog. Значение модет быть одной из строк “mail”, “user”, “news”, “uucp”, “daemon”, или “localx”, где “x” - число между 0 и 17. Если этот параметр не задан, используется “mail”. Для дополнительных деталей о записи в лог Exim`a смотрите главе :ref:`49 <ch49_00>`.

.. index::
  pair: main; syslog_processname

======================  =========  ============  =============
**syslog_processname**  Use: main  Type: string  Default: exim
======================  =========  ============  =============

Этот параметр устанавливает имя “ident” syslog`a, используемое когда Exim пишет логи в syslog. Значение может быть не более 32-х символов. Для дополнительных деталей о записи в лог Exim`a смотрите главу :ref:`49 <ch49_00>`.

.. index::
  pair: main; syslog_timestamp

====================  =========  =============  =============
**syslog_timestamp**  Use: main  Type: boolean  Default: true
====================  =========  =============  =============

Если параметр **syslog_timestamp** установлен в ложь, штампы времени в строках логов Exim`a опущены, когда эти строки посылаются в syslog. Для дополнительных деталей о записи в лог Exim`a смотрите главу  :ref:`49 <ch49_00>`.

.. index::
  pair: main; system_filter

=================  =========  =============  ==============
**system_filter**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Этот параметр определяет фильтр Exim`a, применяемый ко всем сообщениям в начале каждой попытки доставки, до завершения любой маршрутизации. Системные фильтры должны быть фильтрами Exim`a; они не могут быть фильтрами Sieve. Если системный фильтр создает любую доставку в файл или трубу, или любое новое почтовое сообщение, должны быть установлена соответствующий параметр “!system_filter_..._transport”, для определения, какие транспорты должны использоваться. Детали о этом средстве даны в главе :ref:`43 <ch43_00>`.

.. index::
  pair: main; system_filter_directory_transport

=====================================  =========  =============  ==============
**system_filter_directory_transport**  Use: main  Type: string†  Default: unset
=====================================  =========  =============  ==============

Этот параметр устанавливает драйвер транспорта, который будет использоваться, когда команда “save”, в системном фильтре сообщений, определяет путь заканчивающийся на “/”, подразумевая доставку каждого сообщения в отдельный файл в какой-то директории. В течение доставки, переменная $address_file содержит имя пути.

.. index::
  pair: main; system_filter_file_transport

================================  =========  =============  ==============
**system_filter_file_transport**  Use: main  Type: string†  Default: unset
================================  =========  =============  ==============

Этот параметр устанавливает драйвер транспорта, который будет использоваться, когда команда “save”, в системном фильтре сообщений, определяет путь не заканчивающийся на “/”. В течение доставки, переменная $address_file содержит имя пути.

.. index::
  pair: main; system_filter_group

=======================  =========  ============  ==============
**system_filter_group**  Use: main  Type: string  Default: unset
=======================  =========  ============  ==============

Этот параметр используется лишь когда задан параметр **system_filter_user**. Она устанавливает gid под которым работает системный фильтр, замещая любой gid ассоциированный с пользователем. Значение может быть цифровым или символическим.

.. index::
  pair: main; system_filter_pipe_transport

================================  =========  =============  ==============
**system_filter_pipe_transport**  Use: main  Type: string†  Default: unset
================================  =========  =============  ==============

Этот параметр определяет драйвер транспорта, который будет использоваться при использовании команды “pipe” в системном фильтре. В процессе доставки, переменная $address_pipe содержит команду трубы (pipe).

.. index::
  pair: main; system_filter_reply_transport

=================================  =========  =============  ==============
**system_filter_reply_transport**  Use: main  Type: string†  Default: unset
=================================  =========  =============  ==============

Этот параметр определяет драйвер транспорта, который будет использоваться при использовании команды “mail” в системном фильтре.

.. index::
  pair: main; system_filter_user

======================  =========  ============  ==============
**system_filter_user**  Use: main  Type: string  Default: unset
======================  =========  ============  ==============

Если этот параметр не задан, системный фильтр работает в главном процессе доставки Exim, как root. Когда этот параметр установлен, системный фильтр работает в отдельном процессе, под заданным пользователем. Если строка не состоит полностью из цифр, она ищется в БД паролей. Ошибка нахождения имени пользователя вызывает конфигурационную ошибку. Идентификатор группы - gid, или берётся из занных БД паролей, или определяется параметром **system_filter_group**. Когда uid задан в цифровом виде, **system_filter_group** должна быть установлена.

Если системный фильтр создает доставку “pipe”, “file”, или “reply”, для транспортировки используется uid под которым работает системный фильтр, если параметры транспорта не переопределяют этого. Обычно, вам необходимо устанавливать **system_filter_user** если системный фильтр производит эти виды доставок.

.. index::
  pair: main; tcp_nodelay

===============  =========  =============  =============
**tcp_nodelay**  Use: main  Type: boolean  Default: true
===============  =========  =============  =============

Если этот параметр установлен в ложь, это останавливает настройку параметра TCP_NODELAY, даемона Exim`a, на слушаемых сокетах. Установка TCP_NODELAY выключает “Nagle algorithm”, являющийся способом улучшить сетевую производительность в интерактивных (познаковых) ситуациях. Выключение его, должно немного улучшить работоспособность Exim`a, таким образом, это и установлено по умолчанию. Однако, выявляются некоторые кривые клиенты, с которыми невозможно совладать, и происходит таймаут. Поэтому присутствует этот параметр. Она имеет эффект только на те сокеты, которые установлены для слушающего даемона. Сокеты создаваемые транспортом smtp для доставки почты, всегда устанавливают TCP_NODELAY.

.. index::
  pair: main; timeout_frozen_after

========================  =========  ==========  ===========
**timeout_frozen_after**  Use: main  Type: time  Default: 0s
========================  =========  ==========  ===========

Если параметр **timeout_frozen_after** установлена во время большее нуля, замороженные сообщения любого вида, которые находятся в очереди больше данного времени, автоматически отменяются в следующую работу очереди. Если замороженное сообщение - это рикошет, он просто удаляется; иначе, отправителю посылается рикошет, в манере, подобной отмене параметра командной строки **-Mg**. Если вы хотите сделать таймаут замороженных рикошетов меньше, чем других видов замороженных сообщений, смотрите параметр **ignore_bounce_errors_after**.

.. note:: Значение по умолчанию - ноль - означает что нет таймаутов; с этой установкой, замороженное сообщение останется в очереди навсегда (за исключением любых рикошетов освобождаемых **ignore_bounce_errors_after**).

.. index::
  pair: main; timezone

============  =========  ============  ==============
**timezone**  Use: main  Type: string  Default: unset
============  =========  ============  ==============

Значение параметра **timezone** используется для установки переменной окружения TZ, при работе Exim`a (если она отличается от той, что была при входе). Это гарантирует, что все штампы времени, созданные Exim`ом, находятся в нужном часовом поясе. Если вы хотите, чтобы все штампы времени были в UTC (т.е. - GMT), вы должны установить

::
    
    timezone = UTC

Значение значение берётся из TIMEZONE_DEFAULT в *Local/Makefile*, или, если оно не задано, из значения переменной окружения TZ, при сборке Exim`a. Если **timezone** установлено в пустую строку, или строится при выполнении, любая существующая переменная TZ удаляется из переменных окружения, при работе Exim`a. Это соответствующее поведение для получения текущегов ремени на некоторых, но к сожалению не на всех, операционных системах.

.. index::
  pair: main; tls_advertise_hosts

=======================  =========  ================  ==============
**tls_advertise_hosts**  Use: main  Type: host list†  Default: unset
=======================  =========  ================  ==============

Когда Exim собран с поддержкой шифрованных соединений TLS, доступность команды STARTTLS, для установки шифрованных сессий, сообщается в EHLO лишь тем клиентским хостам, которые совпадают с этим параметром. Для подробной информации о поддержке Exim`ом TLS, смотрите главу :ref:`39 <ch39_00>`.

.. index::
  pair: main; tls_certificate

===================  =========  =============  ==============
**tls_certificate**  Use: main  Type: string†  Default: unset
===================  =========  =============  ==============

Значение этого параметра раскрывается, и должно быть абсолютным путём к файлу, содержащему серверные сертификаты. Тайный ключ сервера, как предполагается, также находится в этом файле, если не задан параметр **tls_privatekey**. Для дополнительных деталей, смотрите главу :ref:`39 <ch39_00>`.

.. note:: Сертификаты, заданные этим параметром, используются лишь когда Exim получает входящие сообщения как сервер. Если вы хотите предлагать для использования, когда сообщение посылается как клиент, вы должны установить параметр **tls_certificate** в подходящем **smtp** транспорте.

.. index::
  pair: main; tls_crl

===========  =========  =============  ==============
**tls_crl**  Use: main  Type: string†  Default: unset
===========  =========  =============  ==============

Этот параметр определяет список аннулирования сертификатов. Раскрытое значение может быть файлом, содержащим CLR в формате PEM.

.. index::
  pair: main; tls_dhparam

===============  =========  =============  ==============
**tls_dhparam**  Use: main  Type: string†  Default: unset
===============  =========  =============  ==============

Значение этого параметра раскрывается, и должно быть абсолютным путём к файлу, содержащему значения параметра DH, сервера. Это используется только для OpenSSL. Когда Exim собран с GnuTLS, этот параметр игнорируется. Для дополнительных деталей, смотрите раздел :ref:`39.2 <ch39_02>`.

.. index::
  pair: main; tls_on_connect_ports

========================  =========  =================  ==============
**tls_on_connect_ports**  Use: main  Type: string list  Default: unset
========================  =========  =================  ==============

Этот параметр определяет список входящих SSMTP (т.е. SMTPS) портов, которые должны управляться устаревшим SSMTP (SMTPS) протоколом, где сессии TLS устанавливается немедленно, без ожидания пока клиент даст команду STARTTLS. Для дополнительных деталей, смотрите раздел :ref:`13.4 <ch13_04>`.

.. index::
  pair: main; tls_privatekey

==================  =========  =============  ==============
**tls_privatekey**  Use: main  Type: string†  Default: unset
==================  =========  =============  ==============

Значение этого параметра раскрывается, и должно быть абсолютным путём к файлу, который содержит секретные ключи сервера. Если этот параметр не задан, или его раскрытие принудительно неудачно, или результат - пустая строка, предполагается что, частный ключ находится в том же файле, что и сертификаты сервера. Для дополнительных деталей, смотрите раздел :ref:`39.2 <ch39_02>`.

.. index::
  pair: main; tls_remember_esmtp

======================  =========  =============  ==============
**tls_remember_esmtp**  Use: main  Type: boolean  Default: false
======================  =========  =============  ==============

Если этот параметр установлена в истин, Exim нарушает RFC, помня, что он в состоянии “esmtp”, после успешных переговоров о TLS сессии. Это предоставялет поддержку кривых клиентов, которые не в состоянии послать новую команду HELO, после начала сессии TLS.

.. index::
  pair: main; tls_require_ciphers

=======================  =========  =============  ==============
**tls_require_ciphers**  Use: main  Type: string†  Default: unset
=======================  =========  =============  ==============

Этот параметр контролирует, какие шифры могут использоваться для входящей сессии TLS. Транспорт **smtp** имеет параметр с тем же самым именем, для контроля исходящих соединений. Этот параметр раскрывается для каждого соединения, таким образом, может изменяться для различных клиентов, если это требуется. Значение этого параметра должно быть списком разрешённых наборов шифров. Библиотеки OpenSSL и GnuTLS обрабатывают управление шифрами несколько различными способами. Если используется GnuTLS, клиент управляет предпочтительным порядком доступных шифров. Детали даны в разделах :ref:`39.4 <ch39_04>` и :ref:`39.5 <ch39_05>`.

.. index::
  pair: main; tls_try_verify_hosts

========================  =========  ================  ==============
**tls_try_verify_hosts**  Use: main  Type: host list†  Default: unset
========================  =========  ================  ==============

Смотрите ниже, параметр **tls_verify_hosts**.

.. index::
  pair: main; tls_verify_certificates

===========================  =========  =============  ==============
**tls_verify_certificates**  Use: main  Type: string†  Default: unset
===========================  =========  =============  ==============

Значение этого параметра раскрывается, и должно быть абсолютным путём к файлу, содержащему разрешённые сертификаты для клиентов, которые совпадают с **tls_verify_hosts** или **tls_try_verify_hosts**. Альтернативно, если вы используете OpenSSL, вы можете установить **tls_verify_certificates** в имя директории содержащей файлы сертификатов. Это не работает с GnuTLS; параметр должен быть установлен в имя одного файла, если вы используете GnuTLS.

.. index::
  pair: main; tls_verify_hosts

====================  =========  ================  ==============
**tls_verify_hosts**  Use: main  Type: host list†  Default: unset
====================  =========  ================  ==============

Этот параметр, наряду с **tls_try_verify_hosts**, контролирует проверку сертификатов клиентов. Ожидаемые сертификаты заданы параметром **tls_verify_certificates**, которая должна быть установлена. Если установлена **tls_verify_hosts** или **tls_try_verify_hosts** и незадана **tls_verify_certificates**, происходит конфигурационная ошибка.

Любые клиенты, совпадающие с **tls_verify_hosts**, принудительно подвергаются **tls_verify_certificates**. Когда клиент инициирует TLS сессию, он должен предоставить один из перечисленных сертификатов. Если он этого не делает, соединение разрывается. Внимание: Включение хоста в **tls_verify_hosts** не требует чтобы хост использовал TLS. Он всё ещё может посылать SMTP команды через нешифрованное соединение. Вынудить клиента использовать TLS можно отдельно - используя ACL для отвержения неверных команд, когда соединение не криптованное.

Более слабая форма проверки предоставляется параметром **tls_try_verify_hosts**. Если клиент совпадает с этим параметром (но не с **tls_verify_hosts**), Exim запрашивает сертификат, и проверяет что он соотетствует **tls_verify_certificates**, но не разрывает соединение, если сертификата нет, или он не совпадает. Это может быть определено в ACL, делающей возможной осуществление политики типа “принимать для релея лишь если был передан проверенный сертификат, но принимать для локальной доставки, если зашифрованное, даже без подтверждённого сертификата”.

У хостов, не совпадающих с ни с одним из этих списков, не запрашиваются сертификаты.

.. index::
  pair: main; trusted_groups

==================  =========  ==================  ==============
**trusted_groups**  Use: main  Type: string list†  Default: unset
==================  =========  ==================  ==============

Этот параметр раскрывается лишь один раз, при старте процесса Exim`a. Если она задана, доверенным является любой процесс, работающий в одной из перечисленных групп, или у которого одна из них является дополнительной. Группы могут быть заданы в цифровой форме, или по именам. Смотрите раздел :ref:`5.2 <ch05_02>`, для получения дополнительной информации о том, что разрешено делать вызывающим доверенным группам. Если не установлены ни **trusted_groups**, ни **trusted_users**, доверие будет лишь к root и пользователю Exim`a.

.. index::
  pair: main; trusted_users
 
=================  =========  ==================  ==============
**trusted_users**  Use: main  Type: string list†  Default: unset
=================  =========  ==================  ==============

Этот параметр раскрывается лишь один раз, при старте процесса Exim`a. Если она задана, доверенным является любой процесс, работающий под перечисленным пользователем. Пользователи могут быть заданы в цифровой форме, или по именам. Смотрите раздел :ref:`5.2 <ch05_02>`, для получения дополнительной информации о том, что разрешено делать вызывающим доверенным пользователям. Если не установлены ни **trusted_groups**, ни **trusted_users**, доверие будет лишь к root и пользователю Exim`a.

.. index::
  pair: main; unknown_login

=================  =========  =============  ==============
**unknown_login**  Use: main  Type: string†  Default: unset
=================  =========  =============  ==============

Это - специальная особенность, для использования в необычных конфигурациях. По умолчанию, если используя *getpwuid()* не может быть найден uid того, кто вызывает Exim, Exim отключается. Параметр **unknown_login** может использоваться для задания логина использующегося в таких случаях. Этот параметр раскрывается, таким образом, может быть задано значение типа “user$caller_uid”. Когда используется параметр **unknown_login**, значение **unknown_username** используется для реального имени пользователя (поле geos), если оно не было задано параметром комагндной строки **-F**.

.. index::
  pair: main; unknown_username

====================  =========  =============  ==============
**unknown_username**  Use: main  Type: string   Default: unset
====================  =========  =============  ==============

Смотрите **unknown_login**.

.. index::
  pair: main; untrusted_set_sender

========================  =========  ===================  ==============
**untrusted_set_sender**  Use: main  Type: address list†  Default: unset
========================  =========  ===================  ==============

Когда недоверенный пользователь передаёт сообщение Exim`y используя стандартный ввод, Exim, обычно, создаёт адрес отправителя конверта из логина пользователя и квалификационного домена по умолчанию. Данные из параметра командной строки **-f** (для установки отправителей конверта не-SMTP сообщений) или команды SMTP MAIL (если используются **-bs** или **-bS**), игнорируются.

Однако, недоверенным пользователям разрешено устанавливать пустой адрес конверта, для объявления, что сообщение никогда не должно создавать рикошетов. Например::

    exim -f '<>' user@domain.example

Параметр **untrusted_set_sender** разрешает вам позволить недоверенным пользователям устанавливать иного отправителя конверта, управляемым способом. Когда она установлена, недоверенным пользователям разрешено устанавливать адрес отправителя конверта, который совпадает с любым шаблоном в этом списке. Как и все списки адресов, строка раскрывается. Идентичность пользователя находится в $sender_ident, таким образом, вы можете, например, ограничить пользователей установкой отправителей начинающихся с их логинов, сопровождаемых дефисом, путём установки похожей на эту::

    untrusted_set_sender = ^$sender_ident-

Если вы хотите разрешить недоверенным пользователям без ограничений устанавливать адрес отправителя конверта, вы можете использовать::

    untrusted_set_sender = *

Параметр **untrusted_set_sender** применяется ко всем формам локального воода, но лишь к установке отправителя конверта. Она не позволяет недоверенным пользователям устанавливать иные параметры, которые доверенные пользователи могут использовать для переопределения параметров сообщений. Кроме этого, она не мешает Exim`y удалить из сообщения существующий заголовок “Sender:”, или добавить заголовок “Sender:”, если имеется необходимость. Смотрите параметры **local_sender_retain** и **local_from_check**, для способов замещаения этих действий. Обработка заголовка “Sender:” также описана в разделе :ref:`44.16 <ch44_16>`.

Строки логов, для прибывших сообщений, показывают отправителя конверта сопровождаемого “<=”. Для локальных сообщений, логин пользователя всегда показан, после “U=”. В отображении **-bp**, и в мониторе Exim`a, если недоверенный пользователь устанавливает адрес отправителя конверта, логин пользователя показан, в круглых скобках, после адреса отправителя.

.. index::
  pair: main; uucp_from_pattern

=====================  =========  ============  ==================
**uucp_from_pattern**  Use: main  Type: string  Default: see below
=====================  =========  ============  ==================

Некоторые приложения, которые передают сообщения MTA через интерфейс командной строки, используют начальную строку, начинающуюся с “From ”, для передачи конверта сообщения. В частности, это используется софтом UUCP. Exim распознаёт такую строку регулярным выражением, которое задано в **uucp_from_pattern**. Когда шаблон совпадает, адрес отправителя конструируется путём раскрытия содержимого **uucp_from_sender**, при условии, что Exim вызывает доверенный пользователь. По умолчанию шаблон распознаёт строки в следующих двух формах::

    From ph10 Fri Jan  5 12:35 GMT 1996
    From ph10 Fri, 7 Jan 97 14:00:00 GMT

Шаблон можно увидеть путём запуска

::

    exim -bP uucp_from_pattern

Он проверяет только с точностью до часов и минут, и разрешает двух или четырёх цифровой год во втором случае. Первое слово, после “From ” совпадает с регулярным выражением с субшаблоном. Значение по умолчанию для **uucp_from_sender** - “$1”, использующее лишь первое слово (“ph10”, в примере выше), как отправителя сообщения. Также смотрите параметр **ignore_fromline_hosts**.

.. index::
  pair: main; uucp_from_sender

====================  =========  =============  ===========
**uucp_from_sender**  Use: main  Type: string†  Default: $1
====================  =========  =============  ===========

Смотрите выше, параметр **uucp_from_pattern**.

.. index::
  pair: main; warn_message_file

=====================  =========  ============  ==============
**warn_message_file**  Use: main  Type: string  Default: unset
=====================  =========  ============  ==============

Этот параметр задаёт файл шаблона, содержащий параграфы текста, используемого для составления предупреждающего сообщения, посылаемого Exim`ом, когда сообщение пробыло в очереди указанное время, как задано в **delay_warning**. Детали о содержимом этого файла даны в главе :ref:`46 <ch46_00>`. Также смотрите параметр **bounce_message_file**.

.. index::
  pair: main; write_rejectlog

===================  =========  =============  =============
**write_rejectlog**  Use: main  Type: boolean  Default: true
===================  =========  =============  =============

Если этот параметр установлен в ложь, Exim ничего не пишет в соответствующий лог отклонённых. Смотрите главу :ref:`49 <ch49_00>`, для получения деталей о том, что Exim пишет в свои логи.


.. [#] в DNS - прим. lissyara
.. [#] пользователя, видимо - прим. lissyara
.. [#] с иcпользованием IP-адреса вместо домена - прим. lissyara
.. [#] чё-то не нашёл синонима в русском - короче люди, осуществляющие поддержку - прим. lissyara
.. [#] видимо, это был пример - прим. lissyara
.. [#] непонял, по идее, надо увеличить же? - прим. lissyara
.. [#] без доменной части - прим. lissyara
.. [#] этой опции, видимо - прим. lissyara
.. [#] multi-homed - лучше не перевёл - прим. lissyara
.. [#] команды - прим. lissyara
